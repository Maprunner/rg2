{"version":3,"file":"manager-BMrk1T3L.js","sources":["../../src/js/courseparser.js","../../src/js/managerutils.js","../../src/js/resultparsercsv.js","../../src/js/resultparseriofv2.js","../../src/js/resultparseriofv3.js","../../src/js/resultparser.js","../../src/js/manager.js"],"sourcesContent":["import { Controls } from \"./controls\"\r\nimport { showWarningDialog } from \"./utils\"\r\n\r\nexport class CourseParser {\r\n  constructor(e, worldfile, localWorldfile) {\r\n    this.courses = []\r\n    this.courseClassMapping = []\r\n    this.newcontrols = new Controls()\r\n    this.courses.length = 0\r\n    this.courseClassMapping.length = 0\r\n    this.fromOldCondes = false\r\n    this.coursesGeoreferenced = false\r\n    this.newcontrols.deleteAllControls()\r\n    // holding copies of worldfiles: not ideal but it works\r\n    this.localWorldfile = localWorldfile\r\n    this.worldfile = worldfile\r\n    this.processCoursesXML(e.target.result)\r\n    this.addControlCount()\r\n    return {\r\n      courses: this.courses,\r\n      newcontrols: this.newcontrols,\r\n      mapping: this.courseClassMapping,\r\n      georeferenced: this.coursesGeoreferenced\r\n    }\r\n  }\r\n\r\n  processCoursesXML(rawXML) {\r\n    let xml = null\r\n    try {\r\n      xml = new DOMParser().parseFromString(rawXML, \"text/xml\")\r\n    } catch (err) {\r\n      showWarningDialog(\"XML file error\", \"File is not a valid XML course file.\")\r\n      return\r\n    }\r\n    const nodelist = xml.getElementsByTagName(\"CourseData\")\r\n    if (nodelist.length === 0) {\r\n      if (xml.documentElement.nodeName === \"kml\") {\r\n        this.processKMLCourses(xml)\r\n      } else {\r\n        showWarningDialog(\"XML file error\", \"File is not a valid XML course file. CourseData element missing.\")\r\n      }\r\n      return\r\n    }\r\n    const version = this.getVersion(xml)\r\n    switch (version) {\r\n      case \"2.0.3\":\r\n        this.processIOFV2XMLCourses(xml)\r\n        break\r\n      case \"3.0\":\r\n        this.processIOFV3XMLCourses(xml)\r\n        break\r\n      default:\r\n        showWarningDialog(\"XML file error\", \"Invalid IOF file format. Version \" + version + \" not supported.\")\r\n    }\r\n  }\r\n\r\n  getVersion(xml) {\r\n    let version = \"\"\r\n    // test for IOF Version 2\r\n    let nodelist = xml.getElementsByTagName(\"IOFVersion\")\r\n    if (nodelist.length > 0) {\r\n      version = nodelist[0].getAttribute(\"version\")\r\n    }\r\n    if (version === \"\") {\r\n      // test for IOF Version 3\r\n      nodelist = xml.getElementsByTagName(\"CourseData\")\r\n      if (nodelist.length > 0) {\r\n        version = nodelist[0].getAttribute(\"iofVersion\").trim()\r\n        this.setCreator(nodelist[0].getAttribute(\"creator\").trim())\r\n      }\r\n    }\r\n    return version\r\n  }\r\n\r\n  setCreator(text) {\r\n    // creator looks like \"Condes version 10.1.1\": need to extract version number\r\n    const introLength = 15\r\n    // allow handling of files from Condes before v10.1 which use original worldfile rather than WGS-84 as expected by IOF scheme\r\n    if (text.indexOf(\"Condes\") > -1) {\r\n      if (text.length > introLength) {\r\n        // parseFloat ignores everything from second decimal poin if it finds one\r\n        // so we will get something like 10.1 from 10.1.1\r\n        const version = parseFloat(text.substring(introLength))\r\n        if (version < 10.1) {\r\n          this.fromOldCondes = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  processIOFV3XMLCourses(xml) {\r\n    // extract all controls\r\n    let nodelist = xml.getElementsByTagName(\"Control\")\r\n    // only need first-level Controls\r\n    let pt = { x: 0, y: 0 }\r\n    let controls = []\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      if (nodelist[i].parentNode.nodeName === \"RaceCourseData\") {\r\n        const code = nodelist[i].getElementsByTagName(\"Id\")[0].textContent\r\n        const latlng = nodelist[i].getElementsByTagName(\"Position\")\r\n        if (this.localWorldfile.valid && latlng.length > 0) {\r\n          pt = this.getXYFromLatLng(latlng)\r\n          this.coursesGeoreferenced = true\r\n        } else {\r\n          // only works if all controls have lat/lon or none do: surely a safe assumption...\r\n          pt = this.getXYFromMapPosition(nodelist[i].getElementsByTagName(\"MapPosition\"))\r\n        }\r\n        let control = {}\r\n        // don't want to save crossing points\r\n        if (nodelist[i].getAttribute(\"type\") !== \"CrossingPoint\") {\r\n          this.newcontrols.addControl(code.trim(), pt.x, pt.y)\r\n          control.id = i\r\n          if (latlng.length > 0) {\r\n            control.lat = parseFloat(latlng[0].getAttribute(\"lat\"))\r\n            control.lng = parseFloat(latlng[0].getAttribute(\"lng\"))\r\n          } else {\r\n            control.lat = 0\r\n            control.lng = 0\r\n          }\r\n          control.x = pt.x\r\n          control.y = pt.y\r\n          controls.push(control)\r\n        }\r\n      }\r\n    }\r\n    // extract all courses\r\n    nodelist = xml.getElementsByTagName(\"Course\")\r\n    this.extractV3Courses(nodelist)\r\n    // extract all course/class mappings\r\n    nodelist = xml.getElementsByTagName(\"ClassCourseAssignment\")\r\n    this.extractV3CourseClassMapping(nodelist)\r\n  }\r\n\r\n  processKMLCourses(xml) {\r\n    // reads OOM KML files: assumes we have a WGS-84 georeferenced map...\r\n    // extract all controls\r\n    let controls = []\r\n    this.coursesGeoreferenced = true\r\n    const places = xml.getElementsByTagName(\"Placemark\")\r\n    for (let i = 0; i < places.length; i = i + 1) {\r\n      let pt = {}\r\n      const code = places[i].getElementsByTagName(\"name\")[0].childNodes[0].nodeValue.trim()\r\n      const point = places[i].getElementsByTagName(\"Point\")[0]\r\n      const coords = point.getElementsByTagName(\"coordinates\")[0].childNodes[0].nodeValue.trim().split(\",\")\r\n      const lat = +coords[1]\r\n      const lng = +coords[0]\r\n      pt.x = this.worldfile.getX(lng, lat)\r\n      pt.y = this.worldfile.getY(lng, lat)\r\n      this.newcontrols.addControl(code.trim(), pt.x, pt.y)\r\n      let control = {}\r\n      control.id = i + 1\r\n      control.lat = lat\r\n      control.lng = lng\r\n      control.x = pt.x\r\n      control.y = pt.y\r\n      controls.push(control)\r\n    }\r\n    // set up dummy score course\r\n    let codes = []\r\n    const courseName = \"Course 1\"\r\n    const className = \"Course 1\"\r\n    codes = this.newcontrols.controls.map(function (control) {\r\n      return control.code\r\n    })\r\n    // courseid 0 for now: set when result mapping is known\r\n    this.courses.push({\r\n      courseid: 0,\r\n      x: [],\r\n      y: [],\r\n      codes: codes,\r\n      name: courseName\r\n    })\r\n    this.courseClassMapping.push({ course: courseName, className: className })\r\n    document.getElementById(\"rg2-select-course-file\").classList.add(\"is-valid\")\r\n  }\r\n\r\n  getXYFromLatLng(latLng) {\r\n    let pt = { x: 0, y: 0 }\r\n    const lat = parseFloat(latLng[0].getAttribute(\"lat\"))\r\n    const lng = parseFloat(latLng[0].getAttribute(\"lng\"))\r\n    // handle old Condes-specific georeferencing\r\n    if (this.fromOldCondes) {\r\n      // use original map worldfile\r\n      pt.x = this.localWorldfile.getX(lng, lat)\r\n      pt.y = this.localWorldfile.getY(lng, lat)\r\n    } else {\r\n      // use WGS-84 worldfile as expected (?) by IOF V3 schema\r\n      pt.x = this.worldfile.getX(lng, lat)\r\n      pt.y = this.worldfile.getY(lng, lat)\r\n    }\r\n    return pt\r\n  }\r\n\r\n  processIOFV2XMLCourses(xml) {\r\n    // extract all start controls\r\n    this.extractV2Controls(xml.getElementsByTagName(\"StartPoint\"), \"StartPointCode\")\r\n    // extract all normal controls\r\n    this.extractV2Controls(xml.getElementsByTagName(\"Control\"), \"ControlCode\")\r\n    // extract all finish controls\r\n    this.coursesGeoreferenced = this.extractV2Controls(xml.getElementsByTagName(\"FinishPoint\"), \"FinishPointCode\")\r\n    if (this.coursesGeoreferenced) {\r\n      if (this.localWorldfile.valid) {\r\n        for (let i = 0; i < this.newcontrols.controls.length; i += 1) {\r\n          const x = this.newcontrols.controls[i].x\r\n          const y = this.newcontrols.controls[i].y\r\n          this.newcontrols.controls[i].x = this.localWorldfile.getX(x, y)\r\n          this.newcontrols.controls[i].y = this.localWorldfile.getY(x, y)\r\n        }\r\n      }\r\n    }\r\n    // extract all courses\r\n    this.extractV2Courses(xml.getElementsByTagName(\"Course\"))\r\n  }\r\n\r\n  extractV2Courses(nodelist) {\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      let codes = []\r\n      let x = []\r\n      let y = []\r\n      const name = nodelist[i].getElementsByTagName(\"CourseName\")[0].textContent.trim()\r\n      codes = this.extractCodesFromControlList(nodelist[i], \"ControlCode\")\r\n      // add start code at beginning of array\r\n      codes.unshift(nodelist[i].getElementsByTagName(\"StartPointCode\")[0].textContent.trim())\r\n      codes.push(nodelist[i].getElementsByTagName(\"FinishPointCode\")[0].textContent.trim())\r\n      // courseid 0 for now: set when result mapping is known\r\n      this.courses.push({ courseid: 0, x: x, y: y, codes: codes, name: name })\r\n    }\r\n    document.getElementById(\"rg2-select-course-file\").classList.add(\"is-valid\")\r\n  }\r\n\r\n  extractV3Courses(nodelist) {\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      let codes = []\r\n      let x = []\r\n      let y = []\r\n      const name = nodelist[i].getElementsByTagName(\"Name\")[0].textContent.trim()\r\n      codes = this.extractCodesFromControlList(nodelist[i], \"Control\")\r\n      // courseid 0 for now: set when result mapping is known\r\n      this.courses.push({ courseid: 0, x: x, y: y, codes: codes, name: name })\r\n    }\r\n    document.getElementById(\"rg2-select-course-file\").classList.add(\"is-valid\")\r\n  }\r\n\r\n  extractV3CourseClassMapping(nodelist) {\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      const course = nodelist[i].getElementsByTagName(\"CourseName\")[0].textContent.trim()\r\n      const className = nodelist[i].getElementsByTagName(\"ClassName\")[0].textContent.trim()\r\n      this.courseClassMapping.push({ course: course, className: className })\r\n    }\r\n    document.getElementById(\"rg2-select-course-file\").classList.add(\"is-valid\")\r\n  }\r\n\r\n  extractCodesFromControlList(nodeList, tagName) {\r\n    // tagName depends on IOF version being parsed\r\n    const controlList = nodeList.getElementsByTagName(\"CourseControl\")\r\n    let codes = []\r\n    for (let i = 0; i < controlList.length; i += 1) {\r\n      // OCAD course files add a \"Start\" control at map changes which shows\r\n      // shows up as a spurious control unless we ignore it here\r\n      if (i === 0 || controlList[i].getAttribute(\"type\") !== \"Start\") {\r\n        const code = controlList[i].getElementsByTagName(tagName)[0].textContent.trim();\r\n        // if control code doesn't exist it was a crossing point so we don't need it\r\n        if (this.validControlCode(code)) {\r\n          codes.push(code);\r\n        }\r\n      }\r\n    }\r\n    return codes\r\n  }\r\n\r\n  // returns true if controls are georeferenced\r\n  extractV2Controls(nodelist, type) {\r\n    let isGeoref = false\r\n    let pt = { x: 0, y: 0 }\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      const code = nodelist[i].getElementsByTagName(type)[0].textContent\r\n      const geopos = nodelist[i].getElementsByTagName(\"ControlPosition\")\r\n      // subtle bug and a half #190\r\n      // if you have an IOF XML V2 file which has georeferenced controls AND\r\n      // the map file itself isn't georeferenced\r\n      // then you need to use X, Y and not the georeferenced co-ordinates\r\n      if (geopos.length > 0 && this.localWorldfile.valid) {\r\n        pt.x = parseFloat(geopos[0].getAttribute(\"x\"))\r\n        pt.y = parseFloat(geopos[0].getAttribute(\"y\"))\r\n        isGeoref = true\r\n      } else {\r\n        pt = this.getXYFromMapPosition(nodelist[i].getElementsByTagName(\"MapPosition\"))\r\n      }\r\n      this.newcontrols.addControl(code.trim(), pt.x, pt.y)\r\n    }\r\n    return isGeoref\r\n  }\r\n\r\n  getXYFromMapPosition(mapPosition) {\r\n    // #269 allow for getting a comma instead of a decimal point\r\n    return {\r\n      x: mapPosition[0].getAttribute(\"x\").replace(\",\", \".\"),\r\n      y: mapPosition[0].getAttribute(\"y\").replace(\",\", \".\")\r\n    }\r\n  }\r\n\r\n  // check if a given control code is in the list of known controls\r\n  validControlCode(code) {\r\n    const controls = this.newcontrols.controls\r\n    for (let i = 0; i < controls.length; i += 1) {\r\n      if (controls[i].code === code) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  addControlCount() {\r\n    for (let i = 0; i < this.courses.length; i += 1) {\r\n      // codes include S and F so need to subtract 2 from length\r\n      this.courses[i].controlcount = this.courses[i].codes.length - 2\r\n    }\r\n  }\r\n}\r\n","import { decode } from \"html-entities\"\r\nimport { generateSelectOption, createModalDialog, showWarningDialog } from \"./utils\"\r\n\r\nexport function confirmDeleteEvent(doDeleteEvent) {\r\n  const id = document.getElementById(\"rg2-edit-event-selected\").value\r\n  let dlg = {}\r\n  dlg.body = \"Event \" + id + \" will be deleted. Are you sure?\"\r\n  dlg.title = \"Confirm event delete\"\r\n  dlg.classes = \"rg2-confirm-delete-event-dialog\"\r\n  dlg.doText = \"Delete event\"\r\n  dlg.onDo = doDeleteEvent\r\n  createModalDialog(dlg)\r\n}\r\n\r\nexport function confirmDeleteRoute(doDeleteRoute) {\r\n  const routeid = document.getElementById(\"rg2-route-selected\").value\r\n  if (routeid === \"undefined\") {\r\n    showWarningDialog(\"Warning\", \"No route selected.\")\r\n    return\r\n  }\r\n  let dlg = {}\r\n  dlg.body = \"Route \" + routeid + \" will be permanently deleted. Are you sure?\"\r\n  dlg.title = \"Confirm route delete\"\r\n  dlg.classes = \"rg2-confirm-route-delete-dialog\"\r\n  dlg.doText = \"Delete route\"\r\n  dlg.onDo = doDeleteRoute\r\n  createModalDialog(dlg)\r\n}\r\n\r\nexport function confirmDeleteUnusedMaps(unusedMaps, doDeleteUnusedMaps) {\r\n  const boxes = document.querySelectorAll(\".unused-map input[type=checkbox]:checked\")\r\n  let checked = []\r\n  for (let box of boxes) {\r\n    if (box.checked) {\r\n      checked.push(parseInt(box.dataset.mapId, 10))\r\n    }\r\n    for (let i = 0; i < unusedMaps.length; i += 1) {\r\n      if (checked.indexOf(unusedMaps[i].mapid) > -1) {\r\n        unusedMaps[i].delete = true\r\n      } else {\r\n        unusedMaps[i].delete = false\r\n      }\r\n    }\r\n  }\r\n  if (checked.length === 0) {\r\n    showWarningDialog(\"Warning\", \"No maps selected.\")\r\n    return unusedMaps\r\n  }\r\n  const dlg = {}\r\n  dlg.body = \"Selected maps will be deleted. Are you sure?\"\r\n  dlg.title = \"Confirm map deletion\"\r\n  dlg.doText = \"Delete maps\"\r\n  dlg.onDo = doDeleteUnusedMaps\r\n  createModalDialog(dlg)\r\n  return unusedMaps\r\n}\r\n\r\nexport function displayUnusedMaps(maps) {\r\n  let html = \"<div class='title'>ID</div><div class='title'>Name</div><div><i class='bi-trash'></i></div>\"\r\n  if (maps.length === 0) {\r\n    html += \"<div></div><div>None found.</div><div></div>\"\r\n    document.getElementById(\"btn-delete-unused-maps\").setAttribute(\"disabled\", \"\")\r\n  } else {\r\n    for (let i = 0; i < maps.length; i += 1) {\r\n      html += \"<div>\" + maps[i].mapid + \"</div>\"\r\n      html += \"<div>\" + maps[i].name + \"</div>\"\r\n      html += \"<div class='unused-map'><input type='checkbox' data-map-id=\" + maps[i].mapid + \"></div>\"\r\n    }\r\n    document.getElementById(\"btn-delete-unused-maps\").removeAttribute(\"disabled\")\r\n  }\r\n  document.getElementById(\"rg2-unused-maps\").innerHTML = html\r\n}\r\n\r\nexport function getEventEditDropdown(events, activeID) {\r\n  let html = activeID ? \"\" : generateSelectOption(null, \"No event selected\", true)\r\n  // loop backwards so most recent event is first in list\r\n  for (let i = events.length - 1; i > -1; i -= 1) {\r\n    html += generateSelectOption(\r\n      events[i].kartatid,\r\n      events[i].kartatid + \": \" + events[i].date + \": \" + decode(events[i].name),\r\n      activeID === events[i].kartatid\r\n    )\r\n  }\r\n  return html\r\n}\r\n\r\nexport function getEventLevelDropdown() {\r\n  let html = \"\"\r\n  const text = [\"Select level\", \"Training\", \"Local\", \"Regional\", \"National\", \"International\"]\r\n  const values = [\"X\", \"T\", \"L\", \"R\", \"N\", \"I\"]\r\n  for (let i = 0; i < text.length; i += 1) {\r\n    html += generateSelectOption(values[i], text[i], i === 0)\r\n  }\r\n  return html\r\n}\r\n\r\nfunction hasZeroTime(time) {\r\n  if (time === 0 || time === \"0\" || time === \"0:00\" || time === \"00:00\") {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport function sortResultItems(a, b) {\r\n  // called after final courseids allocated so this is safe\r\n  if (a.courseid !== b.courseid) {\r\n    return a.courseid - b.courseid\r\n  }\r\n  if (a.position !== \"\" && b.position !== \"\") {\r\n    // sort by position, if available\r\n    return a.position - b.position\r\n  }\r\n  if (a.position === \"\" && b.position !== \"\") {\r\n    return 1\r\n  }\r\n  if (a.position !== \"\" && b.position === \"\") {\r\n    return -1\r\n  }\r\n  // sort by time, if available\r\n  if (hasZeroTime(a.time) && hasZeroTime(b.time)) {\r\n    // sort by name, when no time\r\n    return a.name - b.name\r\n  }\r\n  return a.time - b.time\r\n}\r\n\r\nexport function testForInvalidCharacters(rawtext) {\r\n  // takes in text read from a results file and checks it has converted to UTF-8 correctly\r\n  let count = 0\r\n  for (let i = 0; i < rawtext.length; i += 1) {\r\n    // Unicode U+FFFD (65533) is the replacement character used to replace an incoming character whose value is unknown or unrepresentable\r\n    // see http://www.fileformat.info/info/unicode/char/0fffd/index.htm\r\n    if (rawtext.charCodeAt(i) === 65533) {\r\n      count += 1\r\n    }\r\n  }\r\n  return count\r\n}\r\n","import { formatSecsAsMMSS, getSecsFromHHMM, getSecsFromHHMMSS, showWarningDialog } from \"./utils\"\r\n\r\nexport class ResultParserCSV {\r\n  constructor(rawCSV) {\r\n    this.results = []\r\n    this.CSVFormat = {}\r\n    this.separator = \"\"\r\n    this.valid = true\r\n    this.processResultsCSV(rawCSV)\r\n    return { results: this.results, valid: this.valid }\r\n  }\r\n\r\n  extractResult(fields, course, controls) {\r\n    const FIRST_NAME_IDX = 0\r\n    const SURNAME_IDX = 1\r\n    const CLUB_IDX = 2\r\n    const START_TIME_IDX = 3\r\n    let result = {}\r\n    result.chipid = 0\r\n    result.name = (fields[FIRST_NAME_IDX] + \" \" + fields[SURNAME_IDX] + \" \" + fields[CLUB_IDX]).trim()\r\n    result.dbid = result.chipid + \"__\" + result.name\r\n    result.starttime = getSecsFromHHMM(fields[START_TIME_IDX])\r\n    result.club = fields[CLUB_IDX]\r\n    result.course = course\r\n    result.controls = controls\r\n    const info = this.extractSpklasseSplits(fields)\r\n    result.splits = info.splits\r\n    result.codes = info.codes\r\n    result.time = formatSecsAsMMSS(info.totaltime)\r\n    this.results.push(result)\r\n  }\r\n\r\n  extractSingleCSVResult(fields) {\r\n    let result = {}\r\n    result.valid = true\r\n    result.chipid = fields[this.CSVFormat.CHIP_IDX]\r\n    // delete quotes from CSV file: output from MERCS\r\n    result.name = (fields[this.CSVFormat.FIRST_NAME_IDX] + \" \" + fields[this.CSVFormat.SURNAME_IDX])\r\n      .trim()\r\n      .replace(/\"/g, \"\")\r\n    result.dbid = fields[this.CSVFormat.DB_IDX]\r\n    result.starttime = getSecsFromHHMMSS(fields[this.CSVFormat.START_TIME_IDX])\r\n    result.time = fields[this.CSVFormat.TOTAL_TIME_IDX]\r\n    result.position = this.getPosition(fields)\r\n    result.status = this.getSICSVStatus(fields[this.CSVFormat.NC_IDX], fields[this.CSVFormat.CLASSIFIER_IDX])\r\n    result.club = fields[this.CSVFormat.CLUB_IDX].trim().replace(/\"/g, \"\")\r\n    result.course = fields[this.CSVFormat.COURSE_IDX]\r\n    if (result.course === \"\") {\r\n      result.valid = false\r\n    }\r\n    result.controls = parseInt(fields[this.CSVFormat.NUM_CONTROLS_IDX], 10)\r\n    const info = this.extractSISplits(fields, result.controls)\r\n    result.splits = info.splits\r\n    // add finish split\r\n    if (result.splits !== \"\") {\r\n      result.splits += \";\"\r\n    }\r\n    result.splits += getSecsFromHHMMSS(result.time)\r\n    result.codes = info.codes\r\n    return result\r\n  }\r\n\r\n  extractSISplits(fields, controls) {\r\n    let nextsplit = this.CSVFormat.FIRST_SPLIT_IDX\r\n    let nextcode = this.CSVFormat.FIRST_CODE_IDX\r\n    let result = {}\r\n    result.splits = \"\"\r\n    result.codes = []\r\n    for (let i = 0; i < controls; i += 1) {\r\n      if (fields[nextcode]) {\r\n        if (i > 0) {\r\n          result.splits += \";\"\r\n        }\r\n        result.codes[i] = fields[nextcode]\r\n        result.splits += getSecsFromHHMMSS(fields[nextsplit])\r\n      }\r\n      nextsplit += this.CSVFormat.STEP\r\n      nextcode += this.CSVFormat.STEP\r\n    }\r\n    return { splits: result.splits, codes: result.codes }\r\n  }\r\n\r\n  extractSpklasseSplits(fields) {\r\n    const FIRST_SPLIT_IDX = 4\r\n    let splits = \"\"\r\n    let codes = []\r\n    let totaltime = 0\r\n    for (let i = 0; i < fields.length - FIRST_SPLIT_IDX; i += 1) {\r\n      if (i > 0) {\r\n        splits += \";\"\r\n      }\r\n      codes[i] = \"X\"\r\n      totaltime += getSecsFromHHMMSS(fields[i + FIRST_SPLIT_IDX])\r\n      splits += totaltime\r\n    }\r\n    return { splits: splits, codes: codes, totaltime: totaltime }\r\n  }\r\n\r\n  getCSVFormat(headers) {\r\n    // not a pretty function but it should allow some non-standard CSV formats to be processed such as OEScore output\r\n    // define required column headers and allowable variations\r\n    const titles = [\r\n      [\"si card\", \"chipno\", \"sicard\", \"database id\"],\r\n      [\"database id\"],\r\n      [\"surname\"],\r\n      [\"first name\"],\r\n      [\"nc\", \"classifier\"],\r\n      [\"start\"],\r\n      [\"time\"],\r\n      [\"classifier\"],\r\n      [\"city\", \"club\"],\r\n      [\"short\"],\r\n      [\"course\"],\r\n      [\"course controls\"],\r\n      [\"pl\", \"place\"],\r\n      [\"start punch\"],\r\n      [\"control1\"],\r\n      [\"punch1\"],\r\n      [\"control2\"]\r\n    ]\r\n    let values = []\r\n    const fields = headers.split(this.separator).map(function (str) {\r\n      return str.toLowerCase()\r\n    })\r\n    let found = false\r\n    for (let i = 0; i < titles.length; i += 1) {\r\n      found = false\r\n      for (let j = 0; j < fields.length; j += 1) {\r\n        if (titles[i].includes(fields[j])) {\r\n          values[i] = j\r\n          found = true\r\n          break\r\n        }\r\n      }\r\n      if (!found) {\r\n        // stop if we didn't find what we needed\r\n        break\r\n      }\r\n    }\r\n\r\n    if (found) {\r\n      this.setCSVFormat(values)\r\n    } else {\r\n      this.valid = false\r\n      showWarningDialog(\"CSV fields missing\", \"CSV file does not include all the required header fields.\")\r\n    }\r\n  }\r\n\r\n  getPosition(fields) {\r\n    let position = parseInt(fields[this.CSVFormat.POSITION_IDX], 10)\r\n    if (isNaN(position)) {\r\n      position = \"\"\r\n    }\r\n    return position\r\n  }\r\n\r\n  getSICSVStatus(nc, classifier) {\r\n    if (nc === \"0\" || nc === \"\" || nc === \"N\" || nc === \"n\") {\r\n      if (classifier === \"\" || classifier === \"0\") {\r\n        return \"ok\"\r\n      }\r\n      return \"nok\"\r\n    }\r\n    return \"nc\"\r\n  }\r\n\r\n  // rows: array of raw lines from SI results csv file\r\n  processCSVResults(rows) {\r\n    // extract what we need: first row is headers so ignore\r\n    for (let i = 1; i < rows.length; i += 1) {\r\n      const fields = rows[i].split(this.separator)\r\n      // need at least this many fields...\r\n      if (fields.length >= this.CSVFormat.FIRST_SPLIT_IDX) {\r\n        let newResult = this.extractSingleCSVResult(fields)\r\n        if (newResult.valid) {\r\n          // don't need this field any more\r\n          delete newResult.valid\r\n          this.results.push(newResult)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  processResultsCSV(rawCSV) {\r\n    const rows = rawCSV.split(/[\\r\\n|\\n]+/)\r\n    // try and work out what the separator is\r\n    const commas = rows[0].split(\",\").length - 1\r\n    const semicolons = rows[0].split(\";\").length - 1\r\n    if (commas > semicolons) {\r\n      this.separator = \",\"\r\n    } else {\r\n      this.separator = \";\"\r\n    }\r\n    // Spklasse has two items on first row, SI CSV has a lot more...\r\n    if (rows[0].split(this.separator).length === 2) {\r\n      this.processSpklasseCSVResults(rows)\r\n    } else {\r\n      this.getCSVFormat(rows[0])\r\n      if (this.valid) {\r\n        this.processCSVResults(rows)\r\n      }\r\n    }\r\n  }\r\n\r\n  // rows: array of raw lines from Spklasse results csv file\r\n  processSpklasseCSVResults(rows) {\r\n    // fields in course row\r\n    const COURSE_IDX = 0\r\n    const NUM_CONTROLS_IDX = 1\r\n    let fields = []\r\n    let course = \"\"\r\n    let controls = 0\r\n    // read through all rows\r\n    for (let i = 0; i < rows.length; i += 1) {\r\n      fields = rows[i].split(this.separator)\r\n      // check for new course\r\n      if (fields.length === 2) {\r\n        course = fields[COURSE_IDX]\r\n        controls = parseInt(fields[NUM_CONTROLS_IDX], 10)\r\n      } else {\r\n        this.extractResult(fields, course, controls)\r\n      }\r\n    }\r\n  }\r\n\r\n  setCSVFormat(values) {\r\n    this.CSVFormat.CHIP_IDX = values[0]\r\n    this.CSVFormat.DB_IDX = values[1]\r\n    this.CSVFormat.SURNAME_IDX = values[2]\r\n    this.CSVFormat.FIRST_NAME_IDX = values[3]\r\n    this.CSVFormat.NC_IDX = values[4]\r\n    this.CSVFormat.START_TIME_IDX = values[5]\r\n    this.CSVFormat.TOTAL_TIME_IDX = values[6]\r\n    this.CSVFormat.CLASSIFIER_IDX = values[7]\r\n    this.CSVFormat.CLUB_IDX = values[8]\r\n    this.CSVFormat.CLASS_IDX = values[9]\r\n    this.CSVFormat.COURSE_IDX = values[10]\r\n    this.CSVFormat.NUM_CONTROLS_IDX = values[11]\r\n    this.CSVFormat.POSITION_IDX = values[12]\r\n    this.CSVFormat.START_PUNCH_IDX = values[13]\r\n    this.CSVFormat.FIRST_CODE_IDX = values[14]\r\n    this.CSVFormat.FIRST_SPLIT_IDX = values[15]\r\n    this.CSVFormat.STEP = values[16] - values[14]\r\n  }\r\n}\r\n","import { extractAttributeZero, extractTextContentZero, getSecsFromHHMMSS, showWarningDialog } from \"./utils\"\r\n\r\nexport class ResultParserIOFV2 {\r\n  constructor(xml) {\r\n    this.results = []\r\n    this.valid = true\r\n    this.processIOFV2Results(xml)\r\n    return { results: this.results, valid: this.valid }\r\n  }\r\n\r\n  extractIOFV2Results(resultlist, result) {\r\n    for (let i = 0; i < resultlist.length; i += 1) {\r\n      result.status = extractAttributeZero(resultlist[i].getElementsByTagName(\"CompetitorStatus\"), \"value\", \"\")\r\n      result.position = this.getPosition(resultlist[i].getElementsByTagName(\"ResultPosition\"))\r\n      result.chipid = extractTextContentZero(resultlist[i].getElementsByTagName(\"CCardId\"), 0)\r\n      // assuming first <Time> is the total time...\r\n      result.time = this.getTime(resultlist[i].getElementsByTagName(\"Time\"))\r\n      result.starttime = this.getStartFinishTimeAsSecs(resultlist[i].getElementsByTagName(\"StartTime\"))\r\n      result.splits = \"\"\r\n      result.codes = []\r\n      const splitlist = resultlist[i].getElementsByTagName(\"SplitTime\")\r\n      result.controls = splitlist.length\r\n      this.extractIOFV2Splits(splitlist, result)\r\n      const finishtime = this.getStartFinishTimeAsSecs(resultlist[i].getElementsByTagName(\"FinishTime\"))\r\n      result.splits += Math.max(finishtime - result.starttime, 0)\r\n    }\r\n  }\r\n\r\n  extractIOFV2Splits(splitlist, result) {\r\n    for (let l = 0; l < splitlist.length; l += 1) {\r\n      if (l > 0) {\r\n        result.splits += \";\"\r\n      }\r\n      const temp = splitlist[l].getElementsByTagName(\"Time\")\r\n      if (temp.length > 0) {\r\n        // previously read timeFormat but some files lied!\r\n        // allow for XML files that don't tell you what is going on\r\n        // getSecsFromHHMMSS copes with MM:SS as well\r\n        result.splits += getSecsFromHHMMSS(temp[0].textContent)\r\n        result.codes[l] = extractTextContentZero(splitlist[l].getElementsByTagName(\"ControlCode\"), \"\")\r\n      } else {\r\n        result.splits += 0\r\n        result.codes[l] = \"\"\r\n      }\r\n    }\r\n    // add finish split\r\n    result.splits += \";\"\r\n  }\r\n\r\n  getDBID(element, index) {\r\n    if (element.length === 0) {\r\n      return index\r\n    }\r\n    // remove new lines from empty <PersonId> tags\r\n    element = element[0].textContent.replace(/[\\n\\r]/g, \"\").trim()\r\n    if (element) {\r\n      return element\r\n    }\r\n    return index\r\n  }\r\n\r\n  getName(personlist) {\r\n    const temp =\r\n      personlist.getElementsByTagName(\"Given\")[0].textContent +\r\n      \" \" +\r\n      personlist.getElementsByTagName(\"Family\")[0].textContent\r\n    // remove new lines from empty <Given> and <Family> tags\r\n    return temp.replace(/[\\n\\r]/g, \"\").trim()\r\n  }\r\n\r\n  getPosition(element) {\r\n    if (element.length > 0) {\r\n      return parseInt(element[0].textContent, 10)\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  getStartFinishTimeAsSecs(element) {\r\n    if (element.length > 0) {\r\n      const time = element[0].getElementsByTagName(\"Clock\")[0].textContent\r\n      return getSecsFromHHMMSS(time)\r\n    }\r\n    return 0\r\n  }\r\n\r\n  getTime(element) {\r\n    if (element.length > 0) {\r\n      return element[0].textContent.replace(/[\\n\\r]/g, \"\")\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  processIOFV2Results(xml) {\r\n    try {\r\n      const classlist = xml.getElementsByTagName(\"ClassResult\")\r\n      for (let i = 0; i < classlist.length; i += 1) {\r\n        const course = classlist[i].getElementsByTagName(\"ClassShortName\")[0].textContent\r\n        const personlist = classlist[i].getElementsByTagName(\"PersonResult\")\r\n        for (let j = 0; j < personlist.length; j += 1) {\r\n          let result = {}\r\n          result.course = course\r\n          result.name = this.getName(personlist[j])\r\n          result.dbid = this.getDBID(personlist[j].getElementsByTagName(\"PersonId\"), j)\r\n          result.club = extractTextContentZero(personlist[j].getElementsByTagName(\"ShortName\"), \"\")\r\n          const resultlist = personlist[j].getElementsByTagName(\"Result\")\r\n          this.extractIOFV2Results(resultlist, result)\r\n          if (result.status !== \"DidNotStart\") {\r\n            this.results.push(result)\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      this.valid = false\r\n      showWarningDialog(\"XML parse error\", \"Error processing XML file. Error is : \" + err.message)\r\n      return\r\n    }\r\n  }\r\n}\r\n","import { extractTextContentZero, formatSecsAsMMSS, getSecsFromHHMMSS, showWarningDialog } from \"./utils\"\r\n\r\nexport class ResultParserIOFV3 {\r\n  constructor(xml) {\r\n    this.results = []\r\n    this.valid = true\r\n    this.processIOFV3Results(xml)\r\n    return { results: this.results, valid: this.valid }\r\n  }\r\n\r\n  extractIOFV3Results(resultlist, result) {\r\n    for (let k = 0; k < resultlist.length; k += 1) {\r\n      result.chipid = extractTextContentZero(resultlist[k].getElementsByTagName(\"ControlCard\"), 0)\r\n      result.position = extractTextContentZero(resultlist[k].getElementsByTagName(\"Position\"), \"\")\r\n      if (result.position === \"0\") {\r\n        result.position = \"\"\r\n      }\r\n      result.status = extractTextContentZero(resultlist[k].getElementsByTagName(\"Status\"), \"\")\r\n      // assuming first <Time> is the total time...\r\n      // this one is in seconds and might even have tenths...\r\n      result.time = this.getTotalTimeAsMMSS(resultlist[k].getElementsByTagName(\"Time\"))\r\n      result.starttime = this.getStartFinishTimeAsSeconds(\r\n        extractTextContentZero(resultlist[k].getElementsByTagName(\"StartTime\"), 0)\r\n      )\r\n      result.splits = \"\"\r\n      result.codes = []\r\n      const splitlist = resultlist[k].getElementsByTagName(\"SplitTime\")\r\n      this.extractIOFV3Splits(splitlist, result)\r\n      const finishtime = this.getStartFinishTimeAsSeconds(\r\n        extractTextContentZero(resultlist[k].getElementsByTagName(\"FinishTime\"), 0)\r\n      )\r\n      if (finishtime > 0) {\r\n        result.splits += finishtime - result.starttime\r\n      } else {\r\n        result.splits += 0\r\n      }\r\n    }\r\n  }\r\n\r\n  extractIOFV3Splits(splitlist, result) {\r\n    let codes = []\r\n    for (let x = 0; x < splitlist.length; x += 1) {\r\n      // no attributes means just a standard split with time and control code\r\n      if (splitlist[x].attributes.length === 0) {\r\n        result.splits += extractTextContentZero(splitlist[x].getElementsByTagName(\"Time\"), 0)\r\n        codes.push(extractTextContentZero(splitlist[x].getElementsByTagName(\"ControlCode\"), \"X\" + x))\r\n        result.splits += \";\"\r\n      } else {\r\n        // possible status attributes are \"Missing\" and \"Additional\"\r\n        // need to insert a dummy 0 time for missing splits\r\n        if (splitlist[x].getAttribute(\"status\") === \"Missing\") {\r\n          result.splits += \"0\"\r\n          codes.push(extractTextContentZero(splitlist[x].getElementsByTagName(\"ControlCode\"), \"X\" + x))\r\n          result.splits += \";\"\r\n        }\r\n      }\r\n    }\r\n    result.codes = codes\r\n    result.controls = result.codes.length\r\n  }\r\n\r\n  getClub(element) {\r\n    if (element.length > 0) {\r\n      if (element[0].getElementsByTagName(\"Name\")[0]) {\r\n        return element[0].getElementsByTagName(\"Name\")[0].textContent\r\n      }\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  getID(element, index) {\r\n    if (element.length > 0) {\r\n      let text = element[0].textContent\r\n      // remove new lines from empty <Id> tags\r\n      text.replace(/[\\n\\r]/g, \"\")\r\n      return text.trim()\r\n    }\r\n    // no id defined so just use result index\r\n    return index\r\n  }\r\n\r\n  getStartFinishTimeAsSeconds(time) {\r\n    if (time.length >= 19) {\r\n      // format is yyyy-mm-ddThh:mm:ss and might have extra Z or +nn\r\n      return getSecsFromHHMMSS(time.substr(11, 8))\r\n    }\r\n    return 0\r\n  }\r\n\r\n  getTotalTimeAsMMSS(time) {\r\n    if (time.length > 0 && time[0].textContent) {\r\n      const timeInt = parseInt(time[0].textContent, 10)\r\n      return formatSecsAsMMSS(timeInt)\r\n    }\r\n    return \"00:00\"\r\n  }\r\n\r\n  processIOFV3Results(xml) {\r\n    try {\r\n      const classlist = xml.getElementsByTagName(\"ClassResult\")\r\n      for (let i = 0; i < classlist.length; i += 1) {\r\n        const classes = classlist[i].getElementsByTagName(\"Class\")\r\n        const course = classes[0].getElementsByTagName(\"Name\")[0].textContent\r\n        const personlist = classlist[i].getElementsByTagName(\"PersonResult\")\r\n        for (let j = 0; j < personlist.length; j += 1) {\r\n          let result = {}\r\n          result.course = course\r\n          const temp =\r\n            personlist[j].getElementsByTagName(\"Given\")[0].textContent +\r\n            \" \" +\r\n            personlist[j].getElementsByTagName(\"Family\")[0].textContent\r\n          // remove new lines from empty <Given> and <Family> tags\r\n          result.name = temp.replace(/[\\n\\r]/g, \"\").trim()\r\n          result.dbid = this.getID(personlist[j].getElementsByTagName(\"Id\"), j)\r\n          result.club = this.getClub(personlist[j].getElementsByTagName(\"Organisation\"))\r\n          const resultlist = personlist[j].getElementsByTagName(\"Result\")\r\n          this.extractIOFV3Results(resultlist, result)\r\n          if (result.status !== \"DidNotStart\") {\r\n            this.results.push(result)\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      this.valid = false\r\n      showWarningDialog(\"XML parse error\", \"Error processing XML file. Error is : \" + err.message)\r\n      return\r\n    }\r\n  }\r\n}\r\n","import { config } from \"./config\"\r\nimport { ResultParserCSV } from \"./resultparsercsv\"\r\nimport { ResultParserIOFV2 } from \"./resultparseriofv2\"\r\nimport { ResultParserIOFV3 } from \"./resultparseriofv3\"\r\nimport { extractAttributeZero, showWarningDialog } from \"./utils\"\r\n\r\nexport class ResultParser {\r\n  constructor(e, fileFormat) {\r\n    this.results = []\r\n    this.resultCourses = []\r\n    this.valid = true\r\n    const parsedResults = this.processResults(e, fileFormat)\r\n    this.results = parsedResults.results\r\n    this.valid = parsedResults.valid\r\n    this.getCoursesFromResults()\r\n    return {\r\n      results: this.results,\r\n      resultCourses: this.resultCourses,\r\n      valid: this.valid\r\n    }\r\n  }\r\n\r\n  getCoursesFromResults() {\r\n    // creates an array of all course names in the results file\r\n    for (let i = 0; i < this.results.length; i += 1) {\r\n      // have we already found this course?\r\n      let found = false\r\n      for (let j = 0; j < this.resultCourses.length; j += 1) {\r\n        if (this.resultCourses[j].course === this.results[i].course) {\r\n          found = true\r\n          break\r\n        }\r\n      }\r\n      if (!found) {\r\n        // courseid is set later when mapping is known\r\n        this.resultCourses.push({\r\n          course: this.results[i].course,\r\n          courseid: config.DO_NOT_SAVE_COURSE\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  processResults(e, fileFormat) {\r\n    switch (fileFormat) {\r\n      case \"CSV\":\r\n        return new ResultParserCSV(e.target.result)\r\n      case \"XML\":\r\n        return this.processResultsXML(e.target.result)\r\n      default:\r\n        // shouldn't ever get here but...\r\n        showWarningDialog(\"File type error\", \"Results file type is not recognised. Please select a valid file.\")\r\n        return { results: [], valid: false }\r\n    }\r\n  }\r\n\r\n  processResultsXML(rawXML) {\r\n    let version = \"\"\r\n    let xml = undefined\r\n    try {\r\n      xml = new DOMParser().parseFromString(rawXML, \"text/xml\")\r\n      const nodelist = xml.getElementsByTagName(\"ResultList\")\r\n      if (nodelist.length === 0) {\r\n        showWarningDialog(\"XML file error\", \"File is not a valid XML results file. ResultList element missing.\")\r\n        return { results: [], valid: false }\r\n      }\r\n      // test for IOF Version 2\r\n      version = extractAttributeZero(xml.getElementsByTagName(\"IOFVersion\"), \"version\", \"\")\r\n      if (version === \"\") {\r\n        // test for IOF Version 3\r\n        version = extractAttributeZero(xml.getElementsByTagName(\"ResultList\"), \"iofVersion\", \"\")\r\n      }\r\n    } catch (err) {\r\n      showWarningDialog(\"XML file error\", \"File is not a valid XML results file.\")\r\n      return { results: [], valid: false }\r\n    }\r\n\r\n    switch (version) {\r\n      case \"2.0.3\":\r\n        return new ResultParserIOFV2(xml)\r\n      case \"3.0\":\r\n        return new ResultParserIOFV3(xml)\r\n      default:\r\n        showWarningDialog(\"XML file error\", \"Invalid IOF file format. Version \" + version + \" not supported.\")\r\n        return { results: [], valid: false }\r\n    }\r\n  }\r\n}\r\n","// eslint-disable-next-line no-unused-vars\r\nimport * as bootstrap from \"bootstrap\"\r\nimport { getApi, postApi } from \"./api\"\r\nimport { ctx, getMapSize, loadNewMap, redraw } from \"./canvas\"\r\nimport { config, getOverprintDetails } from \"./config\"\r\nimport { Controls } from \"./controls\"\r\nimport { CourseParser } from \"./courseparser\"\r\nimport {\r\n  doGetEvents,\r\n  isScoreEvent,\r\n  getEventInfoForKartatID,\r\n  loadEventByKartatID,\r\n  mapIDIsInUse,\r\n  setActiveEventIDByKartatID,\r\n  setEventTitleBar\r\n} from \"./events\"\r\nimport { Georefs } from \"./georefs\"\r\nimport { decode } from \"html-entities\"\r\nimport {\r\n  confirmDeleteEvent,\r\n  confirmDeleteRoute,\r\n  confirmDeleteUnusedMaps,\r\n  displayUnusedMaps,\r\n  getEventEditDropdown,\r\n  getEventLevelDropdown,\r\n  sortResultItems,\r\n  testForInvalidCharacters\r\n} from \"./managerutils\"\r\nimport { MapData } from \"./mapdata\"\r\nimport proj4 from \"proj4\"\r\nimport { ResultParser } from \"./resultparser\"\r\nimport { getRoutesForEvent } from \"./results\"\r\nimport { t } from \"./translate\"\r\nimport { User } from \"./user\"\r\nimport { createModalDialog, generateSelectOption, showWarningDialog, validateValue } from \"./utils\"\r\nimport { Datepicker } from \"vanillajs-datepicker\"\r\nimport { Worldfile } from \"./worldfile\"\r\nimport L from \"leaflet\"\r\n// TODO import css somewhere else?\r\nimport \"leaflet/dist/leaflet.css\"\r\n\r\nlet user = null\r\nlet newMap = new MapData()\r\nlet georefsystems = new Georefs()\r\nlet mapIndex = null\r\nlet format = null\r\nlet newEventIsScoreEvent = false\r\nlet hasResults = true\r\nlet newcontrols = null\r\nlet courses = []\r\nlet mapping = []\r\nlet isEnrichCourseNames = false\r\nlet mapLoaded = false\r\nlet coursesGeoreferenced = false\r\nlet controlsAdjusted = false\r\nlet drawingCourses = false\r\nlet drawnCourse = {}\r\nlet results = []\r\nlet variants = []\r\nlet resultCourses = []\r\nlet mapFile = undefined\r\nlet resultsOrCourseFile = undefined\r\nlet resultsFileFormat = \"\"\r\n// list of possible encodings from results or course file: just add new ones to the array if needed\r\nconst encodings = [\"UTF-8\", \"ISO-8859-1\", \"windows-1251\"]\r\n// count of errors when parsing each encoding type\r\nlet errorCount = []\r\n// current index into encodings\r\nlet encodingIndex = 0\r\n// state flag showing we have found the least worst encoding so use anyway\r\nlet useThisEncoding = false\r\nlet backgroundLocked = false\r\nlet sortResults = false\r\nlet handle = { x: null, y: null }\r\nlet maps = []\r\nlet mapSize = { height: 0, width: 0 }\r\nlet localworldfile = new Worldfile(0)\r\nlet worldfile = new Worldfile(0)\r\nlet georefmap = null\r\nlet unusedMaps = []\r\nlet eventSelectDatePicker = null\r\nlet eventEditDatePicker = null\r\nlet activeEditEventID = null\r\nconst defaultExcludedText = \"e.g. 1|1|6,60|15,60\"\r\n\r\nfunction addNewControl(x, y) {\r\n  // add new control: generate a code for it\r\n  let code\r\n  if (newcontrols.controls.length === 0) {\r\n    code = \"S\" + (newcontrols.controls.length + 1)\r\n  } else {\r\n    code = \"X\" + (newcontrols.controls.length + 1)\r\n  }\r\n  newcontrols.addControl(code, x, y)\r\n  newcontrols.displayAllControls()\r\n  drawnCourse.codes.push(code)\r\n  drawnCourse.x.push(x)\r\n  drawnCourse.y.push(y)\r\n}\r\n\r\n// based on adjustTrack from draw.js\r\nexport function adjustManagerControls(p1, p2, button) {\r\n  // console.log (p1.x, p1.y, p2.x, p2.y, handle.x, handle.y, button)\r\n  if (backgroundLocked || button === config.RIGHT_CLICK) {\r\n    // drag track and background\r\n    ctx.translate(p2.x - p1.x, p2.y - p1.y)\r\n  } else {\r\n    controlsAdjusted = true\r\n    if (handle.x !== null) {\r\n      // scale controls\r\n      const scaleX = (p2.x - handle.x) / (p1.x - handle.x)\r\n      const scaleY = (p2.y - handle.y) / (p1.y - handle.y)\r\n      // don't rotate: we are assuming controls and map are already rotated the same\r\n      // console.log (p1.x, p1.y, p2.x, p2.y, handle.x, handle.y, scaleX, scaleY)\r\n      if (isFinite(scaleX) && isFinite(scaleY)) {\r\n        // just ignore very small moves\r\n        for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n          const x = newcontrols.controls[i].oldX - handle.x\r\n          const y = newcontrols.controls[i].oldY - handle.y\r\n          newcontrols.controls[i].x = x * scaleX + handle.x\r\n          newcontrols.controls[i].y = y * scaleY + handle.y\r\n        }\r\n      }\r\n    } else {\r\n      // drag controls\r\n      const dx = p2.x - p1.x\r\n      const dy = p2.y - p1.y\r\n      for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n        newcontrols.controls[i].x = newcontrols.controls[i].oldX + dx\r\n        newcontrols.controls[i].y = newcontrols.controls[i].oldY + dy\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkResultsFileEncoding(e) {\r\n  // not pretty but it works\r\n  // need to use the array of possible encodings that we want to try if the file is not UTF-8\r\n  // might be better to use a synchronous read, but that needs a worker thread\r\n  const errors = testForInvalidCharacters(e.target.result)\r\n  // if this encoding is clean, or we have tried everything so this is the least worst case\r\n  if (errors === 0 || useThisEncoding) {\r\n    // use this version of the results\r\n    processResultFile(e)\r\n    return\r\n  }\r\n  errorCount[encodingIndex] = errors\r\n  encodingIndex += 1\r\n  // have we tried all the encodings?\r\n  if (encodingIndex === encodings.length) {\r\n    let lowest = 99999\r\n    // no clean encodings found, since we would have escaped by now, so find least worst\r\n    for (let i = 0; i < encodings.length; i += 1) {\r\n      if (lowest > errorCount[i]) {\r\n        encodingIndex = i\r\n        lowest = errorCount[i]\r\n      }\r\n    }\r\n    // force this one to be used next time we get back here\r\n    useThisEncoding = true\r\n  }\r\n  // try a new encoding\r\n  readResults()\r\n}\r\n\r\nfunction confirmAddMap() {\r\n  let dlg = {}\r\n  dlg.body = \"Are you sure you want to add this map?\"\r\n  dlg.title = \"Confirm new map\"\r\n  dlg.classes = \"rg2-confirm-add-map-dialog\"\r\n  dlg.doText = \"Add map\"\r\n  dlg.onDo = doUploadMapFile\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction confirmCreateEvent(e) {\r\n  e.preventDefault()\r\n  const valid = validateData()\r\n  if (valid !== \"OK\") {\r\n    showWarningDialog(\r\n      \"Event set-up incomplete\",\r\n      valid + \" Please enter all necessary information and make sure controls are aligned before creating the event.\"\r\n    )\r\n    return\r\n  }\r\n  let dlg = {}\r\n  dlg.body = \"Are you sure you want to create this event?\"\r\n  dlg.title = \"Confirm event creation\"\r\n  dlg.classes = \"rg2-confirm-create-event-dialog\"\r\n  dlg.doText = \"Create event\"\r\n  dlg.onDo = doCreateEvent\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction confirmUpdateEvent() {\r\n  let dlg = {}\r\n  dlg.body = `Are you sure you want to update ${document.getElementById(\"rg2-edit-event-name\").value}?`\r\n  dlg.title = \"Confirm event update\"\r\n  dlg.doText = \"Update event\"\r\n  dlg.onDo = doUpdateEvent\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction convertWorldFile(value) {\r\n  // takes in a World file for the map image and translates it to WGS84 (GPS)\r\n  try {\r\n    const system = georefsystems.getGeorefSystem(value)\r\n    //console.log(system)\r\n    mapSize = getMapSize()\r\n    if (!localworldfile.valid || mapSize.width === 0 || system.name === \"none\") {\r\n      // no map or world file loaded or user selected do not georef\r\n      throw \"Do not georeference\"\r\n    }\r\n    // set up source which is how map was originally georeferenced\r\n    proj4.defs(system.name, system.params)\r\n    const source = new proj4.Proj(system.name)\r\n    // dest is WGS84 as used by GPS: included by default in proj4.defs\r\n    const dest = new proj4.Proj(\"EPSG:4326\")\r\n    // calculation based on fixed points on map\r\n    // x0, y0 is top left, x1, y1 is bottom right, x2, y2 is top right, x3, y3 is bottom left\r\n    // 0, 1 and 2 are saved by the API, and must have these settings\r\n    // 4 is just used here\r\n    // save pixel values of these locations for map image\r\n    const xpx = [0, mapSize.width, mapSize.width, 0]\r\n    const ypx = [0, mapSize.height, 0, mapSize.height]\r\n\r\n    // calculate the same locations using worldfile for the map\r\n    let xsrc = []\r\n    let ysrc = []\r\n    for (let i = 0; i < 4; i += 1) {\r\n      xsrc[i] = localworldfile.getLon(xpx[i], ypx[i])\r\n      ysrc[i] = localworldfile.getLat(xpx[i], ypx[i])\r\n    }\r\n\r\n    newMap.xpx.length = 0\r\n    newMap.ypx.length = 0\r\n    newMap.lat.length = 0\r\n    newMap.lon.length = 0\r\n    // translate source georef to WGS84 (as in GPS file) and store with newMap details\r\n    // Careful: p[] has x = lon and y = lat\r\n    let p = []\r\n    for (let i = 0; i < 4; i += 1) {\r\n      let pt = {}\r\n      pt.x = xsrc[i]\r\n      pt.y = ysrc[i]\r\n      p.push(pt)\r\n      const transformed = proj4(source, dest, p[i])\r\n      newMap.xpx.push(xpx[i])\r\n      newMap.ypx.push(ypx[i])\r\n      newMap.lat.push(transformed.y)\r\n      newMap.lon.push(transformed.x)\r\n    }\r\n\r\n    let wf = {}\r\n    // X = Ax + By + C, Y = Dx + Ey + F\r\n    // C = X - Ax - By, where x and y are 0\r\n    wf.C = p[0].x\r\n    // F = Y - Dx - Ey, where X and Y are 0\r\n    wf.F = p[0].y\r\n    // A = (X - By - C) / x where y = 0\r\n    wf.A = (p[2].x - wf.C) / xpx[2]\r\n    // B = (X - Ax - C) / y where x = 0\r\n    wf.B = (p[3].x - wf.C) / ypx[3]\r\n    // D = (Y - Ey - F) / x where y = 0\r\n    wf.D = (p[2].y - wf.F) / xpx[2]\r\n    // E = (Y - Dx - F) / y where x = 0\r\n    wf.E = (p[3].y - wf.F) / ypx[3]\r\n    //console.log(\"Calculated lon diff = \" + (((wf.A * xpx[1]) + (wf.B * ypx[1]) + wf.C) - p[1].x))\r\n    //console.log(\"Calculated lat diff = \" + (((wf.D * xpx[1]) + (wf.E * ypx[1]) + wf.F) - p[1].y))\r\n    newMap.worldfile = new Worldfile(wf)\r\n    updateGeorefMap()\r\n  } catch (err) {\r\n    newMap.worldfile = new Worldfile(0)\r\n    updateGeorefMap()\r\n    return\r\n  }\r\n}\r\n\r\nfunction copyXYToOldXY() {\r\n  // rebaseline control locations\r\n  for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n    newcontrols.controls[i].oldX = newcontrols.controls[i].x\r\n    newcontrols.controls[i].oldY = newcontrols.controls[i].y\r\n  }\r\n}\r\n\r\nfunction createCourseDropdown(course, courseidx) {\r\n  let idx = -1\r\n  // check against list of course names first to default to results by course\r\n  // do known courses include this course name?\r\n  // This covers \"Brown\" results mapping to a \"Brown\" course\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i].name === course) {\r\n      idx = i\r\n      break\r\n    }\r\n  }\r\n  // If we didn't match a course name then try a class name\r\n  // This covers M50 results mapping to course 3 as defined in the course XML\r\n  if (idx === -1 && mapping.length > 0) {\r\n    for (let i = 0; i < mapping.length; i += 1) {\r\n      if (mapping[i].className === course) {\r\n        // now have course name so look it up to get index\r\n        for (let j = 0; j < courses.length; j += 1) {\r\n          if (courses[j].name === mapping[i].course) {\r\n            idx = j\r\n            break\r\n          }\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n  let html = `<select id='rg2-alloc-${courseidx}' class=\"form-control form-control-sm\">`\r\n  html += `<option value=\"${config.DO_NOT_SAVE_COURSE}\"${idx === -1 ? \" selected\" : \"\"}>Do not save</option>`\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    html += `<option value=\"${i}\"${idx === i ? \" selected\" : \"\"}>${enrichCourseName(courses[i].name)}</option>`\r\n  }\r\n  html += `</select >`\r\n  return html\r\n}\r\n\r\nfunction createResultCourseMapping() {\r\n  // create a dummy result-course mapping\r\n  // to allow display of courses with no results\r\n  if (!hasResults) {\r\n    resultCourses.length = 0\r\n    for (let i = 0; i < courses.length; i += 1) {\r\n      resultCourses.push({\r\n        courseid: courses[i].courseid,\r\n        course: courses[i].name\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nfunction displayCourseAllocations() {\r\n  let html = \"\"\r\n  if (courses.length && resultCourses.length) {\r\n    html = `<div class=\"fw-bold\">Results</div><div class=\"fw-bold\">Course</div>`\r\n    for (let i = 0; i < resultCourses.length; i += 1) {\r\n      html += `<div>${resultCourses[i].course}</div>`\r\n      html += `<div>${createCourseDropdown(resultCourses[i].course, i)}</div>`\r\n    }\r\n    document.getElementById(\"rg2-course-allocations\").innerHTML = html\r\n  }\r\n}\r\n\r\nfunction displayInfoDialog(title, info) {\r\n  let dlg = {}\r\n  dlg.body = info\r\n  dlg.title = title\r\n  dlg.doText = \"Ok\"\r\n  // do nothing on close\r\n  dlg.onDo = () => {}\r\n  // false removes cancel button\r\n  createModalDialog(dlg, false)\r\n}\r\n\r\nfunction doAddMap() {\r\n  const params = { type: \"addmap\" }\r\n  newMap.localworldfile = localworldfile\r\n  const data = { ...newMap, ...user.encodeUser() }\r\n  postApi(JSON.stringify(data), params, handleMapAdded, \"Map save failed\")\r\n}\r\n\r\nfunction doCreateEvent() {\r\n  const data = { ...generateNewEventData(), ...user.encodeUser() }\r\n  const params = { type: \"createevent\" }\r\n  postApi(JSON.stringify(data), params, handleEventAdded, \"Event creation failed\")\r\n}\r\n\r\nfunction doDeleteEvent() {\r\n  const id = document.getElementById(\"rg2-edit-event-selected\").value\r\n  const params = { type: \"deleteevent\", id: id }\r\n  postApi(JSON.stringify(user.encodeUser()), params, handleEventDeleted(id), \"Event deletion failed\")\r\n}\r\n\r\nfunction doDeleteRoute() {\r\n  const id = document.getElementById(\"rg2-edit-event-selected\").value\r\n  const routeid = document.getElementById(\"rg2-route-selected\").value\r\n  const params = { type: \"deleteroute\", id: id, routeid: routeid }\r\n  postApi(JSON.stringify(user.encodeUser()), params, handleRouteDeleted(id, routeid), \"Route delete failed\")\r\n}\r\n\r\nfunction doDeleteUnusedMaps() {\r\n  let data = user.encodeUser()\r\n  data.maps = unusedMaps.filter((map) => map.delete === true).map((map) => map.mapid)\r\n  const params = { type: \"deleteunusedmaps\" }\r\n  postApi(JSON.stringify(data), params, handleUnusedMapsDeleted, \"Map deletion failed\")\r\n}\r\n\r\nexport function doGetMaps() {\r\n  const params = { type: \"maps\" }\r\n  getApi(params, handleMapsLoaded, \"Events request failed\")\r\n}\r\n\r\nfunction doLogin() {\r\n  const params = { type: \"login\" }\r\n  postApi(JSON.stringify(user.encodeUser()), params, handleLoginResponse, \"Login failed\")\r\n}\r\n\r\nfunction doUpdateEvent() {\r\n  const id = document.getElementById(\"rg2-edit-event-selected\").value\r\n  let data = user.encodeUser()\r\n  data.comments = document.getElementById(\"rg2-edit-event-comments\").value\r\n  data.locked = document.getElementById(\"chk-edit-read-only\").checked\r\n  data.name = document.getElementById(\"rg2-edit-event-name\").value\r\n  data.type = document.getElementById(\"rg2-edit-event-level\").value\r\n  data.eventdate = eventEditDatePicker.getDate(\"yyyy-mm-dd\")\r\n  data.club = document.getElementById(\"rg2-edit-club-name\").value\r\n  let exclude = document.getElementById(\"rg2-edit-exclude\").value.trim()\r\n  if (exclude === defaultExcludedText) {\r\n    exclude = \"\"\r\n  }\r\n  data.exclude = exclude\r\n  const params = { type: \"editevent\", id: id }\r\n  postApi(JSON.stringify(data), params, handleEventUpdated(id), \"Event update failed\")\r\n}\r\n\r\nfunction doUploadMapFile() {\r\n  const details = user.encodeUser()\r\n  let formData = new FormData()\r\n  formData.append(mapFile.name, mapFile)\r\n  formData.append(\"name\", mapFile.name)\r\n  formData.append(\"x\", details.x)\r\n  formData.append(\"user\", details.user)\r\n\r\n  const params = {\r\n    type: \"uploadmapfile\",\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n  }\r\n  postApi(formData, params, handleMapUploaded, \"Map upload failed\")\r\n}\r\n\r\nexport function drawManagerControls() {\r\n  if (mapLoaded && newcontrols.controls.length > 0) {\r\n    newcontrols.drawControls(true)\r\n    const opt = getOverprintDetails()\r\n    // locked point for control edit\r\n    if (handle.x !== null) {\r\n      ctx.lineWidth = opt.overprintWidth\r\n      ctx.strokeStyle = config.HANDLE_COLOUR\r\n      ctx.fillStyle = config.HANDLE_COLOUR\r\n      ctx.globalAlpha = 1.0\r\n\r\n      ctx.beginPath()\r\n      ctx.arc(handle.x, handle.y, config.HANDLE_DOT_RADIUS, 0, 2 * Math.PI, false)\r\n      ctx.fill()\r\n      ctx.beginPath()\r\n      ctx.arc(handle.x, handle.y, 2 * config.HANDLE_DOT_RADIUS, 0, 2 * Math.PI, false)\r\n      ctx.stroke()\r\n    }\r\n  }\r\n}\r\n\r\nexport function enableManager() {\r\n  // login tab no longer required so remove it: it is first <li>\r\n  document.querySelector(\"#rg2-info-panel-tab-headers li\").remove()\r\n  document.querySelector(\"#rg2-manage-login-tab-body\").remove()\r\n\r\n  document.getElementById(config.TAB_CREATE).classList.remove(\"d-none\")\r\n  document.getElementById(config.TAB_CREATE).click()\r\n  document.getElementById(config.TAB_EDIT).classList.remove(\"d-none\")\r\n  document.getElementById(config.TAB_MAP).classList.remove(\"d-none\")\r\n  document.getElementById(config.TAB_DELETE_MAP).classList.remove(\"d-none\")\r\n\r\n  doGetMaps()\r\n  setButtons()\r\n  document.getElementById(\"rg2-select-event-level\").innerHTML = getEventLevelDropdown()\r\n  document.getElementById(\"rg2-edit-event-level\").innerHTML = getEventLevelDropdown()\r\n  document.getElementById(\"rg2-georef-type\").innerHTML = georefsystems.getGeorefDropdown()\r\n  document.getElementById(\"rg2-select-map\").addEventListener(\"change\", (e) => {\r\n    mapIndex = parseInt(e.target.value, 10)\r\n    if (mapIndex !== config.INVALID_MAP_ID) {\r\n      loadNewMap(rg2Config.maps_url + \"/\" + maps[mapIndex].mapfilename)\r\n    } else {\r\n      mapLoaded = false\r\n      mapSize.width = 0\r\n      mapSize.height = 0\r\n    }\r\n  })\r\n\r\n  eventSelectDatePicker = new Datepicker(document.getElementById(\"rg2-select-event-date\"), {\r\n    buttonClass: \"btn\",\r\n    autohide: true,\r\n    format: \"yyyy-mm-dd\"\r\n  })\r\n\r\n  eventEditDatePicker = new Datepicker(document.getElementById(\"rg2-edit-event-date\"), {\r\n    buttonClass: \"btn\",\r\n    autohide: true,\r\n    format: \"yyyy-mm-dd\"\r\n  })\r\n\r\n  document.getElementById(\"rg2-map-name\").addEventListener(\"change\", function () {\r\n    setMapName()\r\n  })\r\n  document.getElementById(\"rg2-new-course-name\").addEventListener(\"change\", function () {\r\n    setCourseName()\r\n  })\r\n  document.getElementById(\"rg2-edit-event-selected\").addEventListener(\"change\", (e) => {\r\n    const id = parseInt(e.target.value, 10)\r\n    setEvent(id)\r\n    activeEditEventID = id\r\n  })\r\n  document.getElementById(\"rg2-georef-type\").addEventListener(\"change\", (e) => {\r\n    setGeoref(parseInt(e.target.value, 10))\r\n  })\r\n}\r\n\r\nfunction enrichCourseName(course_name) {\r\n  let classes = \"\"\r\n  if (mapping && mapping.length > 0 && isEnrichCourseNames) {\r\n    for (let j = 0; j < mapping.length; j += 1) {\r\n      const course = mapping[j].course\r\n      let class_name = \"\"\r\n      if (course === course_name) {\r\n        if (classes !== \"\") {\r\n          classes += \", \"\r\n        }\r\n        class_name = mapping[j].className\r\n        class_name = class_name.replace(/ /g, \"\")\r\n        class_name = class_name.replace(/-/g, \"\")\r\n        classes += class_name\r\n      }\r\n    }\r\n  }\r\n\r\n  if (classes !== \"\") {\r\n    return course_name + \": \" + classes\r\n  }\r\n  return course_name\r\n}\r\n\r\nfunction enrichCourseNames() {\r\n  if (!isEnrichCourseNames) {\r\n    return\r\n  }\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    courses[i].name = enrichCourseName(courses[i].name)\r\n  }\r\n}\r\n\r\nexport function eventFinishedLoading(kartatid) {\r\n  // called once the requested event has loaded\r\n  const event = getEventInfoForKartatID(kartatid)\r\n  document.getElementById(\"rg2-edit-event-name\").value = decode(event.name)\r\n  document.getElementById(\"rg2-edit-club-name\").value = decode(event.club)\r\n  eventEditDatePicker.setDate(event.date)\r\n  document.getElementById(\"rg2-edit-event-level\").value = event.rawtype\r\n  document.getElementById(\"rg2-edit-event-comments\").value = decode(event.comment)\r\n  if (isScoreEvent()) {\r\n    document.getElementById(\"rg2-exclude-info\").classList.add(\"d-none\")\r\n  } else {\r\n    document.getElementById(\"rg2-edit-exclude\").value = event.exclude\r\n    document.getElementById(\"rg2-exclude-info\").classList.remove(\"d-none\")\r\n  }\r\n  document.getElementById(\"chk-edit-read-only\").checked = event.locked\r\n  document.getElementById(\"btn-delete-event\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"btn-delete-route\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"btn-update-event\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"rg2-route-selected\").innerHTML = getRouteDeleteDropdown(event.id)\r\n}\r\n\r\nexport function eventListLoaded(events) {\r\n  // called after event list has been updated\r\n  document.getElementById(\"rg2-edit-event-selected\").innerHTML = getEventEditDropdown(events, activeEditEventID)\r\n  // unused maps get set initially when maps are loaded by the manager\r\n  // need to avoid race condition where events load before manager is initialised\r\n  // this bit is needed to deal with maps changing state when events are created or deleted\r\n  if (maps.length > 0) {\r\n    findUnusedMaps(maps)\r\n    displayUnusedMaps(unusedMaps)\r\n  }\r\n}\r\n\r\nfunction extractVariants() {\r\n  // called when saving score/relay courses\r\n  // creates all course variants once courseid has been set\r\n  variants.length = 0\r\n  let course = undefined\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    // codes here are just controls so need to add start and finish\r\n    let codes = results[i].codes\r\n    // courseid - 1 gives courses array index given how we created the array\r\n    for (let j = 0; j < courses.length; j += 1) {\r\n      if (courses[j].courseid === results[i].courseid) {\r\n        course = courses[j]\r\n        break\r\n      }\r\n    }\r\n    // add start code at start\r\n    codes.unshift(course.codes[0])\r\n    // add finish code at end\r\n    codes.push(course.codes[course.codes.length - 1])\r\n\r\n    results[i].variantid = getVariantID(results[i].codes, results[i].courseid)\r\n  }\r\n}\r\n\r\nfunction findUnusedMaps(maps) {\r\n  unusedMaps.length = 0\r\n  for (let i = 0; i < maps.length; i += 1) {\r\n    if (!mapIDIsInUse(maps[i].mapid)) {\r\n      const map = {}\r\n      map.mapid = maps[i].mapid\r\n      map.name = maps[i].name\r\n      if (map.name === \"\") {\r\n        map.name = \"(None)\"\r\n      }\r\n      map.delete = false\r\n      unusedMaps.push(map)\r\n    }\r\n  }\r\n}\r\n\r\nfunction fitControlsToMap() {\r\n  let georefOK = false\r\n  if (mapLoaded && newcontrols.controls.length > 0) {\r\n    const box = getBoundingBox()\r\n    if (coursesGeoreferenced) {\r\n      // check we are somewhere on the map\r\n      if (box.maxX < 0 || box.minX > mapSize.width || box.minY > mapSize.height || box.maxY < 0) {\r\n        // warn and fit to track\r\n        showWarningDialog(\r\n          \"Course file problem\",\r\n          \"Your course file does not match the map co-ordinates. Please check you have selected the correct file.\"\r\n        )\r\n      } else {\r\n        georefOK = true\r\n      }\r\n    }\r\n    if (georefOK) {\r\n      // lock background to prevent accidentally moving the aligned controls\r\n      // user can always unlock and adjust\r\n      backgroundLocked = true\r\n      controlsAdjusted = true\r\n      document.getElementById(\"chk-move-map-and-controls\").checked = true\r\n    } else {\r\n      // fit within the map since this is probably needed anyway\r\n      let scale = 0.8\r\n      for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n        newcontrols.controls[i].x =\r\n          (newcontrols.controls[i].x - box.minX) * (mapSize.width / box.xRange) * scale +\r\n          mapSize.width * (1 - scale) * 0.5\r\n        newcontrols.controls[i].y =\r\n          mapSize.height -\r\n          (newcontrols.controls[i].y - box.minY) * (mapSize.height / box.yRange) * scale -\r\n          mapSize.height * (1 - scale) * 0.5\r\n      }\r\n    }\r\n    copyXYToOldXY()\r\n    newcontrols.displayAllControls()\r\n  }\r\n}\r\n\r\nfunction generateNewEventData() {\r\n  let data = user.encodeUser()\r\n  data.name = document.getElementById(\"rg2-event-name\").value\r\n  data.mapid = maps[mapIndex].mapid\r\n  data.eventdate = eventSelectDatePicker.getDate(\"yyyy-mm-dd\")\r\n  data.comments = document.getElementById(\"rg2-enter-event-comments\").value\r\n  data.locked = document.getElementById(\"chk-read-only\").checked\r\n  data.club = document.getElementById(\"rg2-select-club-name\").value\r\n  if (hasResults) {\r\n    if (newEventIsScoreEvent) {\r\n      data.format = config.FORMAT_SCORE_EVENT\r\n    } else {\r\n      data.format = config.FORMAT_NORMAL\r\n    }\r\n  } else {\r\n    if (newEventIsScoreEvent) {\r\n      data.format = config.FORMAT_SCORE_EVENT_NO_RESULTS\r\n    } else {\r\n      data.format = config.FORMAT_NORMAL_NO_RESULTS\r\n    }\r\n  }\r\n  data.level = document.getElementById(\"rg2-select-event-level\").value\r\n  if (drawingCourses) {\r\n    courses.push(drawnCourse)\r\n    createResultCourseMapping()\r\n  }\r\n  setControlLocations()\r\n  mapResultsToCourses()\r\n  enrichCourseNames()\r\n  removeSingleSplits(data.format)\r\n  renumberResults()\r\n  if (newEventIsScoreEvent) {\r\n    extractVariants()\r\n    data.variants = variants.slice(0)\r\n  }\r\n  data.courses = courses.slice(0)\r\n  if (sortResults) {\r\n    data.results = results.slice(0).sort(sortResultItems)\r\n  } else {\r\n    data.results = results.slice(0)\r\n  }\r\n  // #485 tidy up for results files that have a finish time in the splits list\r\n  // not pretty but it will catch most of the issues\r\n  if (data.format === config.FORMAT_NORMAL) {\r\n    for (let i = 0; i < data.results.length; i += 1) {\r\n      const splits = (data.results[i].splits.match(/;/g) || []).length\r\n      // if we have one too many splits\r\n      if (splits === getControlCount(data.courses, data.results[i].courseid) + 1) {\r\n        // remove last ; and everything after it\r\n        data.results[i].splits = data.results[i].splits.substring(0, data.results[i].splits.lastIndexOf(\";\"))\r\n      }\r\n    }\r\n  }\r\n  // #386 remove unused data: partial solution to problems with POST size\r\n  for (let i = 0; i < data.results.length; i += 1) {\r\n    delete data.results[i].codes\r\n    delete data.results[i].chipid\r\n    delete data.results[i].club\r\n  }\r\n  return data\r\n}\r\n\r\nfunction getBoundingBox() {\r\n  // find bounding box for controls\r\n  let box = {}\r\n  box.minX = newcontrols.controls[0].x\r\n  box.maxX = newcontrols.controls[0].x\r\n  box.minY = newcontrols.controls[0].y\r\n  box.maxY = newcontrols.controls[0].y\r\n  for (let i = 1; i < newcontrols.controls.length; i += 1) {\r\n    box.maxX = Math.max(box.maxX, newcontrols.controls[i].x)\r\n    box.maxY = Math.max(box.maxY, newcontrols.controls[i].y)\r\n    box.minX = Math.min(box.minX, newcontrols.controls[i].x)\r\n    box.minY = Math.min(box.minY, newcontrols.controls[i].y)\r\n  }\r\n  box.xRange = box.maxX - box.minX\r\n  box.yRange = box.maxY - box.minY\r\n  return box\r\n}\r\n\r\nfunction getControlCount(courses, courseid) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i].courseid === courseid) {\r\n      return courses[i].controlcount\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getControlXY(code) {\r\n  let c = { x: 0, y: 0 }\r\n  for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n    if (newcontrols.controls[i].code === code) {\r\n      c.x = Math.round(newcontrols.controls[i].x)\r\n      c.y = Math.round(newcontrols.controls[i].y)\r\n      return c\r\n    }\r\n  }\r\n  return c\r\n}\r\n\r\nfunction getCourseIDForResult(course) {\r\n  for (let i = 0; i < resultCourses.length; i += 1) {\r\n    if (resultCourses[i].course === course) {\r\n      return resultCourses[i].courseid\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getCourseInfoAsHTML() {\r\n  let html = `<div class=\"new-courses-table\">`\r\n  if (courses.length) {\r\n    html += `<div>${t(\"Course\")}</div><div>${t(\"Name\")}</div><div>${t(\"Controls\")}</div>`\r\n    for (let i = 0; i < courses.length; i += 1) {\r\n      html += `<div>${i + 1}</div><div>${courses[i].name}</div><div>${courses[i].codes.length - 2}</div>`\r\n    }\r\n  }\r\n  html += \"</div>\"\r\n  return html\r\n}\r\n\r\nfunction getCourseName(id) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i].courseid === id) {\r\n      return courses[i].name\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getMapDropdown(maps) {\r\n  let html = generateSelectOption(config.INVALID_MAP_ID, \"Select map\", true)\r\n  // loop backwards so most recent map is first in list\r\n  for (let i = maps.length - 1; i > -1; i -= 1) {\r\n    html += generateSelectOption(i, maps[i].mapid + \": \" + decode(maps[i].name))\r\n  }\r\n  return html\r\n}\r\n\r\nfunction getResultInfoAsHTML() {\r\n  let html = \"\"\r\n  if (results.length) {\r\n    html = `<div class=\"new-results-table\">`\r\n    let runners = 0\r\n    let oldcourse = null\r\n    for (let i = 0; i < results.length; i += 1) {\r\n      if (results[i].course !== oldcourse) {\r\n        if (oldcourse !== null) {\r\n          html += `<div>${runners}</div>`\r\n          runners = 0\r\n        }\r\n        html += `<div>${results[i].course}</div><div>${results[i].name}</div><div>${results[i].time}</div>`\r\n        oldcourse = results[i].course\r\n      }\r\n      runners += 1\r\n    }\r\n    html += `<div>${runners}</div></div>`\r\n  } else {\r\n    html = \"No valid results found.\"\r\n  }\r\n  return html\r\n}\r\n\r\nfunction getRouteDeleteDropdown(id) {\r\n  const routes = getRoutesForEvent(id)\r\n  let html = generateSelectOption(\"undefined\", \"Select route\")\r\n  for (let i = 0; i < routes.length; i += 1) {\r\n    html += generateSelectOption(\r\n      routes[i].resultid,\r\n      routes[i].resultid + \": \" + decode(routes[i].name) + \" on \" + decode(routes[i].coursename)\r\n    )\r\n  }\r\n  return html\r\n}\r\n\r\nfunction getVariantID(codes, courseid) {\r\n  // checks if a variant array of codes already exists\r\n  // adds it if it doesn't\r\n  // returns variantid\r\n  let x = []\r\n  let y = []\r\n  let id = 0\r\n  for (let i = 0; i < variants.length; i += 1) {\r\n    if (variants[i].codes.length === codes.length) {\r\n      let match = true\r\n      for (let j = 0; j < codes.length; j += 1) {\r\n        if (variants[i].codes[j] !== codes[j]) {\r\n          match = false\r\n          break\r\n        }\r\n      }\r\n      if (match) {\r\n        id = i + 1\r\n        break\r\n      }\r\n    }\r\n  }\r\n  if (id === 0) {\r\n    // didn't find a match so add a new variant\r\n    id = variants.length + 1\r\n    for (let i = 0; i < codes.length; i += 1) {\r\n      const c = getControlXY(codes[i])\r\n      x.push(c.x)\r\n      y.push(c.y)\r\n    }\r\n    variants.push({\r\n      x: x,\r\n      y: y,\r\n      id: id,\r\n      courseid: courseid,\r\n      name: \"Variant \" + id,\r\n      codes: codes\r\n    })\r\n  }\r\n\r\n  return id\r\n}\r\n\r\nfunction handleEventAdded(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(\r\n      \"Event created\",\r\n      document.getElementById(\"rg2-event-name\").value + \" has been added with id \" + response.newid + \".\"\r\n    )\r\n    // open newly created event in a separate window\r\n    window.open(rg2Config.api_url.replace(\"rg2api.php\", \"\") + \"#\" + response.newid)\r\n    doGetEvents()\r\n    setEvent()\r\n    // unused map data gets reset in eventListLoaded callback\r\n  } else {\r\n    showWarningDialog(\"Save failed\", response.status_msg + \" Failed to create event. Please try again.\")\r\n  }\r\n}\r\n\r\nconst handleEventDeleted = (id) => (response) => {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Event deleted\", \"Event \" + id + \" has been deleted.\")\r\n    activeEditEventID = null\r\n    document.getElementById(\"btn-delete-event\").setAttribute(\"disabled\", true)\r\n    document.getElementById(\"btn-delete-route\").setAttribute(\"disabled\", true)\r\n    document.getElementById(\"btn-update-event\").setAttribute(\"disabled\", true)\r\n    doGetEvents()\r\n    setEvent()\r\n    // unused map data gets reset in eventListLoaded callback\r\n    document.getElementById(\"rg2-edit-event-selected\").replaceChildren()\r\n  } else {\r\n    showWarningDialog(\"Delete failed\", response.status_msg + \". Event \" + id + \" delete failed. Please try again.\")\r\n  }\r\n}\r\n\r\nconst handleEventUpdated = (kartatid) => (response) => {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Event updated\", \"Event \" + kartatid + \" has been updated.\")\r\n    setActiveEventIDByKartatID(kartatid)\r\n    setEventTitleBar()\r\n    doGetEvents()\r\n    setEvent(kartatid)\r\n  } else {\r\n    showWarningDialog(\"Update failed\", response.status_msg + \". Event update failed. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleLoginResponse(response) {\r\n  if (response.ok) {\r\n    enableManager()\r\n  } else {\r\n    showWarningDialog(\"Login failed\", \"User name or password incorrect. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleMapAdded(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Map added\", response.name + \" has been added with id \" + response.newid + \".\")\r\n    // update map dropdown\r\n    doGetMaps()\r\n  } else {\r\n    showWarningDialog(\"Save failed\", response.status_msg + \". Failed to save map. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleMapUploaded(response) {\r\n  if (response.ok) {\r\n    doAddMap()\r\n  } else {\r\n    showWarningDialog(\"Upload failed\", response.status_msg + \". Failed to upload map. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleMapsLoaded(response) {\r\n  maps.length = 0\r\n  for (let i = 0; i < response.maps.length; i += 1) {\r\n    maps.push(new MapData(response.maps[i]))\r\n  }\r\n  document.getElementById(\"rg2-select-map\").innerHTML = getMapDropdown(maps)\r\n  findUnusedMaps(maps)\r\n  displayUnusedMaps(unusedMaps)\r\n}\r\n\r\nconst handleRouteDeleted = (kartatid, routeid) => (response) => {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Route deleted\", \"Route \" + routeid + \" has been deleted.\")\r\n    setActiveEventIDByKartatID(kartatid)\r\n    setEventTitleBar()\r\n    doGetEvents()\r\n    setEvent(kartatid)\r\n  } else {\r\n    showWarningDialog(\r\n      \"Delete failed\",\r\n      response.status_msg + \". Delete failed for route \" + routeid + \". Please try again.\"\r\n    )\r\n  }\r\n}\r\n\r\nfunction handleUnusedMapsDeleted(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Maps deleted\", \"Selected maps have been deleted.\")\r\n  } else {\r\n    showWarningDialog(\"Delete failed\", response.status_msg + \". Delete failed. Please try again.\")\r\n  }\r\n  doGetMaps()\r\n}\r\n\r\nfunction initialiseData() {\r\n  newcontrols = new Controls()\r\n  mapIndex = config.INVALID_MAP_ID\r\n  format = config.FORMAT_NORMAL\r\n  newEventIsScoreEvent = false\r\n  hasResults = true\r\n  courses = []\r\n  mapping = []\r\n  isEnrichCourseNames = false\r\n  mapLoaded = false\r\n  coursesGeoreferenced = false\r\n  controlsAdjusted = false\r\n  drawingCourses = false\r\n  drawnCourse = {}\r\n  results = []\r\n  variants = []\r\n  resultCourses = []\r\n  mapSize = { height: 0, width: 0 }\r\n  resultsOrCourseFile = undefined\r\n  resultsFileFormat = \"\"\r\n  backgroundLocked = false\r\n  sortResults = false\r\n  handle = { x: null, y: null }\r\n}\r\n\r\nfunction initialiseEncodings() {\r\n  encodingIndex = 0\r\n  errorCount = []\r\n  useThisEncoding = false\r\n}\r\n\r\nexport function initialiseManager() {\r\n  user = new User()\r\n  georefmap = L.map(\"rg2-world-file-map\")\r\n  initialiseData()\r\n  initialiseLocationMap()\r\n  document.getElementById(\"rg2-manager-login-form\").addEventListener(\"submit\", (e) => {\r\n    // submission handled here so don't need default form handling\r\n    e.preventDefault()\r\n    const validUser = user.setDetails(\"rg2-user-name\", \"rg2-password\")\r\n    if (validUser) {\r\n      doLogin()\r\n    } else {\r\n      showWarningDialog(\"Login failed\", \"Please enter user name and password of at least five characters\")\r\n    }\r\n  })\r\n}\r\n\r\nfunction initialiseLocationMap() {\r\n  L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n    maxZoom: 19,\r\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n  }).addTo(georefmap)\r\n  document.getElementById(\"rg2-world-file-map-container\").classList.remove(\"d-none\")\r\n}\r\n\r\nexport function managerDragEnded() {\r\n  // console.log(\"Drag ended\")\r\n  if (mapLoaded && newcontrols.controls.length > 0) {\r\n    // rebaseline control locations\r\n    copyXYToOldXY()\r\n  }\r\n}\r\n\r\nexport function managerMapLoadCallback() {\r\n  //callback when map image is loaded\r\n  mapLoaded = true\r\n  if (mapIndex !== config.INVALID_MAP_ID) {\r\n    localworldfile = maps[mapIndex].localworldfile\r\n    worldfile = maps[mapIndex].worldfile\r\n  }\r\n  mapSize = getMapSize()\r\n  fitControlsToMap()\r\n  redraw()\r\n}\r\n\r\nexport function managerMouseUp(x, y) {\r\n  // console.log(\"Mouse up \",x, y)\r\n  if (drawingCourses) {\r\n    addNewControl(x, y)\r\n    controlsAdjusted = true\r\n    return\r\n  }\r\n  if (mapLoaded && newcontrols.controls.length > 0) {\r\n    // adjusting the track\r\n    if (handle.x === null) {\r\n      handle = { x: x, y: y }\r\n    } else {\r\n      handle = { x: null, y: null }\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapResultsToCourses() {\r\n  // read through dropdowns and allocate courseid for each required course\r\n  // also delete unwanted courses\r\n  let newCourses = []\r\n  // courseid historically starts at 1 just to cause endless indexing problems\r\n  let courseid = 1\r\n  for (let i = 0; i < resultCourses.length; i += 1) {\r\n    let id = undefined\r\n    if (drawingCourses) {\r\n      // only handles one course at present, so it is always 0\r\n      id = 0\r\n    } else {\r\n      const selector = document.getElementById(\"rg2-alloc-\" + i)\r\n      if (selector) {\r\n        id = parseInt(selector.value, 10)\r\n      }\r\n    }\r\n    if (id !== undefined && id !== config.DO_NOT_SAVE_COURSE) {\r\n      // check we haven't already saved this course\r\n      if (courses[id].courseid === 0) {\r\n        courses[id].courseid = courseid\r\n        newCourses.push(courses[id])\r\n        resultCourses[i].courseid = courseid\r\n        courseid += 1\r\n      } else {\r\n        resultCourses[i].courseid = courses[id].courseid\r\n      }\r\n    }\r\n  }\r\n  courses = newCourses\r\n}\r\n\r\nfunction processCourseFile(e) {\r\n  coursesGeoreferenced = false\r\n  backgroundLocked = false\r\n  document.getElementById(\"chk-move-map-and-controls\").checked = false\r\n  handle = { x: null, y: null }\r\n  newcontrols.deleteAllControls()\r\n  const parsedCourses = new CourseParser(e, worldfile, localworldfile)\r\n  courses = parsedCourses.courses\r\n  document.getElementById(\"rg2-manager-courses-count\").innerHTML = \"Courses (\" + courses.length + \")\"\r\n  if (courses.length > 0) {\r\n    newcontrols = parsedCourses.newcontrols\r\n    mapping = parsedCourses.mapping\r\n    if (mapping.length > 0) {\r\n      document.getElementById(\"chk-enrich-course-names\").classList.remove(\"d-none\")\r\n    } else {\r\n      document.getElementById(\"chk-enrich-course-names\").classList.add(\"d-none\")\r\n    }\r\n    coursesGeoreferenced = parsedCourses.georeferenced\r\n    displayInfoDialog(\"Course details\", getCourseInfoAsHTML())\r\n    createResultCourseMapping()\r\n    displayCourseAllocations()\r\n    fitControlsToMap()\r\n  }\r\n  redraw()\r\n}\r\n\r\nfunction processMap(e) {\r\n  // called to load a new map locally rather than from server when creating a new map\r\n  loadNewMap(e.target.result, true)\r\n  document.getElementById(\"rg2-load-map-file\").classList.add(\"is-valid\")\r\n  mapLoaded = true\r\n  mapSize = getMapSize()\r\n  fitControlsToMap()\r\n  redraw()\r\n  document.getElementById(\"btn-add-map\").removeAttribute(\"disabled\")\r\n}\r\n\r\nfunction processResultFile(e) {\r\n  const parsedResults = new ResultParser(e, resultsFileFormat)\r\n  results = parsedResults.results\r\n  document.getElementById(\"rg2-manager-results-count\").innerHTML = \"Results (\" + results.length + \")\"\r\n  if (results.length > 0) {\r\n    resultCourses = parsedResults.resultCourses\r\n    displayInfoDialog(\"Result details\", getResultInfoAsHTML())\r\n    displayCourseAllocations()\r\n  }\r\n}\r\n\r\nfunction readCourses(e) {\r\n  let reader = new FileReader()\r\n  reader.onerror = function () {\r\n    showWarningDialog(\"Course file error\", \"The selected course file could not be read.\")\r\n  }\r\n\r\n  reader.onload = function (e) {\r\n    processCourseFile(e)\r\n  }\r\n  //\r\n  // TODO: input charset should be set based on RG_FILE_ENCODING variable\r\n  // reader.readAsText(e.target.files[0], 'ISO-8859-1')\r\n  reader.readAsText(e.target.files[0])\r\n}\r\n\r\nfunction readGeorefFile(e) {\r\n  const reader = new FileReader()\r\n  try {\r\n    reader.readAsText(e.target.files[0])\r\n  } catch (err) {\r\n    showWarningDialog(\"File read error\", \"Failed to open selected world file.\")\r\n    return\r\n  }\r\n  reader.onerror = function () {\r\n    showWarningDialog(\"World file error\", \"The selected world file could not be read.\")\r\n  }\r\n  reader.onload = function (e) {\r\n    // see http://en.wikipedia.org/wiki/World_file\r\n    const txt = e.target.result\r\n    const args = txt.split(/[\\r\\n]+/g)\r\n    localworldfile = new Worldfile({\r\n      A: args[0],\r\n      B: args[2],\r\n      C: args[4],\r\n      D: args[1],\r\n      E: args[3],\r\n      F: args[5]\r\n    })\r\n    const defaultGeorefValue = georefsystems.getDefaultValue()\r\n    document.getElementById(\"rg2-georef-type\").value = defaultGeorefValue\r\n    convertWorldFile(defaultGeorefValue)\r\n  }\r\n}\r\n\r\nfunction readMapFile(e) {\r\n  const reader = new FileReader()\r\n  reader.onload = function (e) {\r\n    processMap(e)\r\n  }\r\n  const format = e.target.files[0].name.substr(-3, 3).toUpperCase()\r\n  if (format === \"JPG\" || format === \"GIF\") {\r\n    mapFile = e.target.files[0]\r\n    reader.readAsDataURL(e.target.files[0])\r\n  } else {\r\n    showWarningDialog(\r\n      \"File type error\",\r\n      e.target.files[0].name + \" is not recognised. Only .jpg and .gif files are supported at present.\"\r\n    )\r\n  }\r\n}\r\n\r\nfunction readResults() {\r\n  let reader = new FileReader()\r\n\r\n  reader.onerror = function () {\r\n    showWarningDialog(\"Results file error\", \"The selected results file could not be read.\")\r\n  }\r\n  reader.onload = function (e) {\r\n    checkResultsFileEncoding(e)\r\n  }\r\n  format = resultsOrCourseFile.name.substr(-3, 3).toUpperCase()\r\n  if (format === \"XML\" || format === \"CSV\") {\r\n    resultsFileFormat = format\r\n    reader.readAsText(resultsOrCourseFile, encodings[encodingIndex])\r\n  } else {\r\n    showWarningDialog(\"File type error\", \"Results file type is not recognised. Please select a valid file.\")\r\n  }\r\n}\r\n\r\nfunction removeSingleSplits(format) {\r\n  // Fiddle to allow Sprintelope type events: courses and results but no splits  which on its own is fine\r\n  // but also support results files which have a single control punch that is used to define what course\r\n  //  a runner was on. Safest way is just to delete all splits if there is only a single control punch. This mucks\r\n  // up real courses with a single control which is probably not a thing anyway, although they can still be set up\r\n  if (format === config.FORMAT_NORMAL) {\r\n    for (let i = 0; i < results.length; i += 1) {\r\n      const fields = results[i].splits.split(\";\")\r\n      // splits string contains comma-separated list of times at controls followed by finish time\r\n      // so the two fields are a control and a finish\r\n      if (fields.length === 2) {\r\n        results[i].splits = fields[1]\r\n        results.codes = []\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction renumberResults() {\r\n  // updates the course id and name when we know the mapping\r\n  // and deletes results for courses not required\r\n  let newResults = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const id = getCourseIDForResult(results[i].course)\r\n    if (id !== config.DO_NOT_SAVE_COURSE) {\r\n      results[i].courseid = id\r\n      results[i].course = getCourseName(id)\r\n      // set null here: overwritten later in extractVariants if this is a variant\r\n      results[i].variantid = \"\"\r\n      newResults.push(results[i])\r\n    }\r\n  }\r\n  results = newResults\r\n}\r\n\r\nfunction setButtons() {\r\n  document.getElementById(\"btn-create-event\").addEventListener(\"click\", (e) => {\r\n    confirmCreateEvent(e)\r\n  })\r\n  document.getElementById(\"btn-update-event\").addEventListener(\"click\", (e) => {\r\n    confirmUpdateEvent(e)\r\n  })\r\n\r\n  document.getElementById(\"btn-delete-route\").addEventListener(\"click\", (e) => {\r\n    confirmDeleteRoute(doDeleteRoute)\r\n  })\r\n  document.getElementById(\"btn-delete-event\").addEventListener(\"click\", (e) => {\r\n    confirmDeleteEvent(doDeleteEvent)\r\n  })\r\n  document.getElementById(\"btn-add-map\").addEventListener(\"click\", (e) => {\r\n    confirmAddMap(e)\r\n  })\r\n  document.getElementById(\"btn-delete-unused-maps\").addEventListener(\"click\", (e) => {\r\n    unusedMaps = confirmDeleteUnusedMaps(unusedMaps.slice(0), doDeleteUnusedMaps)\r\n  })\r\n  document.getElementById(\"btn-draw-courses\").addEventListener(\"click\", (e) => {\r\n    startDrawingCourses(e)\r\n  })\r\n  document.getElementById(\"rg2-load-georef-file\").addEventListener(\"input\", (e) => {\r\n    readGeorefFile(e)\r\n  })\r\n  document.getElementById(\"rg2-load-map-file\").addEventListener(\"input\", (e) => {\r\n    validateMapUpload(e.target.files[0])\r\n    readMapFile(e)\r\n  })\r\n  const loadResults = document.getElementById(\"rg2-load-results-file\")\r\n  loadResults.addEventListener(\"click\", (e) => {\r\n    if (!mapLoaded) {\r\n      showWarningDialog(\"No map loaded\", \"Please load a map file before adding results.\")\r\n      e.preventDefault()\r\n    }\r\n  })\r\n  loadResults.addEventListener(\"change\", (e) => {\r\n    resultsOrCourseFile = e.target.files[0]\r\n    initialiseEncodings()\r\n    readResults()\r\n  })\r\n  document.getElementById(\"chk-move-map-and-controls\").addEventListener(\"click\", (e) => {\r\n    toggleMoveAll(e.target.checked)\r\n  })\r\n  document.getElementById(\"chk-no-results\").addEventListener(\"click\", (e) => {\r\n    toggleResultsRequired(e.target.checked)\r\n  })\r\n  document.getElementById(\"chk-score-event\").addEventListener(\"click\", (e) => {\r\n    toggleScoreEvent(e.target.checked)\r\n  })\r\n  document.getElementById(\"chk-enrich-course-names\").addEventListener(\"click\", (e) => {\r\n    toggleEnrichCourseNames(e.target.checked)\r\n  })\r\n  document.getElementById(\"chk-sort-results\").addEventListener(\"click\", (e) => {\r\n    toggleSortResults(e.target.checked)\r\n  })\r\n  const load = document.getElementById(\"rg2-load-course-file\")\r\n  load.addEventListener(\"click\", (e) => {\r\n    if (!mapLoaded) {\r\n      showWarningDialog(\"No map loaded\", \"Please load a map file before adding courses.\")\r\n      e.preventDefault()\r\n    }\r\n  })\r\n  load.addEventListener(\"change\", (e) => {\r\n    readCourses(e)\r\n  })\r\n}\r\n\r\nfunction setControlLocations() {\r\n  // called when saving courses\r\n  // reads control locations and updates course details\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    for (let j = 0; j < courses[i].codes.length; j += 1) {\r\n      const c = getControlXY(courses[i].codes[j])\r\n      courses[i].x[j] = c.x\r\n      courses[i].y[j] = c.y\r\n    }\r\n  }\r\n}\r\n\r\nfunction setCourseName() {\r\n  const course = document.getElementById(\"rg2-new-course-name\").value\r\n  if (course) {\r\n    drawnCourse.name = course\r\n  }\r\n}\r\n\r\nfunction setEvent(kartatid) {\r\n  if (kartatid) {\r\n    loadEventByKartatID(kartatid)\r\n  } else {\r\n    // no event selected so initialise everything\r\n    initialiseData()\r\n    document.getElementById(\"rg2-edit-event-name\").value = \"\"\r\n    document.getElementById(\"rg2-edit-club-name\").value = \"\"\r\n    eventEditDatePicker.setDate(\"\")\r\n    document.getElementById(\"rg2-edit-event-level\").value = \"\"\r\n    document.getElementById(\"rg2-edit-event-comments\").value = \"\"\r\n    document.getElementById(\"rg2-edit-exclude\").value = defaultExcludedText\r\n    document.getElementById(\"rg2-route-selected\").replaceChildren()\r\n    document.getElementById(\"chk-edit-read-only\").checked = false\r\n    document.getElementById(\"rg2-course-allocations\").innerHTML = \"\"\r\n  }\r\n}\r\n\r\nfunction setGeoref(optionValue) {\r\n  if (optionValue !== 0) {\r\n    convertWorldFile(optionValue)\r\n  }\r\n}\r\n\r\nfunction setMapName() {\r\n  newMap.name = document.getElementById(\"rg2-map-name\").value\r\n  validateValue(\"rg2-map-name\", (value) => {\r\n    // at least one character\r\n    return /./.test(value)\r\n  })\r\n}\r\n\r\nfunction startDrawingCourses() {\r\n  if (mapLoaded) {\r\n    drawingCourses = true\r\n    courses.length = 0\r\n    newcontrols.deleteAllControls()\r\n    drawnCourse.name = \"Course\"\r\n    drawnCourse.x = []\r\n    drawnCourse.y = []\r\n    drawnCourse.codes = []\r\n    drawnCourse.courseid = 0\r\n    document.getElementById(\"rg2-new-course-name\").value\r\n    document.getElementById(\"rg2-draw-courses\").classList.remove(\"d-none\")\r\n  } else {\r\n    showWarningDialog(\"No map selected\", \"Please load a map before drawing courses\")\r\n  }\r\n}\r\n\r\nfunction toggleEnrichCourseNames(checked) {\r\n  isEnrichCourseNames = checked\r\n  displayCourseAllocations()\r\n}\r\n\r\n// locks or unlocks background when adjusting map\r\nfunction toggleMoveAll(checkedState) {\r\n  backgroundLocked = checkedState\r\n}\r\n\r\nfunction toggleResultsRequired(checked) {\r\n  // check box checked means event does not have results\r\n  hasResults = !checked\r\n  createResultCourseMapping()\r\n  displayCourseAllocations()\r\n}\r\n\r\nfunction toggleScoreEvent(checked) {\r\n  newEventIsScoreEvent = checked\r\n}\r\n\r\nfunction toggleSortResults(checkedState) {\r\n  sortResults = checkedState\r\n}\r\n\r\nfunction updateGeorefMap() {\r\n  // Plot a polygon and recentre the map on the polygon\r\n  const lon = newMap.lon\r\n  const lat = newMap.lat\r\n  //console.log(newMap)\r\n  let poly_coords = []\r\n  // For some reason this is the order the coordinates are stored in.\r\n  const indices = [3, 1, 2, 0]\r\n  indices.forEach(function (i) {\r\n    poly_coords.push([lat[i], lon[i]])\r\n  })\r\n  const poly = L.polygon(poly_coords, { color: \"red\" })\r\n  poly.addTo(georefmap)\r\n  document.getElementById(\"rg2-world-file-map-container\").classList.remove(\"d-none\")\r\n  georefmap.invalidateSize()\r\n  georefmap.fitBounds(poly.getBounds())\r\n}\r\n\r\nfunction validateData() {\r\n  if (document.getElementById(\"rg2-event-name\").value === \"\") {\r\n    return \"Event name is not valid.\"\r\n  }\r\n  if (mapIndex === config.INVALID_MAP_ID) {\r\n    return \"No map selected.\"\r\n  }\r\n  if (document.getElementById(\"rg2-select-club-name\").value === \"\") {\r\n    return \"Club name is not valid.\"\r\n  }\r\n  if (eventSelectDatePicker.getDate(\"yyyy-mm-dd\") === undefined) {\r\n    return \"Date is not valid.\"\r\n  }\r\n  if (document.getElementById(\"rg2-select-event-level\").value === \"X\") {\r\n    return \"Event level is not valid.\"\r\n  }\r\n  if (!format) {\r\n    return \"Event format is not valid.\"\r\n  }\r\n  if (courses.length === 0) {\r\n    if (!drawingCourses) {\r\n      return \"No course information. Check your course XML file.\"\r\n    }\r\n  }\r\n  if (results.length === 0) {\r\n    if (hasResults) {\r\n      return \"No results information. Check your results file.\"\r\n    }\r\n  }\r\n  if (!controlsAdjusted) {\r\n    return \"Controls have not been adjusted on the map.\"\r\n  }\r\n  return \"OK\"\r\n}\r\n\r\nfunction validateMapUpload(upload) {\r\n  let reader = new FileReader()\r\n  reader.onload = function (e) {\r\n    let image = new Image()\r\n    image.src = e.target.result\r\n    image.onload = function () {\r\n      const size = Math.round(upload.size / 1024 / 1024)\r\n      if (\r\n        size > config.FILE_SIZE_WARNING ||\r\n        image.height > config.PIXEL_SIZE_WARNING ||\r\n        image.width > config.PIXEL_SIZE_WARNING\r\n      ) {\r\n        let msg = \"The uploaded map file is \" + size + \"MB (\" + image.width\r\n        msg += \" x \" + image.height + \"px). It is recommended that you use maps under \" + config.FILE_SIZE_WARNING\r\n        msg += \"MB with a maximum dimension of \" + config.PIXEL_SIZE_WARNING + \"px. Please see the \"\r\n        msg +=\r\n          \"<a href='https://www.routegadget.co.uk/docs/2.x/manager-guide/maps#map-file-guidance' target='_blank' rel='noopener'>RG2 manager guide</a> for \"\r\n        msg += \"guidance on how to create map files.\"\r\n        showWarningDialog(\"Oversized map upload\", msg)\r\n      }\r\n    }\r\n  }\r\n  reader.readAsDataURL(upload)\r\n}\r\n"],"names":["CourseParser","worldfile","localWorldfile","Controls","rawXML","xml","showWarningDialog","version","nodelist","text","pt","i","code","latlng","control","places","coords","lat","lng","codes","courseName","className","latLng","x","y","name","course","nodeList","tagName","controlList","type","isGeoref","geopos","mapPosition","controls","confirmDeleteEvent","doDeleteEvent","id","dlg","createModalDialog","confirmDeleteRoute","doDeleteRoute","routeid","confirmDeleteUnusedMaps","unusedMaps","doDeleteUnusedMaps","boxes","checked","box","displayUnusedMaps","maps","html","getEventEditDropdown","events","activeID","generateSelectOption","decode","getEventLevelDropdown","values","hasZeroTime","time","sortResultItems","a","b","testForInvalidCharacters","rawtext","count","ResultParserCSV","rawCSV","fields","result","getSecsFromHHMM","info","formatSecsAsMMSS","getSecsFromHHMMSS","nextsplit","nextcode","splits","totaltime","headers","titles","str","found","j","position","nc","classifier","rows","newResult","commas","semicolons","ResultParserIOFV2","resultlist","extractAttributeZero","extractTextContentZero","splitlist","finishtime","l","temp","element","index","personlist","classlist","err","ResultParserIOFV3","k","timeInt","ResultParser","fileFormat","parsedResults","config","user","newMap","MapData","georefsystems","Georefs","mapIndex","format","newEventIsScoreEvent","hasResults","newcontrols","courses","mapping","isEnrichCourseNames","mapLoaded","coursesGeoreferenced","controlsAdjusted","drawingCourses","drawnCourse","results","variants","resultCourses","mapFile","resultsOrCourseFile","resultsFileFormat","encodings","errorCount","encodingIndex","useThisEncoding","backgroundLocked","sortResults","handle","mapSize","localworldfile","Worldfile","georefmap","eventSelectDatePicker","eventEditDatePicker","activeEditEventID","defaultExcludedText","addNewControl","adjustManagerControls","p1","p2","button","ctx","scaleX","scaleY","dx","dy","checkResultsFileEncoding","e","errors","processResultFile","lowest","readResults","confirmAddMap","doUploadMapFile","confirmCreateEvent","valid","validateData","doCreateEvent","confirmUpdateEvent","doUpdateEvent","convertWorldFile","value","system","getMapSize","proj4","source","dest","xpx","ypx","xsrc","ysrc","p","transformed","wf","updateGeorefMap","copyXYToOldXY","createCourseDropdown","courseidx","idx","enrichCourseName","createResultCourseMapping","displayCourseAllocations","displayInfoDialog","title","doAddMap","params","data","postApi","handleMapAdded","generateNewEventData","handleEventAdded","handleEventDeleted","handleRouteDeleted","map","handleUnusedMapsDeleted","doGetMaps","getApi","handleMapsLoaded","doLogin","handleLoginResponse","exclude","handleEventUpdated","details","formData","handleMapUploaded","drawManagerControls","opt","getOverprintDetails","enableManager","setButtons","loadNewMap","Datepicker","setMapName","setCourseName","setEvent","setGeoref","course_name","classes","class_name","enrichCourseNames","eventFinishedLoading","kartatid","event","getEventInfoForKartatID","isScoreEvent","getRouteDeleteDropdown","eventListLoaded","findUnusedMaps","extractVariants","getVariantID","mapIDIsInUse","fitControlsToMap","georefOK","getBoundingBox","scale","setControlLocations","mapResultsToCourses","removeSingleSplits","renumberResults","getControlCount","courseid","getControlXY","c","getCourseIDForResult","getCourseInfoAsHTML","t","getCourseName","getMapDropdown","getResultInfoAsHTML","runners","oldcourse","routes","getRoutesForEvent","match","response","doGetEvents","setActiveEventIDByKartatID","setEventTitleBar","initialiseData","initialiseEncodings","initialiseManager","User","L","initialiseLocationMap","managerDragEnded","managerMapLoadCallback","redraw","managerMouseUp","newCourses","selector","processCourseFile","parsedCourses","processMap","readCourses","reader","readGeorefFile","args","defaultGeorefValue","readMapFile","newResults","startDrawingCourses","validateMapUpload","loadResults","toggleMoveAll","toggleResultsRequired","toggleScoreEvent","toggleEnrichCourseNames","toggleSortResults","load","loadEventByKartatID","optionValue","validateValue","checkedState","lon","poly_coords","poly","upload","image","size","msg"],"mappings":"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"}