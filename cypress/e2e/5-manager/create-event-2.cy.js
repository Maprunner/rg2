import manager from "../../fixtures/validmanager.json"
describe("Event creation 2", { testIsolation: false }, () => {
  before(() => {
    cy.task("setUpKartat", { config: "config-01" })
  })
  beforeEach(() => {
    cy.intercept("rg2api.php?type=event&id=*").as("event")
    cy.intercept("rg2api.php?type=events*").as("events")
    cy.intercept("rg2api.php?type=login*").as("login")
    cy.intercept("rg2api.php?type=maps*").as("maps")
  })
  it("should create an event with IOF XML v2 results", () => {
    cy.logIn(manager.name, manager.password)
    cy.addMap("Ellenbrook georef", "ellenbrook.jpg", "ellenbrook.jgw")
    cy.get("#manage-create-tab").click()
    cy.get("#rg2-event-name").clear().type("Ellenbrook Saturday Series")
    cy.get("#rg2-select-map").select("404: Ellenbrook georef")
    cy.get("#rg2-select-club-name").clear().type("HH")
    cy.get("#rg2-select-event-date").clear().type("2022-06-04")
    cy.get("#rg2-enter-event-comments").clear()
    cy.get("#rg2-select-event-level").select("T")
    cy.selectCourseFile("ellenbrookIOFV1courses.xml", "Invalid IOF file format. Version 1.0.0 not supported")
    cy.selectCourseFile(
      "ellenbrookIOFV2invalidcourses.xml",
      "File is not a valid XML course file. CourseData element missing"
    )
    cy.selectResultsFile("ellenbrook.csv")
    cy.selectCourseFile("ellenbrookIOFV2Georefcourses.xml")
    cy.createEvent()
  })
  it("should create a JK Relay", () => {
    cy.logIn(manager.name, manager.password)
    cy.addMap("Pwll Ddu georef", "pwllddu.jpg", "pwllddu.jgw")
    cy.get("#manage-create-tab").click()
    cy.get("#rg2-event-name").clear().type("JK2014 Relays: Pwll Ddu")
    cy.get("#rg2-select-map").select("405: Pwll Ddu georef")
    cy.get("#rg2-select-club-name").clear().type("WOA")
    cy.get("#rg2-select-event-date").clear().type("2014-04-21")
    cy.get("#rg2-enter-event-comments").clear("JK Relay example")
    cy.get("#rg2-select-event-level").select("I")
    cy.selectCourseFile("pwlldduIOFV3relay.xml")
    // select sort results button
    cy.get("#chk-sort-results").check()
    cy.selectResultsFile("pwllddu.csv")
    cy.get("#chk-score-event").click()
    cy.get("#btn-create-event").click()
    cy.closeWarningDialog("Controls have not been adjusted")
  })
  it("should allow you to adjust controls", () => {
    // drag controls
    cy.get("#rg2-map-canvas")
      .trigger("mousedown", 700, 400, { button: 0 })
      .trigger("mousemove", 750, 450)
      .trigger("mouseup", 750, 450, { button: 0 })
    // drag controls and map if locked from checkbox
    cy.get("#chk-move-map-and-controls").check()
    cy.get("#rg2-map-canvas")
      .trigger("mousedown", 700, 400, { button: 0 })
      .trigger("mousemove", 750, 450)
      .trigger("mouseup", 750, 450, { button: 0 })
    cy.get("#chk-move-map-and-controls").uncheck()
    // drag controls and map if dragged with right click
    cy.get("#rg2-map-canvas")
      .trigger("mousedown", 700, 400, { button: 2 })
      .trigger("mousemove", 750, 450)
      .trigger("mouseup", 750, 450, { button: 2 })
    // left click to add a locked handle
    cy.get("#rg2-map-canvas").trigger("mousedown", 500, 200).trigger("mouseup", 500, 200)
    // scale controls around locked handle
    cy.get("#rg2-map-canvas")
      .trigger("mousedown", 800, 400, { button: 0 })
      .trigger("mousemove", 700, 300)
      .trigger("mouseup", 700, 300, { button: 0 })
    cy.createEvent()
  })
  it("should create an event with no results and a drawn course", () => {
    cy.logIn(manager.name, manager.password)
    cy.get("#manage-create-tab").click()
    cy.get("#btn-draw-courses").click()
    cy.closeWarningDialog("Please load a map before drawing courses")
    cy.get("#rg2-event-name").clear().type("Jersey Farm Street-O")
    cy.get("#rg2-select-map").select("126: Jersey Farm")
    cy.get("#rg2-select-club-name").clear().type("HH")
    cy.get("#rg2-select-event-date").clear().type("2022-07-11")
    cy.get("#rg2-enter-event-comments").clear()
    cy.get("#rg2-select-event-level").select("L")
    cy.get("#chk-no-results").check()
    cy.get("#chk-score-event").uncheck()
    cy.get("#btn-create-event").click()
    cy.closeWarningDialog("No course information")
    cy.get("#btn-draw-courses").click()
    cy.get("#rg2-new-course-name").clear().type("45 minute score")
    // draw start and finish
    cy.get("#rg2-map-canvas")
      .trigger("mousedown", 700, 400)
      .trigger("mouseup", 700, 400)
      .trigger("mousedown", 700, 400)
      .trigger("mouseup", 700, 400)
    cy.createEvent()
  })
  it("should create an event with enrichable course names", () => {
    cy.logIn(manager.name, manager.password)
    cy.get("#manage-create-tab").click()
    cy.get("#rg2-event-name").clear().type("Pwll Ddu enrichable")
    cy.get("#rg2-select-map").select("405: Pwll Ddu georef")
    cy.get("#rg2-select-club-name").clear().type("WOA")
    cy.get("#rg2-select-event-date").clear().type("2025-06-17")
    cy.get("#rg2-enter-event-comments").clear("Enrichable course names example")
    cy.get("#rg2-select-event-level").select("L")
    cy.selectCourseFile("pwlldduenrichable.xml")
    // adjust controls
    cy.get("#rg2-map-canvas")
      .trigger("mousedown", 700, 400, { button: 0 })
      .trigger("mousemove", 750, 450)
      .trigger("mouseup", 750, 450, { button: 0 })
    cy.get("#chk-no-results").click()
    // enable, disable, enable enrichable course names
    cy.get("#chk-enrich-course-names").check()
    cy.get("#rg2-alloc-0").find(":selected").should("contain", "1: MO")
    cy.get("#rg2-alloc-1").find(":selected").should("contain", "2: WSV, MSV")
    cy.get("#rg2-alloc-2").find(":selected").should("contain", "3: WUV, MUV")
    cy.get("#chk-enrich-course-names").uncheck()
    cy.get("#rg2-alloc-0").find(":selected").should("contain", "1").should("not.contain", "1:")
    cy.get("#rg2-alloc-1").find(":selected").should("contain", "2").should("not.contain", "2:")
    cy.get("#rg2-alloc-2").find(":selected").should("contain", "3").should("not.contain", "3:")
    cy.get("#chk-enrich-course-names").check()
    cy.get("#rg2-alloc-0").find(":selected").should("contain", "1: MO")
    cy.get("#rg2-alloc-1").find(":selected").should("contain", "2: WSV, MSV")
    cy.get("#rg2-alloc-2").find(":selected").should("contain", "3: WUV, MUV")
    cy.createEvent()
  })
  it("should display the new events", () => {
    cy.visit("http://localhost/rg2")
    cy.wait("@events")
  })
  it("should upload a tcx file to the newly created Ellenbrook event", () => {
    cy.get("#rg2-event-table  > tr[data-kartatid='389']").click()
    cy.wait("@event")
    cy.get("#draw-tab").click()
    cy.get("#rg2-select-course").select("Light Green")
    cy.get("#rg2-select-name").select("30:09 David Dixon")
    cy.get("#rg2-load-gps-file").selectFile("./cypress/fixtures/data/ellenbrook.tcx")
    cy.get("#btn-save-gps-route").click()
    cy.wait("@event")
    cy.closeWarningDialog("Your route has been saved")
  })
})
