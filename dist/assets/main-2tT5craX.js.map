{"version":3,"file":"main-2tT5craX.js","sources":["../../src/js/api.js","../../src/js/translate.js","../../src/js/utils.js","../../src/js/config.js","../../src/js/controls.js","../../src/js/handles.js","../../src/js/gpstrack.js","../../src/js/hash.js","../../src/js/courseparser.js","../../src/js/georefs.js","../../src/js/worldfile.js","../../src/js/mapdata.js","../../src/js/resultparsercsv.js","../../src/js/resultparseriofv2.js","../../src/js/resultparseriofv3.js","../../src/js/resultparser.js","../../src/js/user.js","../../src/js/manager.js","../../src/js/result.js","../../src/js/results.js","../../src/js/runner.js","../../src/js/stats.js","../../src/js/rg2ui.js","../../src/js/draw.js","../../src/js/event.js","../../src/js/events.js","../../src/js/course.js","../../src/js/courses.js","../../src/js/animation.js","../../src/js/overlay.js","../../src/js/canvas.js","../../src/js/main.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { showWarningDialog } from \"./utils\"\r\n\r\nconst rg2Axios = axios.create({\r\n  baseURL: rg2Config.api_url\r\n})\r\n\r\nexport function getApi(params, onResponse, errorMsg) {\r\n  params.t = new Date().getTime()\r\n  document.getElementById(\"rg2-container\").style.cursor = \"wait\"\r\n  rg2Axios({\r\n    method: \"get\",\r\n    url: \"\",\r\n    params: params\r\n  })\r\n    .then((response) => {\r\n      // handlers that need kartatid (unhelpfully called id in the API) send it as a parameter: otherwise it will go as undefined which is OK\r\n      onResponse(response.data.data, params.id)\r\n    })\r\n    .catch(function (error) {\r\n      reportJSONFail(errorMsg + \": \" + error)\r\n    })\r\n    .finally(function () {\r\n      document.getElementById(\"rg2-container\").style.cursor = \"auto\"\r\n    })\r\n}\r\n\r\nexport function postApi(data, params, onResponse, errorMsg, handleKeksi = () => {}) {\r\n  let config = { method: \"post\" }\r\n  config.data = data\r\n  if (params.headers) {\r\n    config.headers = params.headers\r\n    delete params.headers\r\n  }\r\n  params.t = new Date().getTime()\r\n  config.params = params\r\n  document.getElementById(\"rg2-container\").style.cursor = \"wait\"\r\n  rg2Axios(config)\r\n    .then((response) => {\r\n      if (response.data.keksi) {\r\n        handleKeksi(response.data.keksi)\r\n      }\r\n      onResponse(response.data)\r\n    })\r\n    .catch(function (error) {\r\n      reportJSONFail(errorMsg + \": \" + error)\r\n    })\r\n    .finally(function () {\r\n      document.getElementById(\"rg2-container\").style.cursor = \"auto\"\r\n    })\r\n}\r\n\r\nfunction reportJSONFail(error) {\r\n  document.getElementById(\"rg2-load-progress\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-map-load-progress\").classList.add(\"d-none\")\r\n  showWarningDialog(\"Configuration error\", error)\r\n}\r\n","import { getApi } from \"./api\"\r\nimport { generateOption } from \"./utils\"\r\n\r\n// use English until we load something else\r\nlet dictionary = {}\r\ndictionary.code = \"en\"\r\nlet keys = []\r\n\r\nexport function createLanguageDropdown(languages) {\r\n  let dropdown = document.getElementById(\"rg2-select-language\")\r\n  dropdown.innerHTML = \"\"\r\n  let selected = dictionary.code === \"en\"\r\n  dropdown.options.add(generateOption(\"en\", \"en: English\", selected))\r\n  for (let i = 0; i < languages.length; i = i + 1) {\r\n    selected = dictionary.code === languages[i].code\r\n    dropdown.options.add(generateOption(languages[i].code, languages[i].code + \": \" + languages[i].language, selected))\r\n  }\r\n  dropdown.addEventListener(\"change\", (e) => {\r\n    const newlang = e.target.value\r\n    if (newlang !== dictionary.code) {\r\n      if (newlang === \"en\") {\r\n        setNewLanguage(\"en\")\r\n      } else {\r\n        doGetNewLanguage(newlang)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction doGetNewLanguage(lang) {\r\n  const params = { type: \"lang\", lang: lang }\r\n  getApi(params, handleLanguageResponse, \"Language request failed\")\r\n}\r\n\r\nfunction getEnglishKey(str) {\r\n  // builds an array of everything that has been translated\r\n  // and allocates a key for use in data-rg2t attribute\r\n  const idx = keys.indexOf(str)\r\n  if (idx > -1) {\r\n    return idx\r\n  } else {\r\n    keys.push(str)\r\n    return keys.length - 1\r\n  }\r\n}\r\n\r\nfunction handleLanguageResponse(response) {\r\n  setNewLanguage(response.lang)\r\n}\r\n\r\nexport function initLanguageOptions() {\r\n  // set available languages and set start language if requested\r\n  if (rg2Config.start_language !== \"en\") {\r\n    doGetNewLanguage(rg2Config.start_language)\r\n  }\r\n}\r\n\r\nexport function setNewLanguage(lang) {\r\n  if (lang === \"en\") {\r\n    dictionary = { code: \"en\" }\r\n  } else {\r\n    dictionary = lang\r\n  }\r\n  translateAllText()\r\n}\r\n\r\nexport function t(str, element = \"span\") {\r\n  const key = getEnglishKey(str)\r\n  // eslint-disable-next-line no-prototype-builtins\r\n  if (dictionary.hasOwnProperty(str)) {\r\n    str = dictionary[str]\r\n  }\r\n  // passing an empty element returns an unformatted string\r\n  if (element === \"\") {\r\n    return str\r\n  }\r\n  // otherwise add a wrapper with data attribute to allow translation\r\n  return `<${element} data-rg2t='${key}'>${str}</${element}>`\r\n}\r\n\r\nfunction translateAllText() {\r\n  // translates every element that has a data-rg2t attribute\r\n  const elements = document.querySelectorAll(\"[data-rg2t]\")\r\n  for (let el of elements) {\r\n    const key = parseInt(el.dataset.rg2t, 10)\r\n    el.innerText = t(keys[key], \"\")\r\n  }\r\n}\r\n","// eslint-disable-next-line no-unused-vars\r\nimport * as bootstrap from \"bootstrap\"\r\nimport { t } from \"./translate\"\r\n\r\nexport function extractAttributeZero(nodelist, attribute, defaultValue) {\r\n  if (nodelist.length > 0) {\r\n    return nodelist[0].getAttribute(attribute).trim()\r\n  }\r\n  return defaultValue\r\n}\r\n\r\n// converts seconds to MM:SS\r\nexport function formatSecsAsMMSS(secs) {\r\n  const minutes = Math.floor(secs / 60)\r\n  let formattedtime = minutes\r\n  const seconds = secs - minutes * 60\r\n  if (seconds < 10) {\r\n    formattedtime += \":0\" + seconds\r\n  } else {\r\n    formattedtime += \":\" + seconds\r\n  }\r\n  return formattedtime\r\n}\r\n\r\n// returns seconds as hh:mm:ss\r\nexport function formatSecsAsHHMMSS(secs) {\r\n  let formattedtime\r\n  const hours = Math.floor(secs / 3600)\r\n  if (hours < 10) {\r\n    formattedtime = \"0\" + hours + \":\"\r\n  } else {\r\n    formattedtime = hours + \":\"\r\n  }\r\n  secs = secs - hours * 3600\r\n  const minutes = Math.floor(secs / 60)\r\n  if (minutes < 10) {\r\n    formattedtime += \"0\" + minutes\r\n  } else {\r\n    formattedtime += minutes\r\n  }\r\n  secs = secs - minutes * 60\r\n  if (secs < 10) {\r\n    formattedtime += \":0\" + secs\r\n  } else {\r\n    formattedtime += \":\" + secs\r\n  }\r\n  return formattedtime\r\n}\r\n\r\nexport function generateOption(value, text, selected = false) {\r\n  let opt = document.createElement(\"option\")\r\n  opt.value = value\r\n  opt.text = text\r\n  if (selected) {\r\n    opt.selected = true\r\n  }\r\n  return opt\r\n}\r\n\r\nexport function generateSelectOption(value, text, selected = false) {\r\n  // returns an option line for a Bootstrap select dropdown\r\n  // <option value=\"0\" selected>Not georeferenced</option>\r\n  return `<option value=\"${value}\"${selected ? \" selected\" : \"\"}>${text}</option>`\r\n}\r\n\r\nexport function getAngle(x1, y1, x2, y2) {\r\n  let angle = Math.atan2(y2 - y1, x2 - x1)\r\n  if (angle < 0) {\r\n    angle = angle + 2 * Math.PI\r\n  }\r\n  return angle\r\n}\r\n\r\nexport function getDistanceBetweenPoints(x1, y1, x2, y2) {\r\n  // Pythagoras\r\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n}\r\n\r\nexport function getLatLonDistance(lat1, lon1, lat2, lon2) {\r\n  // Haversine formula (http://www.codecodex.com/wiki/Calculate_distance_between_two_points_on_a_globe)\r\n  const dLat = (lat2 - lat1).toRad()\r\n  const dLon = (lon2 - lon1).toRad()\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) * Math.sin(dLon / 2) * Math.sin(dLon / 2)\r\n  // multiply by IUUG earth mean radius (http://en.wikipedia.org/wiki/Earth_radius) in metres\r\n  return 6371009 * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\r\n}\r\n\r\nexport function getSecsFromHHMM(time) {\r\n  if (!time) {\r\n    return 0\r\n  }\r\n  let secs = 0\r\n  const bits = time.split(\":\")\r\n  secs = parseInt(bits[0], 10) * 3600 + parseInt(bits[1], 10) * 60\r\n  if (isNaN(secs)) {\r\n    return 0\r\n  }\r\n  return secs\r\n}\r\n\r\n// converts MM:SS or HH:MM:SS to seconds based on number of :\r\nexport function getSecsFromHHMMSS(time) {\r\n  if (!time) {\r\n    return 0\r\n  }\r\n  let secs = 0\r\n  // force format to use : if it came in with .\r\n  let bits = time.replace(/\\./g, \":\").split(\":\")\r\n  if (bits.length === 2) {\r\n    secs = parseInt(bits[0], 10) * 60 + parseInt(bits[1], 10)\r\n  } else {\r\n    if (bits.length === 3) {\r\n      secs = parseInt(bits[0], 10) * 3600 + parseInt(bits[1], 10) * 60 + parseInt(bits[2], 10)\r\n    }\r\n  }\r\n  if (isNaN(secs)) {\r\n    return 0\r\n  }\r\n  return secs\r\n}\r\n\r\nexport const showWarningDialog = (title, text) => {\r\n  showToast(title, text)\r\n}\r\n\r\nconst toast = document.getElementById(\"rg2-toast-container\")\r\nexport const showToast = (title, text) => {\r\n  const newToast = document.createElement(\"div\")\r\n  newToast.classList.add(\"toast\")\r\n  newToast.setAttribute(\"data-bs-autohide\", \"false\")\r\n  newToast.innerHTML = `<div class=\"toast-header\">\r\n      <strong class=\"me-auto\">${title}</strong>\r\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\r\n    </div>\r\n    <div class=\"toast-body\">\r\n      ${text}\r\n    </div>`\r\n  toast.appendChild(newToast)\r\n  const toastElList = document.querySelectorAll(\".toast\")\r\n  const toastList = [...toastElList].map((toastEl) => {\r\n    const newToast = new bootstrap.Toast(toastEl, {})\r\n    toastEl.addEventListener(\"hidden.bs.toast\", () => {\r\n      if (toastEl.parentNode) {\r\n        toastEl.parentNode.removeChild(toastEl)\r\n      }\r\n    })\r\n    newToast.show()\r\n  })\r\n}\r\n\r\nexport function extractTextContentZero(nodelist, defaultValue) {\r\n  if (nodelist.length > 0) {\r\n    return nodelist[0].textContent.trim()\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nlet modalDialog = undefined\r\nexport function createModalDialog(dlg, showCancelButton = true) {\r\n  if (modalDialog) {\r\n    modalDialog.dispose()\r\n  }\r\n  const modalContainer = document.getElementById(\"rg2-modal-container\")\r\n  modalContainer.innerHTML = \"\"\r\n  const cancelButton = showCancelButton\r\n    ? `<button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">${t(\"Cancel\")}</button>`\r\n    : \"\"\r\n  const modalContent = `<div class=\"modal fade\" id=\"rg2-modal-dialog\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\r\n    tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">${dlg.title}</h1>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          ${dlg.body}\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button id=\"rg2-do-modal-action\" type=\"button\" class=\"btn btn-primary\">${t(dlg.doText)}</button>\r\n          ${cancelButton}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div > `\r\n  modalContainer.innerHTML = modalContent\r\n  // create null cancel function if we din't get anything\r\n  if (typeof dlg.onCancel !== \"function\") {\r\n    dlg.onCancel = () => {}\r\n  }\r\n  let doIt = false\r\n  const dialog = document.getElementById(\"rg2-modal-dialog\")\r\n  document.getElementById(\"rg2-do-modal-action\").addEventListener(\"click\", () => {\r\n    doIt = true\r\n    modalDialog.hide()\r\n  })\r\n  const options = { keyboard: true }\r\n  modalDialog = new bootstrap.Modal(dialog, options)\r\n  dialog.addEventListener(\"hidden.bs.modal\", () => {\r\n    if (doIt) {\r\n      dlg.onDo()\r\n    } else {\r\n      dlg.onCancel()\r\n    }\r\n  })\r\n  modalDialog.show()\r\n}\r\n\r\nexport function validateValue(selector, isValid) {\r\n  const elem = document.getElementById(selector)\r\n  const valid = isValid(elem.value)\r\n  if (valid) {\r\n    elem.classList.add(\"is-valid\")\r\n    elem.classList.remove(\"is-invalid\")\r\n  } else {\r\n    elem.classList.add(\"is-invalid\")\r\n    elem.classList.remove(\"is-valid\")\r\n  }\r\n  return valid\r\n}\r\n\r\nNumber.prototype.toRad = function () {\r\n  return (this * Math.PI) / 180\r\n}\r\n\r\n// used to generate track colours\r\nconst colours = [\r\n  \"#ff0000\",\r\n  \"#00ff00\",\r\n  \"#0000ff\",\r\n  \"#800000\",\r\n  \"#008000\",\r\n  \"#000080\",\r\n  \"#ffff00\",\r\n  \"#ff00ff\",\r\n  \"#00ffff\",\r\n  \"#808000\",\r\n  \"#800080\",\r\n  \"#008080\"\r\n]\r\nlet colourIndex = 0\r\n\r\nexport function getNextTrackColour() {\r\n  colourIndex = (colourIndex + 1) % colours.length\r\n  return colours[colourIndex]\r\n}\r\n","import { showWarningDialog } from \"./utils\"\r\nimport { getMapSize } from \"./canvas\"\r\n\r\nexport const config = {\r\n  // version gets set automatically by grunt file during build process\r\n  RG2VERSION: '2.0.5',\r\n  DEFAULT_SCALE_FACTOR: 1.1,\r\n  TAB_EVENTS: \"event-tab\",\r\n  TAB_COURSES: \"course-tab\",\r\n  TAB_RESULTS: \"result-tab\",\r\n  TAB_DRAW: \"draw-tab\",\r\n  TAB_LOGIN: \"manage-login-tab\",\r\n  TAB_CREATE: \"manage-create-tab\",\r\n  TAB_EDIT: \"manage-edit-tab\",\r\n  TAB_MAP: \"manage-map-tab\",\r\n  TAB_DELETE_MAP: \"manage-delete-map-tab\",\r\n  INVALID_MAP_ID: 9999,\r\n  // translated when output so leave as English here\r\n  DEFAULT_NEW_COMMENT: \"Type your comment\",\r\n  // added to resultid when saving a GPS track\r\n  GPS_RESULT_OFFSET: 50000,\r\n  MASS_START_REPLAY: 1,\r\n  REAL_TIME_REPLAY: 2,\r\n  // dropdown selection value\r\n  MASS_START_BY_CONTROL: 99999,\r\n  VERY_HIGH_TIME_IN_SECS: 99999,\r\n  // screen sizes for different layouts\r\n  BIG_SCREEN_BREAK_POINT: 800,\r\n  SMALL_SCREEN_BREAK_POINT: 500,\r\n  PURPLE: \"#b300ff\",\r\n  RED: \"#ff0000\",\r\n  GREEN: \"#00ff00\",\r\n  DARK_GREEN: \"rgb(34, 139, 34)\",\r\n  DARK_GREEN_30: \"rgba(34, 139, 34, 0.3)\",\r\n  GREY: \"#e0e0e0\",\r\n  RED_30: \"rgba(255,0,0,0.3)\",\r\n  GREEN_30: \"rgba(0,255,0,0.3)\",\r\n  WHITE: \"#ffffff\",\r\n  BLACK: \"#000000\",\r\n  RUNNER_DOT_RADIUS: 6,\r\n  HANDLE_DOT_RADIUS: 7,\r\n  HANDLE_COLOUR: \"#ff0000\",\r\n  // parameters for call to draw courses\r\n  DIM: 0.75,\r\n  FULL_INTENSITY: 1.0,\r\n  TIME_NOT_FOUND: 9999,\r\n  // values for eventt.which\r\n  RIGHT_CLICK: 3,\r\n  DO_NOT_SAVE_COURSE: 9999,\r\n  // values of event format\r\n  FORMAT_NORMAL: 1,\r\n  FORMAT_NORMAL_NO_RESULTS: 2,\r\n  FORMAT_SCORE_EVENT: 3,\r\n  FORMAT_SCORE_EVENT_NO_RESULTS: 4,\r\n  DISPLAY_ALL_COURSES: 99999,\r\n  EXCLUDED_NONE: 0,\r\n  EXCLUDED_ZERO_SPLITS: 1,\r\n  EXCLUDED_REAL_SPLITS: 2,\r\n  //number of drawn routes that can be saved for possible later deletion\r\n  MAX_DRAWN_ROUTES: 10,\r\n  // array of available languages: not great to do it like this but it helps for routegadget.co.uk set-up\r\n  languages: [\r\n    { language: \"Čeština\", code: \"cz\" },\r\n    { language: \"Deutsch\", code: \"de\" },\r\n    { language: \"Suomi\", code: \"fi\" },\r\n    { language: \"Français\", code: \"fr\" },\r\n    { language: \"Italiano\", code: \"it\" },\r\n    { language: \"日本語\", code: \"ja\" },\r\n    { language: \"Norsk\", code: \"no\" },\r\n    { language: \"Português - Brasil\", code: \"pt\" },\r\n    { language: \"Русский\", code: \"ru\" }\r\n  ],\r\n  // Size of map upload in MB that triggers the warning dialog\r\n  FILE_SIZE_WARNING: 2,\r\n  // Size of map upload in pixels that triggers the warning dialog\r\n  // emprically this is easily enough for an A3 sensible map\r\n  PIXEL_SIZE_WARNING: 4000,\r\n  CLASS_NOW_ON: 1,\r\n  CLASS_NOW_OFF: 0,\r\n  managing: () => {\r\n    // presence of keksi in config means we are managing\r\n    // until we find a better way\r\n    return rg2Config.keksi !== undefined\r\n  }\r\n}\r\n\r\nexport const options = {\r\n  // initialised to default values: overwritten from storage later\r\n  perCentMapIntensity: 100,\r\n  perCentRouteIntensity: 100,\r\n  replayFontSize: 12,\r\n  courseWidth: 3,\r\n  routeWidth: 4,\r\n  circleSize: 20,\r\n  snap: true,\r\n  showThreeSeconds: false,\r\n  showGPSSpeed: false,\r\n  // align map with next control at top when drawing route\r\n  alignMap: false,\r\n  // speeds in min/km\r\n  maxSpeed: 5,\r\n  minSpeed: 15,\r\n  // array of up to MAX_DRAWN_ROUTES entries with details to allow deletion\r\n  drawnRoutes: []\r\n}\r\n\r\nexport function getOverprintDetails() {\r\n  let opt = {}\r\n  // attempt to scale overprint depending on map image size\r\n  // this avoids very small/large circles, or at least makes things a bit more sensible\r\n  const size = getMapSize()\r\n  // Empirically derived  so open to suggestions. This is based on a nominal 20px circle\r\n  // as default. The square root stops things getting too big too quickly.\r\n  // 1500px is a typical map image maximum size.\r\n  let scaleFact = Math.pow(Math.min(size.height, size.width) / 1500, 0.5)\r\n  // don't get too carried away, although these would be strange map files\r\n  scaleFact = Math.min(scaleFact, 5)\r\n  scaleFact = Math.max(scaleFact, 0.5)\r\n  const circleSize = Math.round(options.circleSize * scaleFact)\r\n  // ratios based on IOF ISOM overprint specification\r\n  opt.controlRadius = circleSize\r\n  opt.finishInnerRadius = circleSize * (5 / 6)\r\n  opt.finishOuterRadius = circleSize * (7 / 6)\r\n  opt.startTriangleLength = circleSize * (7 / 6)\r\n  opt.overprintWidth = options.courseWidth\r\n  opt.font = circleSize + \"pt Arial\"\r\n  return opt\r\n}\r\n\r\nexport function loadConfigOptions() {\r\n  try {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (window.hasOwnProperty(\"localStorage\") && window.localStorage !== null) {\r\n      if (localStorage.getItem(\"rg2-options\") !== null) {\r\n        const storedOptions = JSON.parse(localStorage.getItem(\"rg2-options\"))\r\n        // overwrite the options array with saved options from local storage\r\n        // need to do this to allow for new options that people don't yet have\r\n        for (let prop in storedOptions) {\r\n          // eslint-disable-next-line no-prototype-builtins\r\n          if (storedOptions.hasOwnProperty(prop)) {\r\n            options[prop] = storedOptions[prop]\r\n          }\r\n        }\r\n        // best to keep these at default?\r\n        options.circleSize = 20\r\n        if (options.perCentMapIntensity === 0) {\r\n          showWarningDialog(\r\n            \"Warning\",\r\n            \"Your saved settings have 0% map intensity so the map is invisible. You can adjust this on the configuration menu\"\r\n          )\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // storage not supported so just continue\r\n  }\r\n}\r\n\r\nexport function removeDrawnRouteDetails(route) {\r\n  let routes = []\r\n  for (let i = 0; i < options.drawnRoutes.length; i += 1) {\r\n    if (options.drawnRoutes[i].id !== route.id || options.drawnRoutes[i].eventid !== route.eventid) {\r\n      routes.push(options.drawnRoutes[i])\r\n    }\r\n  }\r\n  options.drawnRoutes = routes\r\n  saveConfigOptions()\r\n}\r\n\r\nexport function saveConfigOptions() {\r\n  try {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (window.hasOwnProperty(\"localStorage\") && window.localStorage !== null) {\r\n      localStorage.setItem(\"rg2-options\", JSON.stringify(options))\r\n    }\r\n  } catch (e) {\r\n    // storage not supported so just return\r\n    return\r\n  }\r\n}\r\n\r\nexport function saveDrawnRouteDetails(route) {\r\n  // this allows for deletion later\r\n  let routes = options.drawnRoutes\r\n  if (routes.length >= config.MAX_DRAWN_ROUTES) {\r\n    // array is full so delete oldest (=first) entry\r\n    routes.shift()\r\n  }\r\n  routes.push(route)\r\n  options.drawnRoutes = routes\r\n  saveConfigOptions()\r\n}\r\n\r\nexport function setConfigOption(option, value) {\r\n  options[option] = value\r\n  saveConfigOptions()\r\n}\r\n","import { ctx } from \"./canvas\"\r\nimport { config, getOverprintDetails } from \"./config\"\r\nimport { getCourses } from \"./courses\"\r\n\r\nexport class Controls {\r\n  constructor() {\r\n    this.controls = []\r\n    this.displayControls = false\r\n  }\r\n\r\n  addControl(code, x, y) {\r\n    let newCode = true\r\n    for (let i = 0; i < this.controls.length; i += 1) {\r\n      if (this.controls[i].code === code) {\r\n        newCode = false\r\n        break\r\n      }\r\n    }\r\n    if (newCode) {\r\n      this.controls.push({ code: code, x: x, y: y })\r\n    }\r\n  }\r\n\r\n  deleteAllControls() {\r\n    this.controls.length = 0\r\n  }\r\n\r\n  displayAllControls() {\r\n    this.displayControls = true\r\n  }\r\n\r\n  drawControls(drawDot) {\r\n    if (this.displayControls) {\r\n      const opt = getOverprintDetails()\r\n      for (let i = 0; i < this.controls.length; i += 1) {\r\n        // Assume things starting with 'F' or 'M' are Finish or Mal\r\n        if (this.controls[i].code.indexOf(\"F\") === 0 || this.controls[i].code.indexOf(\"M\") === 0) {\r\n          this.drawFinish(this.controls[i].x, this.controls[i].y, this.controls[i].code, opt)\r\n        } else {\r\n          // Assume things starting with 'S' are a Start\r\n          if (this.controls[i].code.indexOf(\"S\") === 0) {\r\n            this.drawStart(this.controls[i].x, this.controls[i].y, this.controls[i].code, 1.5 * Math.PI, opt)\r\n          } else {\r\n            // Else it's a normal control\r\n            this.drawSingleControl(this.controls[i].x, this.controls[i].y, this.controls[i].code, Math.PI * 0.25, opt)\r\n            if (drawDot) {\r\n              ctx.fillRect(this.controls[i].x - 1, this.controls[i].y - 1, 3, 3)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawFinish(x, y, code, opt) {\r\n    //Draw the white halo around the finish control\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.lineWidth = opt.overprintWidth + 2\r\n    ctx.beginPath()\r\n    ctx.arc(x, y, opt.finishInnerRadius, 0, 2 * Math.PI, false)\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.arc(x, y, opt.finishOuterRadius, 0, 2 * Math.PI, false)\r\n    ctx.stroke()\r\n    //Draw the white halo around the finish code\r\n    ctx.beginPath()\r\n    ctx.font = opt.font\r\n    ctx.textAlign = \"left\"\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.miterLimit = 2\r\n    ctx.lineJoin = \"circle\"\r\n    ctx.lineWidth = 1.5\r\n    ctx.strokeText(code, x + opt.controlRadius * 1.5, y + opt.controlRadius)\r\n    ctx.stroke()\r\n    //Draw the purple finish control\r\n    ctx.beginPath()\r\n    ctx.fillStyle = config.PURPLE\r\n    ctx.strokeStyle = config.PURPLE\r\n    ctx.lineWidth = opt.overprintWidth\r\n    ctx.arc(x, y, opt.finishInnerRadius, 0, 2 * Math.PI, false)\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.arc(x, y, opt.finishOuterRadius, 0, 2 * Math.PI, false)\r\n    ctx.fillText(code, x + opt.controlRadius * 1.5, y + opt.controlRadius)\r\n    ctx.stroke()\r\n  }\r\n\r\n  drawSingleControl(x, y, code, angle, opt) {\r\n    //Draw the white halo around the controls\r\n    ctx.beginPath()\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.lineWidth = opt.overprintWidth + 2\r\n    ctx.arc(x, y, opt.controlRadius, 0, 2 * Math.PI, false)\r\n    ctx.stroke()\r\n    //Draw the white halo around the control code\r\n    ctx.beginPath()\r\n    ctx.textAlign = \"center\"\r\n    ctx.font = opt.font\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.miterLimit = 2\r\n    ctx.lineJoin = \"circle\"\r\n    ctx.lineWidth = 1.5\r\n    ctx.textBaseline = \"middle\"\r\n    const metrics = ctx.measureText(code)\r\n    // offset to left if left of centre, to right if right of centre\r\n    let xoffset\r\n    if (angle < Math.PI) {\r\n      xoffset = metrics.width / 2\r\n    } else {\r\n      xoffset = (-1 * metrics.width) / 2\r\n    }\r\n    // control radius is also the control code text height\r\n    // offset up if above half way, down if below half way\r\n    let yoffset\r\n    if (angle >= Math.PI / 2 && angle <= Math.PI * 1.5) {\r\n      yoffset = (-1 * opt.controlRadius) / 2\r\n    } else {\r\n      yoffset = opt.controlRadius / 2\r\n    }\r\n    // empirically looks OK with this scale\r\n    const scale = 1.3\r\n    ctx.strokeText(\r\n      code,\r\n      x + opt.controlRadius * scale * Math.sin(angle) + xoffset,\r\n      y + opt.controlRadius * scale * Math.cos(angle) + yoffset\r\n    )\r\n    //Draw the purple control\r\n    ctx.beginPath()\r\n    ctx.font = opt.font\r\n    ctx.fillStyle = config.PURPLE\r\n    ctx.strokeStyle = config.PURPLE\r\n    ctx.lineWidth = opt.overprintWidth\r\n    ctx.arc(x, y, opt.controlRadius, 0, 2 * Math.PI, false)\r\n    ctx.fillText(\r\n      code,\r\n      x + opt.controlRadius * scale * Math.sin(angle) + xoffset,\r\n      y + opt.controlRadius * scale * Math.cos(angle) + yoffset\r\n    )\r\n    ctx.stroke()\r\n  }\r\n\r\n  drawStart(startx, starty, code, angle, opt) {\r\n    //Draw the white halo around the start triangle\r\n    let x = []\r\n    let y = []\r\n    const DEGREES_120 = (2 * Math.PI) / 3\r\n    angle = angle + Math.PI / 2\r\n    ctx.lineCap = \"round\"\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.lineWidth = opt.overprintWidth + 2\r\n    ctx.beginPath()\r\n    x[0] = startx + opt.startTriangleLength * Math.sin(angle)\r\n    y[0] = starty - opt.startTriangleLength * Math.cos(angle)\r\n    ctx.moveTo(x[0], y[0])\r\n    x[1] = startx + opt.startTriangleLength * Math.sin(angle + DEGREES_120)\r\n    y[1] = starty - opt.startTriangleLength * Math.cos(angle + DEGREES_120)\r\n    ctx.lineTo(x[1], y[1])\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[1], y[1])\r\n    x[2] = startx + opt.startTriangleLength * Math.sin(angle - DEGREES_120)\r\n    y[2] = starty - opt.startTriangleLength * Math.cos(angle - DEGREES_120)\r\n    ctx.lineTo(x[2], y[2])\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[2], y[2])\r\n    ctx.lineTo(x[0], y[0])\r\n    ctx.stroke()\r\n    //Draw the white halo around the start code\r\n    ctx.beginPath()\r\n    ctx.font = opt.font\r\n    ctx.textAlign = \"left\"\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.miterLimit = 2\r\n    ctx.lineJoin = \"circle\"\r\n    ctx.lineWidth = 1.5\r\n    ctx.strokeText(code, x[0] + opt.controlRadius * 1.25, y[0] + opt.controlRadius * 1.25)\r\n    ctx.stroke()\r\n    //Draw the purple start control\r\n    ctx.strokeStyle = config.PURPLE\r\n    ctx.lineWidth = opt.overprintWidth\r\n    ctx.font = opt.font\r\n    ctx.fillStyle = config.PURPLE\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[0], y[0])\r\n    ctx.lineTo(x[1], y[1])\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[1], y[1])\r\n    ctx.lineTo(x[2], y[2])\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[2], y[2])\r\n    ctx.lineTo(x[0], y[0])\r\n    ctx.fillText(code, x[0] + opt.controlRadius * 1.25, y[0] + opt.controlRadius * 1.25)\r\n    ctx.stroke()\r\n  }\r\n\r\n  generateControlList() {\r\n    this.controls.length = 0\r\n    const courses = getCourses()\r\n    for (let i = 0; i < courses.length; i += 1) {\r\n      if (courses[i] !== undefined) {\r\n        const codes = courses[i].codes\r\n        const x = courses[i].x\r\n        const y = courses[i].y\r\n        // for all controls on course\r\n        if (codes !== undefined) {\r\n          for (let j = 0; j < codes.length; j += 1) {\r\n            this.addControl(codes[j], x[j], y[j])\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getControlCount() {\r\n    return this.controls.length\r\n  }\r\n\r\n  toggleControlDisplay() {\r\n    this.displayControls = !this.displayControls\r\n  }\r\n}\r\n","import { getDistanceBetweenPoints } from \"./utils\"\r\nimport { config } from \"./config\"\r\nimport { ctx } from \"./canvas\"\r\nclass Handle {\r\n  constructor(x, y, time, index) {\r\n    // current position of handles\r\n    this.x = x\r\n    this.y = y\r\n    // positions before start of adjustment\r\n    this.basex = x\r\n    this.basey = y\r\n    // saved positions to allow undo\r\n    this.undox = x\r\n    this.undoy = y\r\n    this.locked = false\r\n    // not really a time: instead an index into the GPX data\r\n    // this is \"time\" for 1s intervals, but not if in a different recording mode\r\n    this.time = time\r\n    this.index = index\r\n  }\r\n}\r\nexport class Handles {\r\n  constructor() {\r\n    // array of handles used to adjust GPS tracks\r\n    // maintained in time order which means they are also in order along the GPS track\r\n    this.handles = []\r\n  }\r\n\r\n  addHandle(x, y, time) {\r\n    this.handles.push(new Handle(x, y, time, this.handles.length))\r\n    this.handles.sort(function (a, b) {\r\n      return a.time - b.time\r\n    })\r\n    this.renumberHandles()\r\n  }\r\n\r\n  deleteHandle(index) {\r\n    if (index === 0 || index === this.handles.length - 1) {\r\n      // can't delete start or finish\r\n      return\r\n    }\r\n    this.handles.splice(index, 1)\r\n    this.renumberHandles()\r\n  }\r\n\r\n  renumberHandles() {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      this.handles[i].index = i\r\n    }\r\n  }\r\n\r\n  lockHandle(index) {\r\n    this.handles[index].locked = true\r\n  }\r\n\r\n  lockHandleByTime(time) {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      if (this.handles[i].time === time) {\r\n        this.handles[i].locked = true\r\n      }\r\n    }\r\n  }\r\n\r\n  unlockHandle(index) {\r\n    this.handles[index].locked = false\r\n  }\r\n\r\n  handlesLocked() {\r\n    let count = 0\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      if (this.handles[i].locked) {\r\n        count += 1\r\n      }\r\n    }\r\n    return count\r\n  }\r\n\r\n  deleteAllHandles() {\r\n    this.handles.length = 0\r\n  }\r\n\r\n  rebaselineXY() {\r\n    // save new locations at end of drag\r\n    this.copyHandleFields(\"\", \"base\")\r\n  }\r\n\r\n  saveForUndo() {\r\n    this.copyHandleFields(\"base\", \"undo\")\r\n  }\r\n\r\n  undo() {\r\n    // undo last move: reset to saved values\r\n    this.copyHandleFields(\"undo\", \"base\")\r\n    this.copyHandleFields(\"undo\", \"\")\r\n  }\r\n\r\n  copyHandleFields(from, to) {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      this.handles[i][to + \"x\"] = this.handles[i][from + \"x\"]\r\n      this.handles[i][to + \"y\"] = this.handles[i][from + \"y\"]\r\n    }\r\n  }\r\n\r\n  getStartHandle() {\r\n    // always the first entry\r\n    return this.handles[0]\r\n  }\r\n\r\n  getFinishHandle() {\r\n    // always the last entry\r\n    return this.handles[this.handles.length - 1]\r\n  }\r\n\r\n  getHandleClicked(pt) {\r\n    // find if the click was on an existing handle: return handle object or undefined\r\n    // basex and basey are handle locations at the start of the drag which is what we are interested in\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      const distance = getDistanceBetweenPoints(pt.x, pt.y, this.handles[i].basex, this.handles[i].basey)\r\n      if (distance <= config.HANDLE_DOT_RADIUS) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  getEarliestLockedHandle() {\r\n    // called to find earliest locked handle: we already know at least one is locked\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      if (this.handles[i].locked) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  getLatestLockedHandle() {\r\n    // called to find latest locked handle: we already know at least one is locked\r\n    for (let i = this.handles.length - 1; i > 0; i -= 1) {\r\n      if (this.handles[i].locked) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  getPreviousLockedHandle(handle) {\r\n    // called to find previous locked handle: we already know we are between locked handles\r\n    for (let i = handle.index - 1; i >= 0; i -= 1) {\r\n      if (this.handles[i].locked) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  getNextLockedHandle(handle) {\r\n    // called to find next locked handle: we already know we are between locked handles\r\n    for (let i = handle.index + 1; i < this.handles.length; i += 1) {\r\n      if (this.handles[i].locked) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  getSingleLockedHandle() {\r\n    // called when we know there is only one locked handle, so we can reuse another function\r\n    return this.getEarliestLockedHandle()\r\n  }\r\n\r\n  dragHandles(dx, dy) {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      this.handles[i].x = this.handles[i].basex + dx\r\n      this.handles[i].y = this.handles[i].basey + dy\r\n    }\r\n  }\r\n\r\n  drawHandles() {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      ctx.lineWidth = 1\r\n      if (this.handles[i].locked === true) {\r\n        ctx.fillStyle = config.RED_30\r\n        ctx.strokeStyle = config.RED\r\n      } else {\r\n        ctx.fillStyle = config.GREEN_30\r\n        ctx.strokeStyle = config.GREEN\r\n      }\r\n      ctx.beginPath()\r\n      ctx.arc(this.handles[i].x, this.handles[i].y, config.HANDLE_DOT_RADIUS, 0, 2 * Math.PI, false)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n    }\r\n  }\r\n\r\n  alignHandles(points) {\r\n    // move handles back to be on adjusted track\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      this.handles[i].x = points.x[this.handles[i].time]\r\n      this.handles[i].y = points.y[this.handles[i].time]\r\n    }\r\n  }\r\n}\r\n","import { getMapSize, redraw } from \"./canvas\"\r\nimport { adjustTrack, getControlXY } from \"./draw\"\r\nimport { getWorldFile, mapIsGeoreferenced } from \"./events\"\r\nimport { Handles } from \"./handles\"\r\nimport { getDistanceBetweenPoints, getLatLonDistance, showWarningDialog } from \"./utils\"\r\n\r\nexport class RouteData {\r\n  constructor() {\r\n    this.courseid = null\r\n    this.coursename = null\r\n    this.controlsToAdjust = 0\r\n    this.resultid = null\r\n    this.isScoreCourse = false\r\n    this.eventid = null\r\n    this.name = null\r\n    this.comments = null\r\n    this.x = []\r\n    this.y = []\r\n    this.controlx = []\r\n    this.controly = []\r\n    this.time = []\r\n    this.startsecs = 0\r\n    this.totaltime = 0\r\n    this.splits = []\r\n    this.xml = null\r\n  }\r\n}\r\n\r\nexport class GPSTrack {\r\n  constructor() {\r\n    this.lat = []\r\n    this.lon = []\r\n    this.startOffset = 0\r\n    this.baseX = []\r\n    this.baseY = []\r\n    this.handles = new Handles()\r\n    this.savedBaseX = []\r\n    this.savedBaseY = []\r\n    this.fileLoaded = false\r\n    this.fileName = \"\"\r\n    this.fileType = \"\"\r\n    this.routeData = new RouteData()\r\n    this.autofitOffset = null\r\n  }\r\n\r\n  adjustOffset(offset) {\r\n    this.autofitOffset = offset\r\n    this.processGPSFile()\r\n    this.autofitTrack()\r\n  }\r\n\r\n  addStartAndFinishHandles() {\r\n    // add handles at start and finish of route\r\n    this.handles.addHandle(this.baseX[0], this.baseY[0], 0)\r\n    this.handles.addHandle(this.baseX[this.baseX.length - 1], this.baseY[this.baseY.length - 1], this.baseY.length - 1)\r\n  }\r\n\r\n  applyWorldFile() {\r\n    // translate lat/lon to x,y based on world file info: see http://en.wikipedia.org/wiki/World_file\r\n    const worldFile = getWorldFile()\r\n    for (let i = 0; i < this.lat.length; i += 1) {\r\n      this.routeData.x[i] = Math.round(\r\n        (worldFile.E * this.lon[i] - worldFile.B * this.lat[i] + worldFile.xCorrection) / worldFile.AEDB\r\n      )\r\n      this.routeData.y[i] = Math.round(\r\n        (-1 * worldFile.D * this.lon[i] + worldFile.A * this.lat[i] + worldFile.yCorrection) / worldFile.AEDB\r\n      )\r\n    }\r\n  }\r\n\r\n  autofitTrack() {\r\n    // fits a GPS track to the course based on split times at control locations\r\n    // unlock map to allow adjustment\r\n    document.getElementById(\"chk-move-all\").checked = false\r\n    this.handles.deleteAllHandles()\r\n    this.addStartAndFinishHandles()\r\n    if (this.autofitOffset === null) {\r\n      this.autofitOffset = this.getOffset()\r\n      //ui.setAutofitSpinner(this.autofitOffset)\r\n    }\r\n    // adjust for each control in turn\r\n    for (let i = 1; i < this.routeData.controlsToAdjust; i += 1) {\r\n      // don't try to adjust missing controls\r\n      if (this.routeData.splits[i] !== this.routeData.splits[i - 1]) {\r\n        const split = this.routeData.splits[i] + this.autofitOffset\r\n        // move track to control location\r\n        if (split < this.baseX.length && split >= 0) {\r\n          // add handle at control on track\r\n          this.handles.addHandle(this.routeData.x[split], this.routeData.y[split], split)\r\n          // drag handle to correct place on map\r\n          adjustTrack(\r\n            { x: this.routeData.x[split], y: this.routeData.y[split] },\r\n            { x: this.routeData.controlx[i], y: this.routeData.controly[i] }\r\n          )\r\n          // lock handle at control\r\n          this.handles.lockHandleByTime(split)\r\n          // rebaseline everything\r\n          this.baseX = this.routeData.x.slice(0)\r\n          this.baseY = this.routeData.y.slice(0)\r\n          this.handles.rebaselineXY()\r\n        }\r\n      }\r\n    }\r\n    document.getElementById(\"btn-autofit-gps\").setAttribute(\"disabled\", \"\")\r\n    document.getElementById(\"btn-undo-gps-adjust\").setAttribute(\"disabled\", \"\")\r\n    redraw()\r\n  }\r\n\r\n  expandToOneSecondInterval() {\r\n    // convert to one second intervals to make what follows a bit easier since we can index x and y directly\r\n    // time from GPX has already been converted to integer seconds so we don't need to worry about sub-seconds in the expansion\r\n    // gets reset to 3 second intervals on server when saved\r\n    let x = []\r\n    let y = []\r\n    let time = []\r\n    const trk = this.routeData\r\n    let oldtime = trk.time[0]\r\n    let oldx = trk.x[0]\r\n    let oldy = trk.y[0]\r\n    x[0] = oldx\r\n    y[0] = oldy\r\n    time[0] = trk.time[0]\r\n    let nexttime = time[0] + 1\r\n    for (let i = 1; i < trk.x.length; i += 1) {\r\n      const difftime = trk.time[i] - oldtime\r\n      // shouldn't have 0 intervals, but discard them if we do\r\n      if (difftime > 0) {\r\n        const xpersec = (trk.x[i] - oldx) / difftime\r\n        const ypersec = (trk.y[i] - oldy) / difftime\r\n        let secs = 1\r\n        while (secs <= difftime) {\r\n          x.push(oldx + xpersec * secs)\r\n          y.push(oldy + ypersec * secs)\r\n          //\r\n          time.push(nexttime)\r\n          nexttime += 1\r\n          secs += 1\r\n        }\r\n        oldx = trk.x[i]\r\n        oldy = trk.y[i]\r\n        oldtime = nexttime - 1\r\n      }\r\n    }\r\n    this.routeData.x = x.slice(0)\r\n    this.routeData.y = y.slice(0)\r\n    this.routeData.time = time.slice(0)\r\n  }\r\n\r\n  fitTrackInsideCourse() {\r\n    // fit track to within limits of course\r\n    // find bounding box for track\r\n    const latLon = this.getLatLonInfo()\r\n    const controlXY = this.getControlInfo()\r\n\r\n    // scale GPS track to within bounding box of controls: a reasonable start\r\n    let scaleX = (controlXY.maxX - controlXY.minX) / (latLon.maxLon - latLon.minLon)\r\n    let scaleY = (controlXY.maxY - controlXY.minY) / (latLon.maxLat - latLon.minLat)\r\n    // don't want to skew track so scale needs to be equal in each direction\r\n    // so we need to account for differences between a degree of latitude and longitude\r\n    if (scaleX > scaleY) {\r\n      // pix/lat = pix/lon * m/lat * lon/m\r\n      scaleY = (scaleX * latLon.latCorrection) / latLon.lonCorrection\r\n    } else {\r\n      // pix/lon = pix/lat * m/lon * lat/m\r\n      scaleX = (scaleY * latLon.lonCorrection) / latLon.latCorrection\r\n    }\r\n    // extra offset to put start of track at start location\r\n    this.routeData.x[0] = (this.lon[0] - latLon.minLon) * scaleX + controlXY.minX\r\n    this.routeData.y[0] = -1 * (this.lat[0] - latLon.maxLat) * scaleY + controlXY.minY\r\n\r\n    // translate lat/lon to x,y\r\n    const deltaX = controlXY.minX - (this.routeData.x[0] - controlXY.x[0])\r\n    const deltaY = controlXY.minY - (this.routeData.y[0] - controlXY.y[0])\r\n\r\n    for (let i = 0; i < this.lat.length; i += 1) {\r\n      this.routeData.x[i] = (this.lon[i] - latLon.minLon) * scaleX + deltaX\r\n      this.routeData.y[i] = -1 * (this.lat[i] - latLon.maxLat) * scaleY + deltaY\r\n    }\r\n  }\r\n\r\n  getControlInfo() {\r\n    let controlXY = getControlXY()\r\n    controlXY.minX = Math.min.apply(Math, controlXY.x)\r\n    controlXY.maxX = Math.max.apply(Math, controlXY.x)\r\n    controlXY.minY = Math.min.apply(Math, controlXY.y)\r\n    controlXY.maxY = Math.max.apply(Math, controlXY.y)\r\n\r\n    // issue #60: allow for no controls or just a few in a small area\r\n    // 100 is an arbitrary but sensible cut-off\r\n    if (controlXY.maxY - controlXY.minY < 100 || controlXY.maxX - controlXY.minX < 100) {\r\n      controlXY.minX = 0\r\n      controlXY.minY = 0\r\n      const size = getMapSize()\r\n      controlXY.maxX = size.width\r\n      controlXY.maxY = size.height\r\n    }\r\n    //console.log (minControlX, maxControlX, minControlY, maxControlY)\r\n    return controlXY\r\n  }\r\n\r\n  getLatLonInfo() {\r\n    let latLon = {}\r\n    latLon.maxLat = Math.max.apply(Math, this.lat)\r\n    latLon.maxLon = Math.max.apply(Math, this.lon)\r\n    latLon.minLat = Math.min.apply(Math, this.lat)\r\n    latLon.minLon = Math.min.apply(Math, this.lon)\r\n    latLon.lonCorrection =\r\n      getLatLonDistance(latLon.minLat, latLon.maxLon, latLon.minLat, latLon.minLon) / (latLon.maxLon - latLon.minLon)\r\n    latLon.latCorrection =\r\n      getLatLonDistance(latLon.minLat, latLon.minLon, latLon.maxLat, latLon.minLon) / (latLon.maxLat - latLon.minLat)\r\n    return latLon\r\n  }\r\n\r\n  getOffset() {\r\n    // calculates an offset to split times based on lowest average speed summed across all controls\r\n    const speedAverage = this.getSpeedAverage()\r\n    let speedAtControl = []\r\n    // range of seconds either side to check for \"minimum speed\" at control\r\n    const range = 10\r\n    for (let i = 0; i <= 2 * range; i += 1) {\r\n      speedAtControl[i] = 0\r\n    }\r\n    // read through each control\r\n    let speedExtract = 0\r\n    for (let i = 1; i < this.routeData.controlsToAdjust; i += 1) {\r\n      const split = this.routeData.splits[i]\r\n      // ignore missing splits\r\n      if (split !== this.routeData.splits[i - 1]) {\r\n        // avoid edge cases near start and finish\r\n        if (split >= range && split + range < speedAverage.length) {\r\n          speedExtract = speedAverage.slice(split - range, split + range + 1)\r\n        }\r\n        for (let j = 0; j <= 2 * range; j += 1) {\r\n          speedAtControl[j] += speedExtract[j]\r\n        }\r\n      }\r\n    }\r\n    let bestGuess = 0\r\n    for (let i = 1; i < speedAtControl.length; i += 1) {\r\n      if (speedAtControl[i] < speedAtControl[bestGuess]) {\r\n        bestGuess = i\r\n      }\r\n    }\r\n    // convert index in bestGuess into offset in x, y, time\r\n    const offset = bestGuess - range\r\n    return offset\r\n  }\r\n\r\n  getSecsFromTrackpoint(timestring) {\r\n    // input is 2013-12-03T12:34:56Z (or 56.000Z)\r\n    // needs to offset from midnight to allow replays, and alos needs to handle date (and year!) rollover\r\n    const secs = parseInt(Date.parse(timestring) / 1000, 10)\r\n    if (isNaN(secs)) {\r\n      return 0\r\n    }\r\n    return secs - this.startOffset\r\n  }\r\n\r\n  getSpeedAverage() {\r\n    // returns an array showing average speed for each second of the run\r\n    let speed = []\r\n    let speedAverage = []\r\n    speed[0] = 0\r\n    for (let i = 1; i < this.routeData.x.length; i += 1) {\r\n      // stored at second intervals so don't need to divide by time'\r\n      speed[i] = getDistanceBetweenPoints(\r\n        this.routeData.x[i],\r\n        this.routeData.y[i],\r\n        this.routeData.x[i - 1],\r\n        this.routeData.y[i - 1]\r\n      )\r\n    }\r\n    // average over 3 seconds to smooth things out\r\n    for (let i = 1; i < this.routeData.x.length - 1; i += 1) {\r\n      speedAverage[i] = (speed[i - 1] + speed[i] + speed[i + 1]) / 3\r\n    }\r\n    // not really worried about these but set to a sensible value\r\n    speedAverage[0] = speed[0]\r\n    speedAverage[this.routeData.x.length - 1] = speed[this.routeData.x.length - 1]\r\n    return speedAverage\r\n  }\r\n\r\n  getStartOffset(timestring) {\r\n    // needs to be set to midnight for supplied timestring\r\n    // input is 2013-12-03T12:34:56Z (or 56.000Z)\r\n    const secs = parseInt(Date.parse(timestring.substr(0, 11) + \"00:00:00Z\") / 1000, 10)\r\n    if (isNaN(secs)) {\r\n      return 0\r\n    }\r\n    return secs\r\n  }\r\n\r\n  initialiseGPS() {\r\n    this.lat.length = 0\r\n    this.lon.length = 0\r\n    this.startOffset = 0\r\n    this.baseX.length = 0\r\n    this.baseY.length = 0\r\n    this.handles.deleteAllHandles()\r\n    this.savedBaseX.length = 0\r\n    this.savedBaseY.length = 0\r\n    this.fileLoaded = false\r\n    this.routeData.x.length = 0\r\n    this.routeData.y.length = 0\r\n    this.routeData.time.length = 0\r\n  }\r\n\r\n  processGPSFile() {\r\n    this.initialiseGPS()\r\n    if (this.fileType === \"gpx\") {\r\n      this.processGPX()\r\n    } else {\r\n      this.processTCX()\r\n    }\r\n    this.processGPSTrack()\r\n  }\r\n\r\n  processGPSTrack() {\r\n    if (mapIsGeoreferenced()) {\r\n      this.applyWorldFile()\r\n      if (this.trackMatchesMapCoordinates()) {\r\n        // everything OK so lock background to avoid accidental adjustment\r\n        document.getElementById(\"chk-move-all\").checked = true\r\n      } else {\r\n        // warn and fit to track\r\n        showWarningDialog(\r\n          \"GPS file problem\",\r\n          \"Your GPS file does not match the map co-ordinates. Please check you have selected the correct file.\"\r\n        )\r\n        this.fitTrackInsideCourse()\r\n      }\r\n    } else {\r\n      this.fitTrackInsideCourse()\r\n    }\r\n    // finished with lat and lon so they can go just in case\r\n    this.lat.length = 0\r\n    this.lon.length = 0\r\n    this.expandToOneSecondInterval()\r\n    this.baseX = this.routeData.x.slice(0)\r\n    this.baseY = this.routeData.y.slice(0)\r\n    this.addStartAndFinishHandles()\r\n    this.fileLoaded = true\r\n    // need more than a start and finish to autofit\r\n    if (this.routeData.splits.length > 2) {\r\n      document.getElementById(\"btn-autofit-gps\").removeAttribute(\"disabled\")\r\n    }\r\n    document.getElementById(\"btn-save-gps-route\").removeAttribute(\"disabled\")\r\n    redraw()\r\n  }\r\n\r\n  processGPX() {\r\n    const trksegs = this.xml.getElementsByTagName(\"trkseg\")\r\n    for (let i = 0; i < trksegs.length; i += 1) {\r\n      const trkpts = trksegs[i].getElementsByTagName(\"trkpt\")\r\n      this.startOffset = this.getStartOffset(trkpts[0].getElementsByTagName(\"time\")[0].textContent)\r\n      // #319 allow for GPS files with (lat 0, lon 0)\r\n      for (let j = 0; j < trkpts.length; j += 1) {\r\n        const lat = trkpts[j].getAttribute(\"lat\")\r\n        const lon = trkpts[j].getAttribute(\"lon\")\r\n        // getAttribute returns strings\r\n        if (lat !== \"0\" && lon !== \"0\") {\r\n          this.lat.push(lat)\r\n          this.lon.push(lon)\r\n          this.routeData.time.push(this.getSecsFromTrackpoint(trkpts[j].getElementsByTagName(\"time\")[0].textContent))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  processTCX() {\r\n    const trksegs = this.xml.getElementsByTagName(\"Track\")\r\n    for (let i = 0; i < trksegs.length; i += 1) {\r\n      const trkpts = trksegs[i].getElementsByTagName(\"Trackpoint\")\r\n      this.startOffset = this.getStartOffset(trkpts[0].getElementsByTagName(\"Time\")[0].textContent)\r\n      for (let j = 0; j < trkpts.length; j += 1) {\r\n        // allow for <trackpoint> with no position: see #199\r\n        if (trkpts[j].getElementsByTagName(\"Position\").length > 0) {\r\n          const position = trkpts[j].getElementsByTagName(\"Position\")\r\n          // #319 allow for GPS files with (lat 0, lon 0)\r\n          const lat = position[0].getElementsByTagName(\"LatitudeDegrees\")[0].textContent\r\n          const lon = position[0].getElementsByTagName(\"LongitudeDegrees\")[0].textContent\r\n          // textContent returns strings\r\n          if (lat !== \"0\" && lon !== \"0\") {\r\n            this.lat.push(lat)\r\n            this.lon.push(lon)\r\n            this.routeData.time.push(this.getSecsFromTrackpoint(trkpts[j].getElementsByTagName(\"Time\")[0].textContent))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  readGPS(file) {\r\n    //console.log (\"File\" + e.target.files[0].name)\r\n    let reader = new FileReader()\r\n    this.fileName = file.target.files[0].name\r\n\r\n    reader.onerror = function (e) {\r\n      showWarningDialog(\"GPS file problem\", \"Unable to open GPS file. \" + e)\r\n    }\r\n    reader.onload = (text) => {\r\n      try {\r\n        this.fileType = this.fileName.slice(-3).toLowerCase()\r\n        if (this.fileType !== \"gpx\" && this.fileType !== \"tcx\") {\r\n          showWarningDialog(\r\n            \"GPS file problem\",\r\n            \"File type not recognised. Please check you have selected the correct file.\"\r\n          )\r\n          return\r\n        }\r\n        document.getElementById(\"rg2-load-gps-file\").setAttribute(\"disabled\", \"\")\r\n        this.xml = new DOMParser().parseFromString(text.target.result, \"text/xml\")\r\n        this.processGPSFile()\r\n      } catch (err) {\r\n        showWarningDialog(\r\n          \"GPS file problem\",\r\n          \"File is not valid XML. Please check you have selected the correct file. \" + err\r\n        )\r\n        return\r\n      }\r\n    }\r\n    // read the selected file\r\n    reader.readAsText(file.target.files[0])\r\n  }\r\n\r\n  trackMatchesMapCoordinates() {\r\n    // find bounding box for track\r\n    const minX = Math.min.apply(Math, this.routeData.x)\r\n    const maxX = Math.max.apply(Math, this.routeData.x)\r\n    const minY = Math.min.apply(Math, this.routeData.y)\r\n    const maxY = Math.max.apply(Math, this.routeData.y)\r\n    const mapSize = getMapSize()\r\n    // check we are somewhere on the map\r\n    return maxX > 0 && minX < mapSize.width && minY < mapSize.height && maxY > 0\r\n  }\r\n}\r\n","import { config } from \"./config\"\r\nlet id = 0\r\nlet courses = []\r\nlet routes = []\r\n\r\n// expand an array of routes or courses into a comma-separated string\r\nfunction extractItems(items, introText) {\r\n  if (items.length > 0) {\r\n    return introText + items.join(\",\")\r\n  }\r\n  return \"\"\r\n}\r\n\r\nfunction generateHash(hashID, hashRoutes, hashCourses) {\r\n  let hash = 0\r\n  if (id !== 0) {\r\n    hash = \"#\" + hashID + extractItems(hashCourses, \"&course=\") + extractItems(hashRoutes, \"&route=\")\r\n  }\r\n  return hash\r\n}\r\n\r\nexport function getHashCourses() {\r\n  return courses\r\n}\r\n\r\nexport function getHashID() {\r\n  return id\r\n}\r\n\r\nexport function getHashRoutes() {\r\n  return routes\r\n}\r\n\r\nexport function getHashTab() {\r\n  if (routes.length > 0) {\r\n    return config.TAB_RESULTS\r\n  }\r\n  return config.TAB_COURSES\r\n}\r\n\r\nfunction getIDFromLocationHash(locationHash) {\r\n  // id should be numeric and between # and & or end of string whichever comes first\r\n  let id = locationHash.replace(/#([0-9]+)($|&).*/, \"$1\")\r\n  //console.log(\"hash \", locationHash, \"id \", id)\r\n  if (id.length > 0) {\r\n    return parseInt(id, 10)\r\n  }\r\n  return id\r\n}\r\n\r\nexport function parseLocationHash(hash) {\r\n  id = 0\r\n  courses.length = 0\r\n  routes.length = 0\r\n  // input looks like #id&course=a,b,c&result=x,y,z\r\n  let fields = hash.split(\"&\")\r\n  for (let i = 0; i < fields.length; i += 1) {\r\n    fields[i] = fields[i].toLowerCase()\r\n    if (fields[i].search(\"#\") !== -1) {\r\n      // remove # and anything else non-numeric before trying to convert to an integer\r\n      id = parseInt(fields[i].replace(/\\D/g, \"\"), 10)\r\n    }\r\n    if (fields[i].search(\"course=\") !== -1) {\r\n      courses = fields[i].replace(\"course=\", \"\").split(\",\")\r\n    }\r\n    if (fields[i].search(\"route=\") !== -1) {\r\n      routes = fields[i].replace(\"route=\", \"\").split(\",\")\r\n    }\r\n  }\r\n  // convert to integers: NaNs sort themselves out on display so don't check here\r\n  courses = courses.map(Number)\r\n  routes = routes.map(Number)\r\n\r\n  if (isNaN(id)) {\r\n    id = 0\r\n    courses.length = 0\r\n    routes.length = 0\r\n  }\r\n  setLocationHash()\r\n  return id\r\n}\r\n\r\nexport function setEventHash(newid) {\r\n  id = newid\r\n  setLocationHash()\r\n}\r\n\r\nexport function setHashCourses(displayedCourses) {\r\n  courses = displayedCourses\r\n  setLocationHash()\r\n}\r\n\r\nexport function setHashRoutes(displayedRoutes) {\r\n  routes = displayedRoutes\r\n  setLocationHash()\r\n}\r\n\r\nfunction setLocationHash() {\r\n  let hash = \"\"\r\n  if (getIDFromLocationHash(window.location.hash) === id) {\r\n    hash = generateHash(id, routes, courses)\r\n    // console.log(\"Replace\" + hash)\r\n    window.history.replaceState({ hash: hash }, \"\", hash)\r\n  } else {\r\n    courses.length = 0\r\n    routes.length = 0\r\n    hash = generateHash(id, routes, courses)\r\n    // console.log(\"Push \" + hash)\r\n    window.history.pushState({ hash: hash }, \"\", hash)\r\n  }\r\n}\r\n","import { Controls } from \"./controls\"\r\nimport { showWarningDialog } from \"./utils\"\r\n\r\nexport class CourseParser {\r\n  constructor(e, worldfile, localWorldfile) {\r\n    this.courses = []\r\n    this.courseClassMapping = []\r\n    this.newcontrols = new Controls()\r\n    this.courses.length = 0\r\n    this.courseClassMapping.length = 0\r\n    this.fromOldCondes = false\r\n    this.coursesGeoreferenced = false\r\n    this.newcontrols.deleteAllControls()\r\n    // holding copies of worldfiles: not ideal but it works\r\n    this.localWorldfile = localWorldfile\r\n    this.worldfile = worldfile\r\n    this.processCoursesXML(e.target.result)\r\n    this.addControlCount()\r\n    return {\r\n      courses: this.courses,\r\n      newcontrols: this.newcontrols,\r\n      mapping: this.courseClassMapping,\r\n      georeferenced: this.coursesGeoreferenced\r\n    }\r\n  }\r\n\r\n  processCoursesXML(rawXML) {\r\n    let xml = null\r\n    try {\r\n      xml = new DOMParser().parseFromString(rawXML, \"text/xml\")\r\n    } catch (err) {\r\n      showWarningDialog(\"XML file error\", \"File is not a valid XML course file.\")\r\n      return\r\n    }\r\n    const nodelist = xml.getElementsByTagName(\"CourseData\")\r\n    if (nodelist.length === 0) {\r\n      if (xml.documentElement.nodeName === \"kml\") {\r\n        this.processKMLCourses(xml)\r\n      } else {\r\n        showWarningDialog(\"XML file error\", \"File is not a valid XML course file. CourseData element missing.\")\r\n      }\r\n      return\r\n    }\r\n    const version = this.getVersion(xml)\r\n    switch (version) {\r\n      case \"2.0.3\":\r\n        this.processIOFV2XMLCourses(xml)\r\n        break\r\n      case \"3.0\":\r\n        this.processIOFV3XMLCourses(xml)\r\n        break\r\n      default:\r\n        showWarningDialog(\"XML file error\", \"Invalid IOF file format. Version \" + version + \" not supported.\")\r\n    }\r\n  }\r\n\r\n  getVersion(xml) {\r\n    let version = \"\"\r\n    // test for IOF Version 2\r\n    let nodelist = xml.getElementsByTagName(\"IOFVersion\")\r\n    if (nodelist.length > 0) {\r\n      version = nodelist[0].getAttribute(\"version\")\r\n    }\r\n    if (version === \"\") {\r\n      // test for IOF Version 3\r\n      nodelist = xml.getElementsByTagName(\"CourseData\")\r\n      if (nodelist.length > 0) {\r\n        version = nodelist[0].getAttribute(\"iofVersion\").trim()\r\n        this.setCreator(nodelist[0].getAttribute(\"creator\").trim())\r\n      }\r\n    }\r\n    return version\r\n  }\r\n\r\n  setCreator(text) {\r\n    // creator looks like \"Condes version 10.1.1\": need to extract version number\r\n    const introLength = 15\r\n    // allow handling of files from Condes before v10.1 which use original worldfile rather than WGS-84 as expected by IOF scheme\r\n    if (text.indexOf(\"Condes\") > -1) {\r\n      if (text.length > introLength) {\r\n        // parseFloat ignores everything from second decimal poin if it finds one\r\n        // so we will get something like 10.1 from 10.1.1\r\n        const version = parseFloat(text.substring(introLength))\r\n        if (version < 10.1) {\r\n          this.fromOldCondes = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  processIOFV3XMLCourses(xml) {\r\n    // extract all controls\r\n    let nodelist = xml.getElementsByTagName(\"Control\")\r\n    // only need first-level Controls\r\n    let pt = { x: 0, y: 0 }\r\n    let controls = []\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      if (nodelist[i].parentNode.nodeName === \"RaceCourseData\") {\r\n        const code = nodelist[i].getElementsByTagName(\"Id\")[0].textContent\r\n        const latlng = nodelist[i].getElementsByTagName(\"Position\")\r\n        if (this.localWorldfile.valid && latlng.length > 0) {\r\n          pt = this.getXYFromLatLng(latlng)\r\n          this.coursesGeoreferenced = true\r\n        } else {\r\n          // only works if all controls have lat/lon or none do: surely a safe assumption...\r\n          pt = this.getXYFromMapPosition(nodelist[i].getElementsByTagName(\"MapPosition\"))\r\n        }\r\n        let control = {}\r\n        // don't want to save crossing points\r\n        if (nodelist[i].getAttribute(\"type\") !== \"CrossingPoint\") {\r\n          this.newcontrols.addControl(code.trim(), pt.x, pt.y)\r\n          control.id = i\r\n          if (latlng.length > 0) {\r\n            control.lat = parseFloat(latlng[0].getAttribute(\"lat\"))\r\n            control.lng = parseFloat(latlng[0].getAttribute(\"lng\"))\r\n          } else {\r\n            control.lat = 0\r\n            control.lng = 0\r\n          }\r\n          control.x = pt.x\r\n          control.y = pt.y\r\n          controls.push(control)\r\n        }\r\n      }\r\n    }\r\n    // extract all courses\r\n    nodelist = xml.getElementsByTagName(\"Course\")\r\n    this.extractV3Courses(nodelist)\r\n    // extract all course/class mappings\r\n    nodelist = xml.getElementsByTagName(\"ClassCourseAssignment\")\r\n    this.extractV3CourseClassMapping(nodelist)\r\n  }\r\n\r\n  processKMLCourses(xml) {\r\n    // reads OOM KML files: assumes we have a WGS-84 georeferenced map...\r\n    // extract all controls\r\n    let controls = []\r\n    this.coursesGeoreferenced = true\r\n    const places = xml.getElementsByTagName(\"Placemark\")\r\n    for (let i = 0; i < places.length; i = i + 1) {\r\n      let pt = {}\r\n      const code = places[i].getElementsByTagName(\"name\")[0].childNodes[0].nodeValue.trim()\r\n      const point = places[i].getElementsByTagName(\"Point\")[0]\r\n      const coords = point.getElementsByTagName(\"coordinates\")[0].childNodes[0].nodeValue.trim().split(\",\")\r\n      const lat = +coords[1]\r\n      const lng = +coords[0]\r\n      pt.x = this.worldfile.getX(lng, lat)\r\n      pt.y = this.worldfile.getY(lng, lat)\r\n      this.newcontrols.addControl(code.trim(), pt.x, pt.y)\r\n      let control = {}\r\n      control.id = i + 1\r\n      control.lat = lat\r\n      control.lng = lng\r\n      control.x = pt.x\r\n      control.y = pt.y\r\n      controls.push(control)\r\n    }\r\n    // set up dummy score course\r\n    let codes = []\r\n    const courseName = \"Course 1\"\r\n    const className = \"Course 1\"\r\n    codes = this.newcontrols.controls.map(function (control) {\r\n      return control.code\r\n    })\r\n    // courseid 0 for now: set when result mapping is known\r\n    this.courses.push({\r\n      courseid: 0,\r\n      x: [],\r\n      y: [],\r\n      codes: codes,\r\n      name: courseName\r\n    })\r\n    this.courseClassMapping.push({ course: courseName, className: className })\r\n    document.getElementById(\"rg2-select-course-file\").classList.add(\"is-valid\")\r\n  }\r\n\r\n  getXYFromLatLng(latLng) {\r\n    let pt = { x: 0, y: 0 }\r\n    const lat = parseFloat(latLng[0].getAttribute(\"lat\"))\r\n    const lng = parseFloat(latLng[0].getAttribute(\"lng\"))\r\n    // handle old Condes-specific georeferencing\r\n    if (this.fromOldCondes) {\r\n      // use original map worldfile\r\n      pt.x = this.localWorldfile.getX(lng, lat)\r\n      pt.y = this.localWorldfile.getY(lng, lat)\r\n    } else {\r\n      // use WGS-84 worldfile as expected (?) by IOF V3 schema\r\n      pt.x = this.worldfile.getX(lng, lat)\r\n      pt.y = this.worldfile.getY(lng, lat)\r\n    }\r\n    return pt\r\n  }\r\n\r\n  processIOFV2XMLCourses(xml) {\r\n    // extract all start controls\r\n    this.extractV2Controls(xml.getElementsByTagName(\"StartPoint\"), \"StartPointCode\")\r\n    // extract all normal controls\r\n    this.extractV2Controls(xml.getElementsByTagName(\"Control\"), \"ControlCode\")\r\n    // extract all finish controls\r\n    this.coursesGeoreferenced = this.extractV2Controls(xml.getElementsByTagName(\"FinishPoint\"), \"FinishPointCode\")\r\n    if (this.coursesGeoreferenced) {\r\n      if (this.localWorldfile.valid) {\r\n        for (let i = 0; i < this.newcontrols.controls.length; i += 1) {\r\n          const x = this.newcontrols.controls[i].x\r\n          const y = this.newcontrols.controls[i].y\r\n          this.newcontrols.controls[i].x = this.localWorldfile.getX(x, y)\r\n          this.newcontrols.controls[i].y = this.localWorldfile.getY(x, y)\r\n        }\r\n      }\r\n    }\r\n    // extract all courses\r\n    this.extractV2Courses(xml.getElementsByTagName(\"Course\"))\r\n  }\r\n\r\n  extractV2Courses(nodelist) {\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      let codes = []\r\n      let x = []\r\n      let y = []\r\n      const name = nodelist[i].getElementsByTagName(\"CourseName\")[0].textContent.trim()\r\n      codes = this.extractCodesFromControlList(nodelist[i], \"ControlCode\")\r\n      // add start code at beginning of array\r\n      codes.unshift(nodelist[i].getElementsByTagName(\"StartPointCode\")[0].textContent.trim())\r\n      codes.push(nodelist[i].getElementsByTagName(\"FinishPointCode\")[0].textContent.trim())\r\n      // courseid 0 for now: set when result mapping is known\r\n      this.courses.push({ courseid: 0, x: x, y: y, codes: codes, name: name })\r\n    }\r\n    document.getElementById(\"rg2-select-course-file\").classList.add(\"is-valid\")\r\n  }\r\n\r\n  extractV3Courses(nodelist) {\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      let codes = []\r\n      let x = []\r\n      let y = []\r\n      const name = nodelist[i].getElementsByTagName(\"Name\")[0].textContent.trim()\r\n      codes = this.extractCodesFromControlList(nodelist[i], \"Control\")\r\n      // courseid 0 for now: set when result mapping is known\r\n      this.courses.push({ courseid: 0, x: x, y: y, codes: codes, name: name })\r\n    }\r\n    document.getElementById(\"rg2-select-course-file\").classList.add(\"is-valid\")\r\n  }\r\n\r\n  extractV3CourseClassMapping(nodelist) {\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      const course = nodelist[i].getElementsByTagName(\"CourseName\")[0].textContent.trim()\r\n      const className = nodelist[i].getElementsByTagName(\"ClassName\")[0].textContent.trim()\r\n      this.courseClassMapping.push({ course: course, className: className })\r\n    }\r\n    document.getElementById(\"rg2-select-course-file\").classList.add(\"is-valid\")\r\n  }\r\n\r\n  extractCodesFromControlList(nodeList, tagName) {\r\n    // tagName depends on IOF version being parsed\r\n    const controlList = nodeList.getElementsByTagName(\"CourseControl\")\r\n    let codes = []\r\n    for (let i = 0; i < controlList.length; i += 1) {\r\n      // OCAD course files add a \"Start\" control at map changes which shows\r\n      // shows up as a spurious control unless we ignore it here\r\n      if (i === 0 || controlList[i].getAttribute(\"type\") !== \"Start\") {\r\n        const code = controlList[i].getElementsByTagName(tagName)[0].textContent.trim();\r\n        // if control code doesn't exist it was a crossing point so we don't need it\r\n        if (this.validControlCode(code)) {\r\n          codes.push(code);\r\n        }\r\n      }\r\n    }\r\n    return codes\r\n  }\r\n\r\n  // returns true if controls are georeferenced\r\n  extractV2Controls(nodelist, type) {\r\n    let isGeoref = false\r\n    let pt = { x: 0, y: 0 }\r\n    for (let i = 0; i < nodelist.length; i += 1) {\r\n      const code = nodelist[i].getElementsByTagName(type)[0].textContent\r\n      const geopos = nodelist[i].getElementsByTagName(\"ControlPosition\")\r\n      // subtle bug and a half #190\r\n      // if you have an IOF XML V2 file which has georeferenced controls AND\r\n      // the map file itself isn't georeferenced\r\n      // then you need to use X, Y and not the georeferenced co-ordinates\r\n      if (geopos.length > 0 && this.localWorldfile.valid) {\r\n        pt.x = parseFloat(geopos[0].getAttribute(\"x\"))\r\n        pt.y = parseFloat(geopos[0].getAttribute(\"y\"))\r\n        isGeoref = true\r\n      } else {\r\n        pt = this.getXYFromMapPosition(nodelist[i].getElementsByTagName(\"MapPosition\"))\r\n      }\r\n      this.newcontrols.addControl(code.trim(), pt.x, pt.y)\r\n    }\r\n    return isGeoref\r\n  }\r\n\r\n  getXYFromMapPosition(mapPosition) {\r\n    // #269 allow for getting a comma instead of a decimal point\r\n    return {\r\n      x: mapPosition[0].getAttribute(\"x\").replace(\",\", \".\"),\r\n      y: mapPosition[0].getAttribute(\"y\").replace(\",\", \".\")\r\n    }\r\n  }\r\n\r\n  // check if a given control code is in the list of known controls\r\n  validControlCode(code) {\r\n    const controls = this.newcontrols.controls\r\n    for (let i = 0; i < controls.length; i += 1) {\r\n      if (controls[i].code === code) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  addControlCount() {\r\n    for (let i = 0; i < this.courses.length; i += 1) {\r\n      // codes include S and F so need to subtract 2 from length\r\n      this.courses[i].controlcount = this.courses[i].codes.length - 2\r\n    }\r\n  }\r\n}\r\n","import { generateSelectOption } from \"./utils\"\r\n\r\nexport class Georefs {\r\n  constructor() {\r\n    this.georefsystems = []\r\n    this.georefsystems.push({ name: \"Not georeferenced\", description: \"none\", params: \"\", value: 0 })\r\n    this.georefsystems.push({\r\n      name: \"GB National Grid\",\r\n      description: \"EPSG:27700\",\r\n      params:\r\n        \"+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs\",\r\n      value: 1\r\n    })\r\n    this.georefsystems.push({\r\n      name: \"Google EPSG:900913\",\r\n      description: \"EPSG:900913\",\r\n      params:\r\n        \"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\",\r\n      value: 2\r\n    })\r\n    if (rg2Config.epsg_code !== undefined) {\r\n      // if more than one user-defined then they come in as |-separated strings\r\n      const codes = rg2Config.epsg_code.split(\"|\")\r\n      const params = rg2Config.epsg_params.split(\"|\")\r\n      for (let i = 0; i < codes.length; i = i + 1) {\r\n        this.georefsystems.push({\r\n          name: codes[i].replace(\" \", \"\"),\r\n          description: codes[i].replace(\" \", \"\"),\r\n          params: params[i],\r\n          value: i + 3\r\n        })\r\n      }\r\n      // default value for select option is first of the newly added items, afetr None, GBNG and Google\r\n      this.defaultGeorefVal = 3\r\n    } else {\r\n      // default to GB National Grid\r\n      this.defaultGeorefVal = 1\r\n    }\r\n  }\r\n\r\n  getDefaultValue() {\r\n    return this.georefsystems[this.defaultGeorefVal].value\r\n  }\r\n\r\n  getGeorefDropdown() {\r\n    let html = \"\"\r\n    for (let i = 0; i < this.georefsystems.length; i += 1) {\r\n      html += generateSelectOption(i, this.georefsystems[i].name, i === 0)\r\n    }\r\n    return html\r\n  }\r\n\r\n  getGeorefSystem(index) {\r\n    return this.georefsystems[index]\r\n  }\r\n}\r\n","export class Worldfile {\r\n  // see http://en.wikipedia.org/wiki/World_file\r\n  constructor(wf) {\r\n    if (wf.A === undefined) {\r\n      this.valid = false\r\n      this.A = 0\r\n      this.B = 0\r\n      this.C = 0\r\n      this.D = 0\r\n      this.E = 0\r\n      this.F = 0\r\n    } else {\r\n      this.A = parseFloat(wf.A)\r\n      this.B = parseFloat(wf.B)\r\n      this.C = parseFloat(wf.C)\r\n      this.D = parseFloat(wf.D)\r\n      this.E = parseFloat(wf.E)\r\n      this.F = parseFloat(wf.F)\r\n      this.valid = true\r\n      // helps make later calculations easier\r\n      this.AEDB = wf.A * wf.E - wf.D * wf.B\r\n      this.xCorrection = wf.B * wf.F - wf.E * wf.C\r\n      this.yCorrection = wf.D * wf.C - wf.A * wf.F\r\n    }\r\n  }\r\n\r\n  // use worldfile to generate latitude\r\n  getLat(x, y) {\r\n    return this.D * x + this.E * y + this.F\r\n  }\r\n\r\n  // use worldfile to generate longitude\r\n  getLon(x, y) {\r\n    return this.A * x + this.B * y + this.C\r\n  }\r\n\r\n  // use worldfile to generate X value\r\n  getX(lng, lat) {\r\n    return Math.round((this.E * lng - this.B * lat + this.xCorrection) / this.AEDB)\r\n  }\r\n\r\n  // use worldfile to generate y value\r\n  getY(lng, lat) {\r\n    return Math.round((-1 * this.D * lng + this.A * lat + this.yCorrection) / this.AEDB)\r\n  }\r\n}\r\n","import { Worldfile } from \"./worldfile\"\r\n\r\n// can't call this Map since that is a built-in class\r\nexport class MapData {\r\n  constructor(data) {\r\n    if (data !== undefined) {\r\n      // existing map from database\r\n      this.mapid = data.mapid\r\n      this.name = data.name\r\n      // worldfile for GPS to map image conversion (for GPS files)\r\n      this.worldfile = new Worldfile(data)\r\n      // worldfile for local co-ords to map image conversion (for georeferenced courses)\r\n      this.localworldfile = new Worldfile({\r\n        A: data.localA,\r\n        B: data.localB,\r\n        C: data.localC,\r\n        D: data.localD,\r\n        E: data.localE,\r\n        F: data.localF\r\n      })\r\n      if (data.mapfilename === undefined) {\r\n        this.mapfilename = this.mapid + \".\" + \"jpg\"\r\n      } else {\r\n        this.mapfilename = data.mapfilename\r\n      }\r\n    } else {\r\n      // new map to be added\r\n      this.mapid = 0\r\n      this.name = \"\"\r\n      this.worldfile = new Worldfile(0)\r\n      this.localworldfile = new Worldfile(0)\r\n    }\r\n    this.xpx = []\r\n    this.ypx = []\r\n    this.lat = []\r\n    this.lon = []\r\n  }\r\n}\r\n","import { formatSecsAsMMSS, getSecsFromHHMM, getSecsFromHHMMSS } from \"./utils\"\r\n\r\nexport class ResultParserCSV {\r\n  constructor(rawCSV) {\r\n    this.results = []\r\n    this.CSVFormat = {}\r\n    this.separator = \"\"\r\n    this.valid = true\r\n    this.processResultsCSV(rawCSV)\r\n    return { results: this.results, valid: this.valid }\r\n  }\r\n\r\n  extractResult(fields, course, controls) {\r\n    const FIRST_NAME_IDX = 0\r\n    const SURNAME_IDX = 1\r\n    const CLUB_IDX = 2\r\n    const START_TIME_IDX = 3\r\n    let result = {}\r\n    result.chipid = 0\r\n    result.name = (fields[FIRST_NAME_IDX] + \" \" + fields[SURNAME_IDX] + \" \" + fields[CLUB_IDX]).trim()\r\n    result.dbid = result.chipid + \"__\" + result.name\r\n    result.starttime = getSecsFromHHMM(fields[START_TIME_IDX])\r\n    result.club = fields[CLUB_IDX]\r\n    result.course = course\r\n    result.controls = controls\r\n    const info = this.extractSpklasseSplits(fields)\r\n    result.splits = info.splits\r\n    result.codes = info.codes\r\n    result.time = formatSecsAsMMSS(info.totaltime)\r\n    this.results.push(result)\r\n  }\r\n\r\n  extractSingleCSVResult(fields) {\r\n    let result = {}\r\n    result.valid = true\r\n    result.chipid = fields[this.CSVFormat.CHIP_IDX]\r\n    // delete quotes from CSV file: output from MERCS\r\n    result.name = (fields[this.CSVFormat.FIRST_NAME_IDX] + \" \" + fields[this.CSVFormat.SURNAME_IDX])\r\n      .trim()\r\n      .replace(/\"/g, \"\")\r\n    result.dbid = fields[this.CSVFormat.DB_IDX]\r\n    result.starttime = getSecsFromHHMMSS(fields[this.CSVFormat.START_TIME_IDX])\r\n    result.time = fields[this.CSVFormat.TOTAL_TIME_IDX]\r\n    result.position = this.getPosition(fields)\r\n    result.status = this.getSICSVStatus(fields[this.CSVFormat.NC_IDX], fields[this.CSVFormat.CLASSIFIER_IDX])\r\n    result.club = fields[this.CSVFormat.CLUB_IDX].trim().replace(/\"/g, \"\")\r\n    result.course = fields[this.CSVFormat.COURSE_IDX]\r\n    if (result.course === \"\") {\r\n      result.valid = false\r\n    }\r\n    result.controls = parseInt(fields[this.CSVFormat.NUM_CONTROLS_IDX], 10)\r\n    const info = this.extractSISplits(fields, result.controls)\r\n    result.splits = info.splits\r\n    // add finish split\r\n    if (result.splits !== \"\") {\r\n      result.splits += \";\"\r\n    }\r\n    result.splits += getSecsFromHHMMSS(result.time)\r\n    result.codes = info.codes\r\n    return result\r\n  }\r\n\r\n  extractSISplits(fields, controls) {\r\n    let nextsplit = this.CSVFormat.FIRST_SPLIT_IDX\r\n    let nextcode = this.CSVFormat.FIRST_CODE_IDX\r\n    let result = {}\r\n    result.splits = \"\"\r\n    result.codes = []\r\n    for (let i = 0; i < controls; i += 1) {\r\n      if (fields[nextcode]) {\r\n        if (i > 0) {\r\n          result.splits += \";\"\r\n        }\r\n        result.codes[i] = fields[nextcode]\r\n        result.splits += getSecsFromHHMMSS(fields[nextsplit])\r\n      }\r\n      nextsplit += this.CSVFormat.STEP\r\n      nextcode += this.CSVFormat.STEP\r\n    }\r\n    return { splits: result.splits, codes: result.codes }\r\n  }\r\n\r\n  extractSpklasseSplits(fields) {\r\n    const FIRST_SPLIT_IDX = 4\r\n    let splits = \"\"\r\n    let codes = []\r\n    let totaltime = 0\r\n    for (let i = 0; i < fields.length - FIRST_SPLIT_IDX; i += 1) {\r\n      if (i > 0) {\r\n        splits += \";\"\r\n      }\r\n      codes[i] = \"X\"\r\n      totaltime += getSecsFromHHMMSS(fields[i + FIRST_SPLIT_IDX])\r\n      splits += totaltime\r\n    }\r\n    return { splits: splits, codes: codes, totaltime: totaltime }\r\n  }\r\n\r\n  getCSVFormat(headers) {\r\n    // not a pretty function but it should allow some non-standard CSV formats to be processed such as OEScore output\r\n    const titles = [\r\n      \"si card\",\r\n      \"database id\",\r\n      \"surname\",\r\n      \"first name\",\r\n      \"nc\",\r\n      \"start\",\r\n      \"time\",\r\n      \"classifier\",\r\n      \"city\",\r\n      \"short\",\r\n      \"course\",\r\n      \"course controls\",\r\n      \"pl\",\r\n      \"start punch\",\r\n      \"control1\",\r\n      \"punch1\",\r\n      \"control2\"\r\n    ]\r\n    let values = []\r\n    const fields = headers.split(this.separator).map(function (str) {\r\n      return str.toLowerCase()\r\n    })\r\n    let found = false\r\n    for (let i = 0; i < titles.length; i += 1) {\r\n      found = false\r\n      for (let j = 0; j < fields.length; j += 1) {\r\n        if (fields[j] === titles[i]) {\r\n          values[i] = j\r\n          found = true\r\n          break\r\n        }\r\n        // horrid hacks to handle semi-compliant files\r\n        if (\"si card\" === titles[i]) {\r\n          if (\"chipno\" === fields[j] || \"sicard\" === fields[j] || \"database id\" === fields[j]) {\r\n            values[i] = j\r\n            found = true\r\n            break\r\n          }\r\n        }\r\n        if (\"nc\" === titles[i]) {\r\n          if (\"classifier\" === fields[j]) {\r\n            values[i] = j\r\n            found = true\r\n            break\r\n          }\r\n        }\r\n        if (\"city\" === titles[i]) {\r\n          if (\"club\" === fields[j]) {\r\n            values[i] = j\r\n            found = true\r\n            break\r\n          }\r\n        }\r\n        if (\"pl\" === titles[i]) {\r\n          if (\"place\" === fields[j]) {\r\n            values[i] = j\r\n            found = true\r\n            break\r\n          }\r\n        }\r\n      }\r\n      if (!found) {\r\n        // stop if we didn't find what we needed\r\n        break\r\n      }\r\n    }\r\n\r\n    if (!found) {\r\n      // default to BOF CSV format\r\n      //not sure of this is really a good idea but it has always been like this...\r\n      values = [1, 2, 3, 4, 8, 9, 11, 12, 15, 18, 39, 42, 43, 44, 46, 47, 48]\r\n    }\r\n    this.setCSVFormat(values)\r\n  }\r\n\r\n  getPosition(fields) {\r\n    let position = parseInt(fields[this.CSVFormat.POSITION_IDX], 10)\r\n    if (isNaN(position)) {\r\n      position = \"\"\r\n    }\r\n    return position\r\n  }\r\n\r\n  getSICSVStatus(nc, classifier) {\r\n    if (nc === \"0\" || nc === \"\" || nc === \"N\" || nc === \"n\") {\r\n      if (classifier === \"\" || classifier === \"0\") {\r\n        return \"ok\"\r\n      }\r\n      return \"nok\"\r\n    }\r\n    return \"nc\"\r\n  }\r\n\r\n  // rows: array of raw lines from SI results csv file\r\n  processCSVResults(rows) {\r\n    // extract what we need: first row is headers so ignore\r\n    for (let i = 1; i < rows.length; i += 1) {\r\n      const fields = rows[i].split(this.separator)\r\n      // need at least this many fields...\r\n      if (fields.length >= this.CSVFormat.FIRST_SPLIT_IDX) {\r\n        let newResult = this.extractSingleCSVResult(fields)\r\n        if (newResult.valid) {\r\n          // don't need this field any more\r\n          delete newResult.valid\r\n          this.results.push(newResult)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  processResultsCSV(rawCSV) {\r\n    const rows = rawCSV.split(/[\\r\\n|\\n]+/)\r\n    // try and work out what the separator is\r\n    const commas = rows[0].split(\",\").length - 1\r\n    const semicolons = rows[0].split(\";\").length - 1\r\n    if (commas > semicolons) {\r\n      this.separator = \",\"\r\n    } else {\r\n      this.separator = \";\"\r\n    }\r\n    // Spklasse has two items on first row, SI CSV has a lot more...\r\n    if (rows[0].split(this.separator).length === 2) {\r\n      this.processSpklasseCSVResults(rows)\r\n    } else {\r\n      this.getCSVFormat(rows[0])\r\n      this.processCSVResults(rows)\r\n    }\r\n  }\r\n\r\n  // rows: array of raw lines from Spklasse results csv file\r\n  processSpklasseCSVResults(rows) {\r\n    // fields in course row\r\n    const COURSE_IDX = 0\r\n    const NUM_CONTROLS_IDX = 1\r\n    let fields = []\r\n    let course = \"\"\r\n    let controls = 0\r\n    // read through all rows\r\n    for (let i = 0; i < rows.length; i += 1) {\r\n      fields = rows[i].split(this.separator)\r\n      // check for new course\r\n      if (fields.length === 2) {\r\n        course = fields[COURSE_IDX]\r\n        controls = parseInt(fields[NUM_CONTROLS_IDX], 10)\r\n      } else {\r\n        this.extractResult(fields, course, controls)\r\n      }\r\n    }\r\n  }\r\n\r\n  setCSVFormat(values) {\r\n    this.CSVFormat.CHIP_IDX = values[0]\r\n    this.CSVFormat.DB_IDX = values[1]\r\n    this.CSVFormat.SURNAME_IDX = values[2]\r\n    this.CSVFormat.FIRST_NAME_IDX = values[3]\r\n    this.CSVFormat.NC_IDX = values[4]\r\n    this.CSVFormat.START_TIME_IDX = values[5]\r\n    this.CSVFormat.TOTAL_TIME_IDX = values[6]\r\n    this.CSVFormat.CLASSIFIER_IDX = values[7]\r\n    this.CSVFormat.CLUB_IDX = values[8]\r\n    this.CSVFormat.CLASS_IDX = values[9]\r\n    this.CSVFormat.COURSE_IDX = values[10]\r\n    this.CSVFormat.NUM_CONTROLS_IDX = values[11]\r\n    this.CSVFormat.POSITION_IDX = values[12]\r\n    this.CSVFormat.START_PUNCH_IDX = values[13]\r\n    this.CSVFormat.FIRST_CODE_IDX = values[14]\r\n    this.CSVFormat.FIRST_SPLIT_IDX = values[15]\r\n    this.CSVFormat.STEP = values[16] - values[14]\r\n  }\r\n}\r\n","import { extractAttributeZero, extractTextContentZero, getSecsFromHHMMSS, showWarningDialog } from \"./utils\"\r\n\r\nexport class ResultParserIOFV2 {\r\n  constructor(xml) {\r\n    this.results = []\r\n    this.valid = true\r\n    this.processIOFV2Results(xml)\r\n    return { results: this.results, valid: this.valid }\r\n  }\r\n\r\n  extractIOFV2Results(resultlist, result) {\r\n    for (let i = 0; i < resultlist.length; i += 1) {\r\n      result.status = extractAttributeZero(resultlist[i].getElementsByTagName(\"CompetitorStatus\"), \"value\", \"\")\r\n      result.position = this.getPosition(resultlist[i].getElementsByTagName(\"ResultPosition\"))\r\n      result.chipid = extractTextContentZero(resultlist[i].getElementsByTagName(\"CCardId\"), 0)\r\n      // assuming first <Time> is the total time...\r\n      result.time = this.getTime(resultlist[i].getElementsByTagName(\"Time\"))\r\n      result.starttime = this.getStartFinishTimeAsSecs(resultlist[i].getElementsByTagName(\"StartTime\"))\r\n      result.splits = \"\"\r\n      result.codes = []\r\n      const splitlist = resultlist[i].getElementsByTagName(\"SplitTime\")\r\n      result.controls = splitlist.length\r\n      this.extractIOFV2Splits(splitlist, result)\r\n      const finishtime = this.getStartFinishTimeAsSecs(resultlist[i].getElementsByTagName(\"FinishTime\"))\r\n      result.splits += Math.max(finishtime - result.starttime, 0)\r\n    }\r\n  }\r\n\r\n  extractIOFV2Splits(splitlist, result) {\r\n    for (let l = 0; l < splitlist.length; l += 1) {\r\n      if (l > 0) {\r\n        result.splits += \";\"\r\n      }\r\n      const temp = splitlist[l].getElementsByTagName(\"Time\")\r\n      if (temp.length > 0) {\r\n        // previously read timeFormat but some files lied!\r\n        // allow for XML files that don't tell you what is going on\r\n        // getSecsFromHHMMSS copes with MM:SS as well\r\n        result.splits += getSecsFromHHMMSS(temp[0].textContent)\r\n        result.codes[l] = extractTextContentZero(splitlist[l].getElementsByTagName(\"ControlCode\"), \"\")\r\n      } else {\r\n        result.splits += 0\r\n        result.codes[l] = \"\"\r\n      }\r\n    }\r\n    // add finish split\r\n    result.splits += \";\"\r\n  }\r\n\r\n  getDBID(element, index) {\r\n    if (element.length === 0) {\r\n      return index\r\n    }\r\n    // remove new lines from empty <PersonId> tags\r\n    element = element[0].textContent.replace(/[\\n\\r]/g, \"\").trim()\r\n    if (element) {\r\n      return element\r\n    }\r\n    return index\r\n  }\r\n\r\n  getName(personlist) {\r\n    const temp =\r\n      personlist.getElementsByTagName(\"Given\")[0].textContent +\r\n      \" \" +\r\n      personlist.getElementsByTagName(\"Family\")[0].textContent\r\n    // remove new lines from empty <Given> and <Family> tags\r\n    return temp.replace(/[\\n\\r]/g, \"\").trim()\r\n  }\r\n\r\n  getPosition(element) {\r\n    if (element.length > 0) {\r\n      return parseInt(element[0].textContent, 10)\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  getStartFinishTimeAsSecs(element) {\r\n    if (element.length > 0) {\r\n      const time = element[0].getElementsByTagName(\"Clock\")[0].textContent\r\n      return getSecsFromHHMMSS(time)\r\n    }\r\n    return 0\r\n  }\r\n\r\n  getTime(element) {\r\n    if (element.length > 0) {\r\n      return element[0].textContent.replace(/[\\n\\r]/g, \"\")\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  processIOFV2Results(xml) {\r\n    try {\r\n      const classlist = xml.getElementsByTagName(\"ClassResult\")\r\n      for (let i = 0; i < classlist.length; i += 1) {\r\n        const course = classlist[i].getElementsByTagName(\"ClassShortName\")[0].textContent\r\n        const personlist = classlist[i].getElementsByTagName(\"PersonResult\")\r\n        for (let j = 0; j < personlist.length; j += 1) {\r\n          let result = {}\r\n          result.course = course\r\n          result.name = this.getName(personlist[j])\r\n          result.dbid = this.getDBID(personlist[j].getElementsByTagName(\"PersonId\"), j)\r\n          result.club = extractTextContentZero(personlist[j].getElementsByTagName(\"ShortName\"), \"\")\r\n          const resultlist = personlist[j].getElementsByTagName(\"Result\")\r\n          this.extractIOFV2Results(resultlist, result)\r\n          if (result.status !== \"DidNotStart\") {\r\n            this.results.push(result)\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      this.valid = false\r\n      showWarningDialog(\"XML parse error\", \"Error processing XML file. Error is : \" + err.message)\r\n      return\r\n    }\r\n  }\r\n}\r\n","import { extractTextContentZero, formatSecsAsMMSS, getSecsFromHHMMSS, showWarningDialog } from \"./utils\"\r\n\r\nexport class ResultParserIOFV3 {\r\n  constructor(xml) {\r\n    this.results = []\r\n    this.valid = true\r\n    this.processIOFV3Results(xml)\r\n    return { results: this.results, valid: this.valid }\r\n  }\r\n\r\n  extractIOFV3Results(resultlist, result) {\r\n    for (let k = 0; k < resultlist.length; k += 1) {\r\n      result.chipid = extractTextContentZero(resultlist[k].getElementsByTagName(\"ControlCard\"), 0)\r\n      result.position = extractTextContentZero(resultlist[k].getElementsByTagName(\"Position\"), \"\")\r\n      if (result.position === \"0\") {\r\n        result.position = \"\"\r\n      }\r\n      result.status = extractTextContentZero(resultlist[k].getElementsByTagName(\"Status\"), \"\")\r\n      // assuming first <Time> is the total time...\r\n      // this one is in seconds and might even have tenths...\r\n      result.time = this.getTotalTimeAsSeconds(resultlist[k].getElementsByTagName(\"Time\"))\r\n      result.starttime = this.getStartFinishTimeAsSeconds(\r\n        extractTextContentZero(resultlist[k].getElementsByTagName(\"StartTime\"), 0)\r\n      )\r\n      result.splits = \"\"\r\n      result.codes = []\r\n      const splitlist = resultlist[k].getElementsByTagName(\"SplitTime\")\r\n      this.extractIOFV3Splits(splitlist, result)\r\n      const finishtime = this.getStartFinishTimeAsSeconds(\r\n        extractTextContentZero(resultlist[k].getElementsByTagName(\"FinishTime\"), 0)\r\n      )\r\n      if (finishtime > 0) {\r\n        result.splits += finishtime - result.starttime\r\n      } else {\r\n        result.splits += 0\r\n      }\r\n    }\r\n  }\r\n\r\n  extractIOFV3Splits(splitlist, result) {\r\n    let codes = []\r\n    for (let x = 0; x < splitlist.length; x += 1) {\r\n      // no attributes means just a standard split with time and control code\r\n      if (splitlist[x].attributes.length === 0) {\r\n        result.splits += extractTextContentZero(splitlist[x].getElementsByTagName(\"Time\"), 0)\r\n        codes.push(extractTextContentZero(splitlist[x].getElementsByTagName(\"ControlCode\"), \"X\" + x))\r\n        result.splits += \";\"\r\n      } else {\r\n        // possible status attributes are \"Missing\" and \"Additional\"\r\n        // need to insert a dummy 0 time for missing splits\r\n        if (splitlist[x].getAttribute(\"status\") === \"Missing\") {\r\n          result.splits += \"0\"\r\n          codes.push(extractTextContentZero(splitlist[x].getElementsByTagName(\"ControlCode\"), \"X\" + x))\r\n          result.splits += \";\"\r\n        }\r\n      }\r\n    }\r\n    result.codes = codes\r\n    result.controls = result.codes.length\r\n  }\r\n\r\n  getClub(element) {\r\n    if (element.length > 0) {\r\n      if (element[0].getElementsByTagName(\"Name\")[0]) {\r\n        return element[0].getElementsByTagName(\"Name\")[0].textContent\r\n      }\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  getID(element, index) {\r\n    if (element.length > 0) {\r\n      let text = element[0].textContent\r\n      // remove new lines from empty <Id> tags\r\n      text.replace(/[\\n\\r]/g, \"\")\r\n      return text.trim()\r\n    }\r\n    // no id defined so just use result index\r\n    return index\r\n  }\r\n\r\n  getStartFinishTimeAsSeconds(time) {\r\n    if (time.length >= 19) {\r\n      // format is yyyy-mm-ddThh:mm:ss and might have extra Z or +nn\r\n      return getSecsFromHHMMSS(time.substr(11, 8))\r\n    }\r\n    return 0\r\n  }\r\n\r\n  getTotalTimeAsSeconds(time) {\r\n    if (time.length > 0 && time[0].textContent) {\r\n      const timeInt = parseInt(time[0].textContent, 10)\r\n      return formatSecsAsMMSS(timeInt)\r\n    }\r\n    return \"00:00\"\r\n  }\r\n\r\n  processIOFV3Results(xml) {\r\n    try {\r\n      const classlist = xml.getElementsByTagName(\"ClassResult\")\r\n      for (let i = 0; i < classlist.length; i += 1) {\r\n        const classes = classlist[i].getElementsByTagName(\"Class\")\r\n        const course = classes[0].getElementsByTagName(\"Name\")[0].textContent\r\n        const personlist = classlist[i].getElementsByTagName(\"PersonResult\")\r\n        for (let j = 0; j < personlist.length; j += 1) {\r\n          let result = {}\r\n          result.course = course\r\n          const temp =\r\n            personlist[j].getElementsByTagName(\"Given\")[0].textContent +\r\n            \" \" +\r\n            personlist[j].getElementsByTagName(\"Family\")[0].textContent\r\n          // remove new lines from empty <Given> and <Family> tags\r\n          result.name = temp.replace(/[\\n\\r]/g, \"\").trim()\r\n          result.dbid = this.getID(personlist[j].getElementsByTagName(\"Id\"), j)\r\n          result.club = this.getClub(personlist[j].getElementsByTagName(\"Organisation\"))\r\n          const resultlist = personlist[j].getElementsByTagName(\"Result\")\r\n          this.extractIOFV3Results(resultlist, result)\r\n          if (result.status !== \"DidNotStart\") {\r\n            this.results.push(result)\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      this.valid = false\r\n      showWarningDialog(\"XML parse error\", \"Error processing XML file. Error is : \" + err.message)\r\n      return\r\n    }\r\n  }\r\n}\r\n","import { config } from \"./config\"\r\nimport { ResultParserCSV } from \"./resultparsercsv\"\r\nimport { ResultParserIOFV2 } from \"./resultparseriofv2\"\r\nimport { ResultParserIOFV3 } from \"./resultparseriofv3\"\r\nimport { extractAttributeZero, showWarningDialog } from \"./utils\"\r\n\r\nexport class ResultParser {\r\n  constructor(e, fileFormat) {\r\n    this.results = []\r\n    this.resultCourses = []\r\n    this.valid = true\r\n    const parsedResults = this.processResults(e, fileFormat)\r\n    this.results = parsedResults.results\r\n    this.valid = parsedResults.valid\r\n    this.getCoursesFromResults()\r\n    return {\r\n      results: this.results,\r\n      resultCourses: this.resultCourses,\r\n      valid: this.valid\r\n    }\r\n  }\r\n\r\n  getCoursesFromResults() {\r\n    // creates an array of all course names in the results file\r\n    for (let i = 0; i < this.results.length; i += 1) {\r\n      // have we already found this course?\r\n      let found = false\r\n      for (let j = 0; j < this.resultCourses.length; j += 1) {\r\n        if (this.resultCourses[j].course === this.results[i].course) {\r\n          found = true\r\n          break\r\n        }\r\n      }\r\n      if (!found) {\r\n        // courseid is set later when mapping is known\r\n        this.resultCourses.push({\r\n          course: this.results[i].course,\r\n          courseid: config.DO_NOT_SAVE_COURSE\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  processResults(e, fileFormat) {\r\n    switch (fileFormat) {\r\n      case \"CSV\":\r\n        return new ResultParserCSV(e.target.result)\r\n      case \"XML\":\r\n        return this.processResultsXML(e.target.result)\r\n      default:\r\n        // shouldn't ever get here but...\r\n        showWarningDialog(\"File type error\", \"Results file type is not recognised. Please select a valid file.\")\r\n        return { results: [], valid: false }\r\n    }\r\n  }\r\n\r\n  processResultsXML(rawXML) {\r\n    let version = \"\"\r\n    let xml = undefined\r\n    try {\r\n      xml = new DOMParser().parseFromString(rawXML, \"text/xml\")\r\n      const nodelist = xml.getElementsByTagName(\"ResultList\")\r\n      if (nodelist.length === 0) {\r\n        showWarningDialog(\"XML file error\", \"File is not a valid XML results file. ResultList element missing.\")\r\n        return { results: [], valid: false }\r\n      }\r\n      // test for IOF Version 2\r\n      version = extractAttributeZero(xml.getElementsByTagName(\"IOFVersion\"), \"version\", \"\")\r\n      if (version === \"\") {\r\n        // test for IOF Version 3\r\n        version = extractAttributeZero(xml.getElementsByTagName(\"ResultList\"), \"iofVersion\", \"\")\r\n      }\r\n    } catch (err) {\r\n      showWarningDialog(\"XML file error\", \"File is not a valid XML results file.\")\r\n      return { results: [], valid: false }\r\n    }\r\n\r\n    switch (version) {\r\n      case \"2.0.3\":\r\n        return new ResultParserIOFV2(xml)\r\n      case \"3.0\":\r\n        return new ResultParserIOFV3(xml)\r\n      default:\r\n        showWarningDialog(\"XML file error\", \"Invalid IOF file format. Version \" + version + \" not supported.\")\r\n        return { results: [], valid: false }\r\n    }\r\n  }\r\n}\r\n","export class User {\r\n  constructor(keksi) {\r\n    this.x = \"\"\r\n    this.y = keksi\r\n    this.name = null\r\n    this.password = null\r\n  }\r\n\r\n  setDetails(nameSelector, passwordSelector) {\r\n    // mickey mouse 5 character requirement\r\n    const regex = /...../\r\n    this.name = document.getElementById(nameSelector).value\r\n    const nameValid = regex.test(this.name)\r\n    this.password = document.getElementById(passwordSelector).value\r\n    const passwordValid = regex.test(this.password)\r\n    return nameValid && passwordValid\r\n  }\r\n\r\n  alterString(input, pattern) {\r\n    let str = \"\"\r\n    for (let i = 0; i < input.length; i += 1) {\r\n      str += input.charAt(i) + pattern.charAt(i)\r\n    }\r\n    return str\r\n  }\r\n\r\n  encodeUser() {\r\n    return { x: this.alterString(this.name + this.password, this.y), y: this.y }\r\n  }\r\n}\r\n","// eslint-disable-next-line no-unused-vars\r\nimport * as bootstrap from \"bootstrap\"\r\nimport { getApi, postApi } from \"./api\"\r\nimport { ctx, getMapSize, loadNewMap, redraw } from \"./canvas\"\r\nimport { config, getOverprintDetails } from \"./config\"\r\nimport { Controls } from \"./controls\"\r\nimport { CourseParser } from \"./courseparser\"\r\nimport {\r\n  doGetEvents,\r\n  isScoreEvent,\r\n  getEventInfoForKartatID,\r\n  loadEventByKartatID,\r\n  mapIDIsInUse,\r\n  setActiveEventIDByKartatID,\r\n  setEventTitleBar\r\n} from \"./events\"\r\nimport { Georefs } from \"./georefs\"\r\nimport { decode } from \"html-entities\"\r\nimport { MapData } from \"./mapdata\"\r\nimport proj4 from \"proj4\"\r\nimport { ResultParser } from \"./resultparser\"\r\nimport { getRoutesForEvent } from \"./results\"\r\nimport { t } from \"./translate\"\r\nimport { User } from \"./user\"\r\nimport { createModalDialog, generateSelectOption, showWarningDialog, validateValue } from \"./utils\"\r\nimport { Datepicker } from \"vanillajs-datepicker\"\r\nimport { Worldfile } from \"./worldfile\"\r\nimport L from \"leaflet\"\r\n// TODO import css somewhere else?\r\nimport \"leaflet/dist/leaflet.css\"\r\n\r\nlet user = null\r\nlet newMap = new MapData()\r\nlet georefsystems = new Georefs()\r\nlet mapIndex = null\r\nlet format = null\r\nlet newEventIsScoreEvent = false\r\nlet hasResults = true\r\nlet newcontrols = null\r\nlet courses = []\r\nlet mapping = []\r\nlet isEnrichCourseNames = false\r\nlet mapLoaded = false\r\nlet coursesGeoreferenced = false\r\nlet controlsAdjusted = false\r\nlet drawingCourses = false\r\nlet drawnCourse = {}\r\nlet results = []\r\nlet variants = []\r\nlet resultCourses = []\r\nlet mapFile = undefined\r\nlet resultsOrCourseFile = undefined\r\nlet resultsFileFormat = \"\"\r\n// list of possible encodings from results or course file: just add new ones to the array if needed\r\nconst encodings = [\"UTF-8\", \"ISO-8859-1\", \"windows-1251\"]\r\n// count of errors when parsing each encoding type\r\nlet errorCount = []\r\n// current index into encodings\r\nlet encodingIndex = 0\r\n// state flag showing we have found the least worst encoding so use anyway\r\nlet useThisEncoding = false\r\nlet backgroundLocked = false\r\nlet sortResults = false\r\nlet handle = { x: null, y: null }\r\nlet maps = []\r\nlet mapSize = { height: 0, width: 0 }\r\nlet localworldfile = new Worldfile(0)\r\nlet worldfile = new Worldfile(0)\r\nlet georefmap = null\r\nlet unusedMaps = []\r\nlet eventSelectDatePicker = null\r\nlet eventEditDatePicker = null\r\nconst defaultExcludedText = \"e.g. 1|1|6,60|15,60\"\r\n\r\nfunction addNewControl(x, y) {\r\n  // add new control: generate a code for it\r\n  let code\r\n  if (newcontrols.controls.length === 0) {\r\n    code = \"S\" + (newcontrols.controls.length + 1)\r\n  } else {\r\n    code = \"X\" + (newcontrols.controls.length + 1)\r\n  }\r\n  newcontrols.addControl(code, x, y)\r\n  newcontrols.displayAllControls()\r\n  drawnCourse.codes.push(code)\r\n  drawnCourse.x.push(x)\r\n  drawnCourse.y.push(y)\r\n}\r\n\r\n// based on adjustTrack from draw.js\r\nexport function adjustManagerControls(p1, p2, button) {\r\n  // console.log (p1.x, p1.y, p2.x, p2.y, handle.x, handle.y, button)\r\n  if (backgroundLocked || button === config.RIGHT_CLICK) {\r\n    // drag track and background\r\n    ctx.translate(p2.x - p1.x, p2.y - p1.y)\r\n  } else {\r\n    controlsAdjusted = true\r\n    if (handle.x !== null) {\r\n      // scale controls\r\n      const scaleX = (p2.x - handle.x) / (p1.x - handle.x)\r\n      const scaleY = (p2.y - handle.y) / (p1.y - handle.y)\r\n      // don't rotate: we are assuming controls and map are already rotated the same\r\n      // console.log (p1.x, p1.y, p2.x, p2.y, handle.x, handle.y, scaleX, scaleY)\r\n      if (isFinite(scaleX) && isFinite(scaleY)) {\r\n        // just ignore very small moves\r\n        for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n          const x = newcontrols.controls[i].oldX - handle.x\r\n          const y = newcontrols.controls[i].oldY - handle.y\r\n          newcontrols.controls[i].x = x * scaleX + handle.x\r\n          newcontrols.controls[i].y = y * scaleY + handle.y\r\n        }\r\n      }\r\n    } else {\r\n      // drag controls\r\n      const dx = p2.x - p1.x\r\n      const dy = p2.y - p1.y\r\n      for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n        newcontrols.controls[i].x = newcontrols.controls[i].oldX + dx\r\n        newcontrols.controls[i].y = newcontrols.controls[i].oldY + dy\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkResultsFileEncoding(e) {\r\n  // not pretty but it works\r\n  // need to use the array of possible encodings that we want to try if the file is not UTF-8\r\n  // might be better to use a synchronous read, but that needs a worker thread\r\n  const errors = testForInvalidCharacters(e.target.result)\r\n  // if this encoding is clean, or we have tried everything so this is the least worst case\r\n  if (errors === 0 || useThisEncoding) {\r\n    // use this version of the results\r\n    processResultFile(e)\r\n    return\r\n  }\r\n  errorCount[encodingIndex] = errors\r\n  encodingIndex += 1\r\n  // have we tried all the encodings?\r\n  if (encodingIndex === encodings.length) {\r\n    let lowest = 99999\r\n    // no clean encodings found, since we would have escaped by now, so find least worst\r\n    for (let i = 0; i < encodings.length; i += 1) {\r\n      if (lowest > errorCount[i]) {\r\n        encodingIndex = i\r\n        lowest = errorCount[i]\r\n      }\r\n    }\r\n    // force this one to be used next time we get back here\r\n    useThisEncoding = true\r\n  }\r\n  // try a new encoding\r\n  readResults()\r\n}\r\n\r\nfunction confirmAddMap() {\r\n  let dlg = {}\r\n  dlg.body = \"Are you sure you want to add this map?\"\r\n  dlg.title = \"Confirm new map\"\r\n  dlg.classes = \"rg2-confirm-add-map-dialog\"\r\n  dlg.doText = \"Add map\"\r\n  dlg.onDo = doUploadMapFile\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction confirmCreateEvent(e) {\r\n  e.preventDefault()\r\n  const valid = validateData()\r\n  if (valid !== \"OK\") {\r\n    showWarningDialog(\r\n      \"Event set-up incomplete\",\r\n      valid + \" Please enter all necessary information and make sure controls are aligned before creating the event.\"\r\n    )\r\n    return\r\n  }\r\n  let dlg = {}\r\n  dlg.body = \"Are you sure you want to create this event?\"\r\n  dlg.title = \"Confirm event creation\"\r\n  dlg.classes = \"rg2-confirm-create-event-dialog\"\r\n  dlg.doText = \"Create event\"\r\n  dlg.onDo = doCreateEvent\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction confirmDeleteEvent() {\r\n  let dlg = {}\r\n  dlg.body = \"This event will be deleted. Are you sure?\"\r\n  dlg.title = \"Confirm event delete\"\r\n  dlg.classes = \"rg2-confirm-delete-event-dialog\"\r\n  dlg.doText = \"Delete event\"\r\n  dlg.onDo = doDeleteEvent\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction confirmDeleteRoute() {\r\n  let dlg = {}\r\n  dlg.body = \"This route will be permanently deleted. Are you sure?\"\r\n  dlg.title = \"Confirm route delete\"\r\n  dlg.classes = \"rg2-confirm-route-delete-dialog\"\r\n  dlg.doText = \"Delete route\"\r\n  dlg.onDo = doDeleteRoute\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction confirmDeleteUnusedMaps() {\r\n  const boxes = document.querySelectorAll(\".unused-map input[type=checkbox]:checked\")\r\n  let checked = []\r\n  for (let box of boxes) {\r\n    if (box.checked) {\r\n      checked.push(parseInt(box.dataset.mapId, 10))\r\n    }\r\n    for (let i = 0; i < unusedMaps.length; i += 1) {\r\n      if (checked.indexOf(unusedMaps[i].mapid) > -1) {\r\n        unusedMaps[i].delete = true\r\n      } else {\r\n        unusedMaps[i].delete = false\r\n      }\r\n    }\r\n  }\r\n  if (checked.length === 0) {\r\n    showWarningDialog(\"Warning\", \"No maps selected.\")\r\n    return\r\n  }\r\n  const dlg = {}\r\n  dlg.body = \"Selected maps will be deleted. Are you sure?\"\r\n  dlg.title = \"Confirm map deletion\"\r\n  dlg.doText = \"Delete maps\"\r\n  dlg.onDo = doDeleteUnusedMaps\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction confirmUpdateEvent() {\r\n  let dlg = {}\r\n  dlg.body = `Are you sure you want to update ${document.getElementById(\"rg2-edit-event-name\").value}?`\r\n  dlg.title = \"Confirm event update\"\r\n  dlg.doText = \"Update event\"\r\n  dlg.onDo = doUpdateEvent\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction convertWorldFile(value) {\r\n  // takes in a World file for the map image and translates it to WGS84 (GPS)\r\n  try {\r\n    const system = georefsystems.getGeorefSystem(value)\r\n    //console.log(system)\r\n    mapSize = getMapSize()\r\n    if (!localworldfile.valid || mapSize.width === 0 || system.name === \"none\") {\r\n      // no map or world file loaded or user selected do not georef\r\n      throw \"Do not georeference\"\r\n    }\r\n    // set up source which is how map was originally georeferenced\r\n    proj4.defs(system.name, system.params)\r\n    const source = new proj4.Proj(system.name)\r\n    // dest is WGS84 as used by GPS: included by default in proj4.defs\r\n    const dest = new proj4.Proj(\"EPSG:4326\")\r\n    // calculation based on fixed points on map\r\n    // x0, y0 is top left, x1, y1 is bottom right, x2, y2 is top right, x3, y3 is bottom left\r\n    // 0, 1 and 2 are saved by the API, and must have these settings\r\n    // 4 is just used here\r\n    // save pixel values of these locations for map image\r\n    const xpx = [0, mapSize.width, mapSize.width, 0]\r\n    const ypx = [0, mapSize.height, 0, mapSize.height]\r\n\r\n    // calculate the same locations using worldfile for the map\r\n    let xsrc = []\r\n    let ysrc = []\r\n    for (let i = 0; i < 4; i += 1) {\r\n      xsrc[i] = localworldfile.getLon(xpx[i], ypx[i])\r\n      ysrc[i] = localworldfile.getLat(xpx[i], ypx[i])\r\n    }\r\n\r\n    newMap.xpx.length = 0\r\n    newMap.ypx.length = 0\r\n    newMap.lat.length = 0\r\n    newMap.lon.length = 0\r\n    // translate source georef to WGS84 (as in GPS file) and store with newMap details\r\n    // Careful: p[] has x = lon and y = lat\r\n    let p = []\r\n    for (let i = 0; i < 4; i += 1) {\r\n      let pt = {}\r\n      pt.x = xsrc[i]\r\n      pt.y = ysrc[i]\r\n      p.push(pt)\r\n      const transformed = proj4(source, dest, p[i])\r\n      newMap.xpx.push(xpx[i])\r\n      newMap.ypx.push(ypx[i])\r\n      newMap.lat.push(transformed.y)\r\n      newMap.lon.push(transformed.x)\r\n    }\r\n\r\n    let wf = {}\r\n    // X = Ax + By + C, Y = Dx + Ey + F\r\n    // C = X - Ax - By, where x and y are 0\r\n    wf.C = p[0].x\r\n    // F = Y - Dx - Ey, where X and Y are 0\r\n    wf.F = p[0].y\r\n    // A = (X - By - C) / x where y = 0\r\n    wf.A = (p[2].x - wf.C) / xpx[2]\r\n    // B = (X - Ax - C) / y where x = 0\r\n    wf.B = (p[3].x - wf.C) / ypx[3]\r\n    // D = (Y - Ey - F) / x where y = 0\r\n    wf.D = (p[2].y - wf.F) / xpx[2]\r\n    // E = (Y - Dx - F) / y where x = 0\r\n    wf.E = (p[3].y - wf.F) / ypx[3]\r\n    //console.log(\"Calculated lon diff = \" + (((wf.A * xpx[1]) + (wf.B * ypx[1]) + wf.C) - p[1].x))\r\n    //console.log(\"Calculated lat diff = \" + (((wf.D * xpx[1]) + (wf.E * ypx[1]) + wf.F) - p[1].y))\r\n    newMap.worldfile = new Worldfile(wf)\r\n    updateGeorefMap()\r\n  } catch (err) {\r\n    newMap.worldfile = new Worldfile(0)\r\n    updateGeorefMap()\r\n    return\r\n  }\r\n}\r\n\r\nfunction copyXYToOldXY() {\r\n  // rebaseline control locations\r\n  for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n    newcontrols.controls[i].oldX = newcontrols.controls[i].x\r\n    newcontrols.controls[i].oldY = newcontrols.controls[i].y\r\n  }\r\n}\r\n\r\nfunction createCourseDropdown(course, courseidx) {\r\n  let idx = -1\r\n  // check against list of course names first to default to results by course\r\n  // do known courses include this course name?\r\n  // This covers \"Brown\" results mapping to a \"Brown\" course\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i].name === course) {\r\n      idx = i\r\n      break\r\n    }\r\n  }\r\n  // If we didn't match a course name then try a class name\r\n  // This covers M50 results mapping to course 3 as defined in the course XML\r\n  if (idx === -1 && mapping.length > 0) {\r\n    for (let i = 0; i < mapping.length; i += 1) {\r\n      if (mapping[i].className === course) {\r\n        // now have course name so look it up to get index\r\n        for (let j = 0; j < courses.length; j += 1) {\r\n          if (courses[j].name === mapping[i].course) {\r\n            idx = j\r\n            break\r\n          }\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n  let html = `<select id='rg2-alloc-${courseidx}' class=\"form-control form-control-sm\">`\r\n  html += `<option value=\"${config.DO_NOT_SAVE_COURSE}\"${idx === -1 ? \" selected\" : \"\"}>Do not save</option>`\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    html += `<option value=\"${i}\"${idx === i ? \" selected\" : \"\"}>${enrichCourseName(courses[i].name)}</option>`\r\n  }\r\n  html += `</select >`\r\n  return html\r\n}\r\n\r\nfunction createResultCourseMapping() {\r\n  // create a dummy result-course mapping\r\n  // to allow display of courses with no results\r\n  if (!hasResults) {\r\n    resultCourses.length = 0\r\n    for (let i = 0; i < courses.length; i += 1) {\r\n      resultCourses.push({\r\n        courseid: courses[i].courseid,\r\n        course: courses[i].name\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nfunction displayCourseAllocations() {\r\n  let html = \"\"\r\n  if (courses.length && resultCourses.length) {\r\n    html = `<div class=\"fw-bold\">Results</div><div class=\"fw-bold\">Course</div>`\r\n    for (let i = 0; i < resultCourses.length; i += 1) {\r\n      html += `<div>${resultCourses[i].course}</div>`\r\n      html += `<div>${createCourseDropdown(resultCourses[i].course, i)}</div>`\r\n    }\r\n    document.getElementById(\"rg2-course-allocations\").innerHTML = html\r\n  }\r\n}\r\n\r\nfunction displayInfoDialog(title, info) {\r\n  let dlg = {}\r\n  dlg.body = info\r\n  dlg.title = title\r\n  dlg.doText = \"Ok\"\r\n  // do nothing on close\r\n  dlg.onDo = () => {}\r\n  // false removes cancel button\r\n  createModalDialog(dlg, false)\r\n}\r\n\r\nfunction displayUnusedMaps(maps) {\r\n  let html = \"<div class='title'>ID</div><div class='title'>Name</div><div><i class='bi-trash'></i></div>\"\r\n  if (maps.length === 0) {\r\n    html += \"<div></div><div>None found.</div><div></div>\"\r\n    document.getElementById(\"btn-delete-unused-maps\").setAttribute(\"disabled\", \"\")\r\n  } else {\r\n    for (let i = 0; i < maps.length; i += 1) {\r\n      html += \"<div>\" + maps[i].mapid + \"</div>\"\r\n      html += \"<div>\" + maps[i].name + \"</div>\"\r\n      html += \"<div class='unused-map'><input type='checkbox' data-map-id=\" + maps[i].mapid + \"></div>\"\r\n    }\r\n    document.getElementById(\"btn-delete-unused-maps\").removeAttribute(\"disabled\")\r\n  }\r\n  document.getElementById(\"rg2-unused-maps\").innerHTML = html\r\n}\r\n\r\nfunction doAddMap() {\r\n  const params = { type: \"addmap\" }\r\n  newMap.localworldfile = localworldfile\r\n  const data = { ...newMap, ...user.encodeUser() }\r\n  postApi(JSON.stringify(data), params, handleMapAdded, \"Map save failed\", handleKeksi)\r\n}\r\n\r\nfunction doCreateEvent() {\r\n  const data = { ...generateNewEventData(), ...user.encodeUser() }\r\n  const params = { type: \"createevent\" }\r\n  postApi(JSON.stringify(data), params, handleEventAdded, \"Event creation failed\", handleKeksi)\r\n}\r\n\r\nfunction doDeleteEvent() {\r\n  const id = document.getElementById(\"rg2-edit-event-selected\").value\r\n  const params = { type: \"deleteevent\", id: id }\r\n  postApi(JSON.stringify(user.encodeUser()), params, handleEventDeleted, \"Event deletion failed\", handleKeksi)\r\n}\r\n\r\nfunction doDeleteRoute() {\r\n  const id = document.getElementById(\"rg2-edit-event-selected\").value\r\n  const routeid = document.getElementById(\"rg2-route-selected\").value\r\n  const params = { type: \"deleteroute\", id: id, routeid: routeid }\r\n  postApi(JSON.stringify(user.encodeUser()), params, handleRouteDeleted, \"Route delete failed\", handleKeksi)\r\n}\r\n\r\nfunction doDeleteUnusedMaps() {\r\n  let data = user.encodeUser()\r\n  data.maps = unusedMaps.filter((map) => map.delete === true).map((map) => map.mapid)\r\n  const params = { type: \"deleteunusedmaps\" }\r\n  postApi(JSON.stringify(data), params, handleUnusedMapsDeleted, \"Map deletion failed\", handleKeksi)\r\n}\r\n\r\nexport function doGetMaps() {\r\n  const params = { type: \"maps\" }\r\n  getApi(params, handleMapsLoaded, \"Events request failed\")\r\n}\r\n\r\nfunction doLogin() {\r\n  const params = { type: \"login\" }\r\n  postApi(JSON.stringify(user.encodeUser()), params, handleLoginResponse, \"Login failed\", handleKeksi)\r\n}\r\n\r\nfunction doUpdateEvent() {\r\n  const id = document.getElementById(\"rg2-edit-event-selected\").value\r\n  let data = user.encodeUser()\r\n  data.comments = document.getElementById(\"rg2-edit-event-comments\").value\r\n  data.locked = document.getElementById(\"chk-edit-read-only\").checked\r\n  data.name = document.getElementById(\"rg2-edit-event-name\").value\r\n  data.type = document.getElementById(\"rg2-edit-event-level\").value\r\n  data.eventdate = eventEditDatePicker.getDate(\"yyyy-mm-dd\")\r\n  data.club = document.getElementById(\"rg2-edit-club-name\").value\r\n  let exclude = document.getElementById(\"rg2-edit-exclude\").value.trim()\r\n  if (exclude === defaultExcludedText) {\r\n    exclude = \"\"\r\n  }\r\n  data.exclude = exclude\r\n  const params = { type: \"editevent\", id: id }\r\n  postApi(JSON.stringify(data), params, handleEventUpdated, \"Event update failed\", handleKeksi)\r\n}\r\n\r\nfunction doUploadMapFile() {\r\n  const details = user.encodeUser()\r\n  let formData = new FormData()\r\n  formData.append(mapFile.name, mapFile)\r\n  formData.append(\"name\", mapFile.name)\r\n  formData.append(\"x\", details.x)\r\n  formData.append(\"y\", details.y)\r\n\r\n  const params = {\r\n    type: \"uploadmapfile\",\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n  }\r\n  postApi(formData, params, handleMapUploaded, \"Map upload failed\", handleKeksi)\r\n}\r\n\r\nexport function drawManagerControls() {\r\n  if (mapLoaded && newcontrols.controls.length > 0) {\r\n    newcontrols.drawControls(true)\r\n    const opt = getOverprintDetails()\r\n    // locked point for control edit\r\n    if (handle.x !== null) {\r\n      ctx.lineWidth = opt.overprintWidth\r\n      ctx.strokeStyle = config.HANDLE_COLOUR\r\n      ctx.fillStyle = config.HANDLE_COLOUR\r\n      ctx.globalAlpha = 1.0\r\n\r\n      ctx.beginPath()\r\n      ctx.arc(handle.x, handle.y, config.HANDLE_DOT_RADIUS, 0, 2 * Math.PI, false)\r\n      ctx.fill()\r\n      ctx.beginPath()\r\n      ctx.arc(handle.x, handle.y, 2 * config.HANDLE_DOT_RADIUS, 0, 2 * Math.PI, false)\r\n      ctx.stroke()\r\n    }\r\n  }\r\n}\r\n\r\nexport function enableManager() {\r\n  // login tab no longer required so remove it: it is first <li>\r\n  document.querySelector(\"#rg2-info-panel-tab-headers li\").remove()\r\n  document.querySelector(\"#rg2-manage-login-tab-body\").remove()\r\n\r\n  document.getElementById(config.TAB_CREATE).classList.remove(\"d-none\")\r\n  document.getElementById(config.TAB_CREATE).click()\r\n  document.getElementById(config.TAB_EDIT).classList.remove(\"d-none\")\r\n  document.getElementById(config.TAB_MAP).classList.remove(\"d-none\")\r\n  document.getElementById(config.TAB_DELETE_MAP).classList.remove(\"d-none\")\r\n\r\n  doGetMaps()\r\n  setButtons()\r\n  document.getElementById(\"rg2-select-event-level\").innerHTML = getEventLevelDropdown()\r\n  document.getElementById(\"rg2-edit-event-level\").innerHTML = getEventLevelDropdown()\r\n  document.getElementById(\"rg2-georef-type\").innerHTML = georefsystems.getGeorefDropdown()\r\n  document.getElementById(\"rg2-select-map\").addEventListener(\"change\", (e) => {\r\n    mapIndex = parseInt(e.target.value, 10)\r\n    if (mapIndex !== config.INVALID_MAP_ID) {\r\n      loadNewMap(rg2Config.maps_url + \"/\" + maps[mapIndex].mapfilename)\r\n    } else {\r\n      mapLoaded = false\r\n      mapSize.width = 0\r\n      mapSize.height = 0\r\n    }\r\n  })\r\n\r\n  eventSelectDatePicker = new Datepicker(document.getElementById(\"rg2-select-event-date\"), {\r\n    buttonClass: \"btn\",\r\n    autohide: true,\r\n    format: \"yyyy-mm-dd\"\r\n  })\r\n\r\n  eventEditDatePicker = new Datepicker(document.getElementById(\"rg2-edit-event-date\"), {\r\n    buttonClass: \"btn\",\r\n    autohide: true,\r\n    format: \"yyyy-mm-dd\"\r\n  })\r\n\r\n  document.getElementById(\"rg2-map-name\").addEventListener(\"change\", function () {\r\n    setMapName()\r\n  })\r\n  document.getElementById(\"rg2-new-course-name\").addEventListener(\"change\", function () {\r\n    setCourseName()\r\n  })\r\n  document.getElementById(\"rg2-edit-event-selected\").addEventListener(\"change\", (e) => {\r\n    setEvent(parseInt(e.target.value, 10))\r\n  })\r\n  document.getElementById(\"rg2-georef-type\").addEventListener(\"change\", (e) => {\r\n    setGeoref(parseInt(e.target.value, 10))\r\n  })\r\n}\r\n\r\nfunction enrichCourseName(course_name) {\r\n  let classes = \"\"\r\n  if (mapping && mapping.length > 0 && isEnrichCourseNames) {\r\n    for (let j = 0; j < mapping.length; j += 1) {\r\n      const course = mapping[j].course\r\n      let class_name = \"\"\r\n      if (course === course_name) {\r\n        if (classes !== \"\") {\r\n          classes += \", \"\r\n        }\r\n        class_name = mapping[j].className\r\n        class_name = class_name.replace(/ /g, \"\")\r\n        class_name = class_name.replace(/-/g, \"\")\r\n        classes += class_name\r\n      }\r\n    }\r\n  }\r\n\r\n  if (classes !== \"\") {\r\n    return course_name + \": \" + classes\r\n  }\r\n  return course_name\r\n}\r\n\r\nfunction enrichCourseNames() {\r\n  if (!isEnrichCourseNames) {\r\n    return\r\n  }\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    courses[i].name = enrichCourseName(courses[i].name)\r\n  }\r\n}\r\n\r\nexport function eventFinishedLoading() {\r\n  const kartatid = parseInt(document.getElementById(\"rg2-edit-event-selected\").value, 10)\r\n  const event = getEventInfoForKartatID(kartatid)\r\n  // called once the requested event has loaded\r\n  document.getElementById(\"rg2-edit-event-name\").value = decode(event.name)\r\n  document.getElementById(\"rg2-edit-club-name\").value = decode(event.club)\r\n  eventEditDatePicker.setDate(event.date)\r\n  document.getElementById(\"rg2-edit-event-level\").value = event.rawtype\r\n  document.getElementById(\"rg2-edit-event-comments\").value = decode(event.comment)\r\n  if (isScoreEvent()) {\r\n    document.getElementById(\"rg2-exclude-info\").classList.add(\"d-none\")\r\n  } else {\r\n    document.getElementById(\"rg2-edit-exclude\").value = event.exclude\r\n    document.getElementById(\"rg2-exclude-info\").classList.remove(\"d-none\")\r\n  }\r\n  document.getElementById(\"chk-edit-read-only\").checked = event.locked\r\n  //setButtonState(\"enable\", [\"#btn-delete-event\", \"#btn-update-event\", \"#btn-delete-route\"])\r\n  document.getElementById(\"rg2-route-selected\").innerHTML = getRouteDeleteDropdown(event.id)\r\n}\r\n\r\nexport function eventListLoaded(events) {\r\n  // called after event list has been updated\r\n  document.getElementById(\"rg2-edit-event-selected\").innerHTML = getEventEditDropdown(events)\r\n  // unused maps get set initially when maps are loaded by the manager\r\n  // need to avoid race condition where events load before manager is initialised\r\n  // this bit is needed to deal with maps changing state when events are created or deleted\r\n  if (maps.length > 0) {\r\n    findUnusedMaps(maps)\r\n    displayUnusedMaps(unusedMaps)\r\n  }\r\n}\r\n\r\nfunction extractVariants() {\r\n  // called when saving score/relay courses\r\n  // creates all course variants once courseid has been set\r\n  variants.length = 0\r\n  let course = undefined\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    // codes here are just controls so need to add start and finish\r\n    let codes = results[i].codes\r\n    // courseid - 1 gives courses array index given how we created the array\r\n    for (let j = 0; j < courses.length; j += 1) {\r\n      if (courses[j].courseid === results[i].courseid) {\r\n        course = courses[j]\r\n        break\r\n      }\r\n    }\r\n    // add start code at start\r\n    codes.unshift(course.codes[0])\r\n    // add finish code at end\r\n    codes.push(course.codes[course.codes.length - 1])\r\n\r\n    results[i].variantid = getVariantID(results[i].codes, results[i].courseid)\r\n  }\r\n}\r\n\r\nfunction findUnusedMaps(maps) {\r\n  unusedMaps.length = 0\r\n  for (let i = 0; i < maps.length; i += 1) {\r\n    if (!mapIDIsInUse(maps[i].mapid)) {\r\n      const map = {}\r\n      map.mapid = maps[i].mapid\r\n      map.name = maps[i].name\r\n      if (map.name === \"\") {\r\n        map.name = \"(None)\"\r\n      }\r\n      map.delete = false\r\n      unusedMaps.push(map)\r\n    }\r\n  }\r\n}\r\n\r\nfunction fitControlsToMap() {\r\n  let georefOK = false\r\n  if (mapLoaded && newcontrols.controls.length > 0) {\r\n    const box = getBoundingBox()\r\n    if (coursesGeoreferenced) {\r\n      // check we are somewhere on the map\r\n      if (box.maxX < 0 || box.minX > mapSize.width || box.minY > mapSize.height || box.maxY < 0) {\r\n        // warn and fit to track\r\n        showWarningDialog(\r\n          \"Course file problem\",\r\n          \"Your course file does not match the map co-ordinates. Please check you have selected the correct file.\"\r\n        )\r\n      } else {\r\n        georefOK = true\r\n      }\r\n    }\r\n    if (georefOK) {\r\n      // lock background to prevent accidentally moving the aligned controls\r\n      // user can always unlock and adjust\r\n      backgroundLocked = true\r\n      controlsAdjusted = true\r\n      document.getElementById(\"chk-move-map-and-controls\").checked = true\r\n    } else {\r\n      // fit within the map since this is probably needed anyway\r\n      let scale = 0.8\r\n      for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n        newcontrols.controls[i].x =\r\n          (newcontrols.controls[i].x - box.minX) * (mapSize.width / box.xRange) * scale +\r\n          mapSize.width * (1 - scale) * 0.5\r\n        newcontrols.controls[i].y =\r\n          mapSize.height -\r\n          (newcontrols.controls[i].y - box.minY) * (mapSize.height / box.yRange) * scale -\r\n          mapSize.height * (1 - scale) * 0.5\r\n      }\r\n    }\r\n    copyXYToOldXY()\r\n    newcontrols.displayAllControls()\r\n  }\r\n}\r\n\r\nfunction generateNewEventData() {\r\n  let data = user.encodeUser()\r\n  data.name = document.getElementById(\"rg2-event-name\").value\r\n  data.mapid = maps[mapIndex].mapid\r\n  data.eventdate = eventSelectDatePicker.getDate(\"yyyy-mm-dd\")\r\n  data.comments = document.getElementById(\"rg2-enter-event-comments\").value\r\n  data.locked = document.getElementById(\"chk-read-only\").checked\r\n  data.club = document.getElementById(\"rg2-select-club-name\").value\r\n  if (hasResults) {\r\n    if (newEventIsScoreEvent) {\r\n      data.format = config.FORMAT_SCORE_EVENT\r\n    } else {\r\n      data.format = config.FORMAT_NORMAL\r\n    }\r\n  } else {\r\n    if (newEventIsScoreEvent) {\r\n      data.format = config.FORMAT_SCORE_EVENT_NO_RESULTS\r\n    } else {\r\n      data.format = config.FORMAT_NORMAL_NO_RESULTS\r\n    }\r\n  }\r\n  data.level = document.getElementById(\"rg2-select-event-level\").value\r\n  if (drawingCourses) {\r\n    courses.push(drawnCourse)\r\n    createResultCourseMapping()\r\n  }\r\n  setControlLocations()\r\n  mapResultsToCourses()\r\n  enrichCourseNames()\r\n  renumberResults()\r\n  if (newEventIsScoreEvent) {\r\n    extractVariants()\r\n    data.variants = variants.slice(0)\r\n  }\r\n  data.courses = courses.slice(0)\r\n  if (sortResults) {\r\n    data.results = results.slice(0).sort(sortResultItems)\r\n  } else {\r\n    data.results = results.slice(0)\r\n  }\r\n  // #485 tidy up for results files that have a finish time in the splits list\r\n  // not pretty but it will catch most of the issues\r\n  if (data.format === config.FORMAT_NORMAL) {\r\n    for (let i = 0; i < data.results.length; i += 1) {\r\n      const splits = (data.results[i].splits.match(/;/g) || []).length\r\n      // if we have one too many splits\r\n      if (splits === getControlCount(data.courses, data.results[i].courseid) + 1) {\r\n        // remove last ; and everything after it\r\n        data.results[i].splits = data.results[i].splits.substring(0, data.results[i].splits.lastIndexOf(\";\"))\r\n      }\r\n    }\r\n  }\r\n  // #386 remove unused data: partial solution to problems with POST size\r\n  for (let i = 0; i < data.results.length; i += 1) {\r\n    delete data.results[i].codes\r\n    delete data.results[i].chipid\r\n    delete data.results[i].club\r\n  }\r\n  return data\r\n}\r\n\r\nfunction getBoundingBox() {\r\n  // find bounding box for controls\r\n  let box = {}\r\n  box.minX = newcontrols.controls[0].x\r\n  box.maxX = newcontrols.controls[0].x\r\n  box.minY = newcontrols.controls[0].y\r\n  box.maxY = newcontrols.controls[0].y\r\n  for (let i = 1; i < newcontrols.controls.length; i += 1) {\r\n    box.maxX = Math.max(box.maxX, newcontrols.controls[i].x)\r\n    box.maxY = Math.max(box.maxY, newcontrols.controls[i].y)\r\n    box.minX = Math.min(box.minX, newcontrols.controls[i].x)\r\n    box.minY = Math.min(box.minY, newcontrols.controls[i].y)\r\n  }\r\n  box.xRange = box.maxX - box.minX\r\n  box.yRange = box.maxY - box.minY\r\n  return box\r\n}\r\n\r\nfunction getControlCount(courses, courseid) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i].courseid === courseid) {\r\n      return courses[i].controlcount\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getControlXY(code) {\r\n  let c = { x: 0, y: 0 }\r\n  for (let i = 0; i < newcontrols.controls.length; i += 1) {\r\n    if (newcontrols.controls[i].code === code) {\r\n      c.x = Math.round(newcontrols.controls[i].x)\r\n      c.y = Math.round(newcontrols.controls[i].y)\r\n      return c\r\n    }\r\n  }\r\n  return c\r\n}\r\n\r\nfunction getCourseIDForResult(course) {\r\n  for (let i = 0; i < resultCourses.length; i += 1) {\r\n    if (resultCourses[i].course === course) {\r\n      return resultCourses[i].courseid\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getCourseInfoAsHTML() {\r\n  let html = `<div class=\"new-courses-table\">`\r\n  if (courses.length) {\r\n    html += `<div>${t(\"Course\")}</div><div>${t(\"Name\")}</div><div>${t(\"Controls\")}</div>`\r\n    for (let i = 0; i < courses.length; i += 1) {\r\n      html += `<div>${i + 1}</div><div>${courses[i].name}</div><div>${courses[i].codes.length - 2}</div>`\r\n    }\r\n  }\r\n  html += \"</div>\"\r\n  return html\r\n}\r\n\r\nfunction getCourseName(id) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i].courseid === id) {\r\n      return courses[i].name\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getEventEditDropdown(events) {\r\n  let html = generateSelectOption(null, \"No event selected\", true)\r\n  // loop backwards so most recent event is first in list\r\n  for (let i = events.length - 1; i > -1; i -= 1) {\r\n    html += generateSelectOption(\r\n      events[i].kartatid,\r\n      events[i].kartatid + \": \" + events[i].date + \": \" + decode(events[i].name)\r\n    )\r\n  }\r\n  return html\r\n}\r\n\r\nfunction getEventLevelDropdown() {\r\n  let html = \"\"\r\n  const text = [\"Select level\", \"Training\", \"Local\", \"Regional\", \"National\", \"International\"]\r\n  const values = [\"X\", \"T\", \"L\", \"R\", \"N\", \"I\"]\r\n  for (let i = 0; i < text.length; i += 1) {\r\n    html += generateSelectOption(values[i], text[i], i === 0)\r\n  }\r\n  return html\r\n}\r\n\r\nfunction getMapDropdown(maps) {\r\n  let html = generateSelectOption(config.INVALID_MAP_ID, \"Select map\", true)\r\n  // loop backwards so most recent map is first in list\r\n  for (let i = maps.length - 1; i > -1; i -= 1) {\r\n    html += generateSelectOption(i, maps[i].mapid + \": \" + decode(maps[i].name))\r\n  }\r\n  return html\r\n}\r\n\r\nfunction getResultInfoAsHTML() {\r\n  let html = \"\"\r\n  if (results.length) {\r\n    html = `<div class=\"new-results-table\">`\r\n    let runners = 0\r\n    let oldcourse = null\r\n    for (let i = 0; i < results.length; i += 1) {\r\n      if (results[i].course !== oldcourse) {\r\n        if (oldcourse !== null) {\r\n          html += `<div>${runners}</div>`\r\n          runners = 0\r\n        }\r\n        html += `<div>${results[i].course}</div><div>${results[i].name}</div><div>${results[i].time}</div>`\r\n        oldcourse = results[i].course\r\n      }\r\n      runners += 1\r\n    }\r\n    html += `<div>${runners}</div></div>`\r\n  } else {\r\n    html = \"No valid results found.\"\r\n  }\r\n  return html\r\n}\r\n\r\nfunction getRouteDeleteDropdown(id) {\r\n  const routes = getRoutesForEvent(id)\r\n  let html = generateSelectOption(\"undefined\", \"Select route\")\r\n  for (let i = 0; i < routes.length; i += 1) {\r\n    html += generateSelectOption(\r\n      routes[i].resultid,\r\n      routes[i].resultid + \": \" + decode(routes[i].name) + \" on \" + decode(routes[i].coursename)\r\n    )\r\n  }\r\n  return html\r\n}\r\n\r\nfunction getVariantID(codes, courseid) {\r\n  // checks if a variant array of codes already exists\r\n  // adds it if it doesn't\r\n  // returns variantid\r\n  let x = []\r\n  let y = []\r\n  let id = 0\r\n  for (let i = 0; i < variants.length; i += 1) {\r\n    if (variants[i].codes.length === codes.length) {\r\n      let match = true\r\n      for (let j = 0; j < codes.length; j += 1) {\r\n        if (variants[i].codes[j] !== codes[j]) {\r\n          match = false\r\n          break\r\n        }\r\n      }\r\n      if (match) {\r\n        id = i + 1\r\n        break\r\n      }\r\n    }\r\n  }\r\n  if (id === 0) {\r\n    // didn't find a match so add a new variant\r\n    id = variants.length + 1\r\n    for (let i = 0; i < codes.length; i += 1) {\r\n      const c = getControlXY(codes[i])\r\n      x.push(c.x)\r\n      y.push(c.y)\r\n    }\r\n    variants.push({\r\n      x: x,\r\n      y: y,\r\n      id: id,\r\n      courseid: courseid,\r\n      name: \"Variant \" + id,\r\n      codes: codes\r\n    })\r\n  }\r\n\r\n  return id\r\n}\r\n\r\nfunction handleEventAdded(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(\r\n      \"Event created\",\r\n      document.getElementById(\"rg2-event-name\").value + \" has been added with id \" + response.newid + \".\"\r\n    )\r\n    // open newly created event in a separate window\r\n    window.open(rg2Config.api_url.replace(\"rg2api.php\", \"\") + \"#\" + response.newid)\r\n    doGetEvents()\r\n    setEvent()\r\n    // unused map data gets reset in eventListLoaded callback\r\n  } else {\r\n    showWarningDialog(\"Save failed\", response.status_msg + \" Failed to create event. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleEventDeleted(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Event deleted\", \"Event has been deleted.\")\r\n    doGetEvents()\r\n    setEvent()\r\n    // unused map data gets reset in eventListLoaded callback\r\n    document.getElementById(\"rg2-edit-event-selected\").replaceChildren()\r\n  } else {\r\n    showWarningDialog(\"Delete failed\", response.status_msg + \". Event delete failed. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleEventUpdated(response, kartatid) {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Event updated\", \"Event \" + kartatid + \" has been updated.\")\r\n    setActiveEventIDByKartatID(null)\r\n    setEventTitleBar()\r\n    doGetEvents()\r\n    setEvent()\r\n  } else {\r\n    showWarningDialog(\"Update failed\", response.status_msg + \". Event update failed. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleKeksi(keksi) {\r\n  user.y = keksi\r\n}\r\n\r\nfunction handleLoginResponse(response) {\r\n  if (response.ok) {\r\n    enableManager()\r\n  } else {\r\n    showWarningDialog(\"Login failed\", \"User name or password incorrect. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleMapAdded(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Map added\", response.name + \" has been added with id \" + response.newid + \".\")\r\n    // update map dropdown\r\n    doGetMaps()\r\n  } else {\r\n    showWarningDialog(\"Save failed\", response.status_msg + \". Failed to save map. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleMapUploaded(response) {\r\n  if (response.ok) {\r\n    doAddMap()\r\n  } else {\r\n    showWarningDialog(\"Upload failed\", response.status_msg + \". Failed to upload map. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleMapsLoaded(response) {\r\n  maps.length = 0\r\n  for (let i = 0; i < response.maps.length; i += 1) {\r\n    maps.push(new MapData(response.maps[i]))\r\n  }\r\n  document.getElementById(\"rg2-select-map\").innerHTML = getMapDropdown(maps)\r\n  findUnusedMaps(maps)\r\n  displayUnusedMaps(unusedMaps)\r\n}\r\n\r\nfunction handleRouteDeleted(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Route deleted\", \"Route has been deleted.\")\r\n    setActiveEventIDByKartatID(null)\r\n    setEventTitleBar()\r\n    doGetEvents()\r\n    setEvent()\r\n  } else {\r\n    showWarningDialog(\"Delete failed\", response.status_msg + \". Delete failed. Please try again.\")\r\n  }\r\n}\r\n\r\nfunction handleUnusedMapsDeleted(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(\"Maps deleted\", \"Selected maps have been deleted.\")\r\n  } else {\r\n    showWarningDialog(\"Delete failed\", response.status_msg + \". Delete failed. Please try again.\")\r\n  }\r\n  doGetMaps()\r\n}\r\n\r\nfunction hasZeroTime(time) {\r\n  if (time === 0 || time === \"0\" || time === \"0:00\" || time === \"00:00\") {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nfunction initialiseData() {\r\n  newcontrols = new Controls()\r\n  mapIndex = config.INVALID_MAP_ID\r\n  format = config.FORMAT_NORMAL\r\n  newEventIsScoreEvent = false\r\n  hasResults = true\r\n  courses = []\r\n  mapping = []\r\n  isEnrichCourseNames = false\r\n  mapLoaded = false\r\n  coursesGeoreferenced = false\r\n  controlsAdjusted = false\r\n  drawingCourses = false\r\n  drawnCourse = {}\r\n  results = []\r\n  variants = []\r\n  resultCourses = []\r\n  mapSize = { height: 0, width: 0 }\r\n  resultsOrCourseFile = undefined\r\n  resultsFileFormat = \"\"\r\n  backgroundLocked = false\r\n  sortResults = false\r\n  handle = { x: null, y: null }\r\n}\r\n\r\nfunction initialiseEncodings() {\r\n  encodingIndex = 0\r\n  errorCount = []\r\n  useThisEncoding = false\r\n}\r\n\r\nexport function initialiseManager(keksi) {\r\n  user = new User(keksi)\r\n  georefmap = L.map(\"rg2-world-file-map\")\r\n  initialiseData()\r\n  initialiseLocationMap()\r\n  document.getElementById(\"rg2-manager-login-form\").addEventListener(\"submit\", (e) => {\r\n    // submission handled here so don't need default form handling\r\n    e.preventDefault()\r\n    const validUser = user.setDetails(\"rg2-user-name\", \"rg2-password\")\r\n    if (validUser) {\r\n      doLogin()\r\n    } else {\r\n      showWarningDialog(\"Login failed\", \"Please enter user name and password of at least five characters\")\r\n    }\r\n  })\r\n}\r\n\r\nfunction initialiseLocationMap() {\r\n  L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n    maxZoom: 19,\r\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n  }).addTo(georefmap)\r\n  document.getElementById(\"rg2-world-file-map-container\").classList.remove(\"d-none\")\r\n}\r\n\r\nexport function managerDragEnded() {\r\n  // console.log(\"Drag ended\")\r\n  if (mapLoaded && newcontrols.controls.length > 0) {\r\n    // rebaseline control locations\r\n    copyXYToOldXY()\r\n  }\r\n}\r\n\r\nexport function managerMapLoadCallback() {\r\n  //callback when map image is loaded\r\n  mapLoaded = true\r\n  if (mapIndex !== config.INVALID_MAP_ID) {\r\n    localworldfile = maps[mapIndex].localworldfile\r\n    worldfile = maps[mapIndex].worldfile\r\n  }\r\n  mapSize = getMapSize()\r\n  fitControlsToMap()\r\n  redraw()\r\n}\r\n\r\nexport function managerMouseUp(x, y) {\r\n  // console.log(\"Mouse up \",x, y)\r\n  if (drawingCourses) {\r\n    addNewControl(x, y)\r\n    controlsAdjusted = true\r\n    return\r\n  }\r\n  if (mapLoaded && newcontrols.controls.length > 0) {\r\n    // adjusting the track\r\n    if (handle.x === null) {\r\n      handle = { x: x, y: y }\r\n    } else {\r\n      handle = { x: null, y: null }\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapResultsToCourses() {\r\n  // read through dropdowns and allocate courseid for each required course\r\n  // also delete unwanted courses\r\n  let newCourses = []\r\n  // courseid historically starts at 1 just to cause endless indexing problems\r\n  let courseid = 1\r\n  for (let i = 0; i < resultCourses.length; i += 1) {\r\n    let id = undefined\r\n    if (drawingCourses) {\r\n      // only handles one course at present, so it is always 0\r\n      id = 0\r\n    } else {\r\n      const selector = document.getElementById(\"rg2-alloc-\" + i)\r\n      if (selector) {\r\n        id = parseInt(selector.value, 10)\r\n      }\r\n    }\r\n    if (id !== undefined && id !== config.DO_NOT_SAVE_COURSE) {\r\n      // check we haven't already saved this course\r\n      if (courses[id].courseid === 0) {\r\n        courses[id].courseid = courseid\r\n        newCourses.push(courses[id])\r\n        resultCourses[i].courseid = courseid\r\n        courseid += 1\r\n      } else {\r\n        resultCourses[i].courseid = courses[id].courseid\r\n      }\r\n    }\r\n  }\r\n  courses = newCourses\r\n}\r\n\r\nfunction processCourseFile(e) {\r\n  coursesGeoreferenced = false\r\n  backgroundLocked = false\r\n  document.getElementById(\"chk-move-map-and-controls\").checked = false\r\n  handle = { x: null, y: null }\r\n  newcontrols.deleteAllControls()\r\n  const parsedCourses = new CourseParser(e, worldfile, localworldfile)\r\n  courses = parsedCourses.courses\r\n  if (courses.length > 0) {\r\n    newcontrols = parsedCourses.newcontrols\r\n    mapping = parsedCourses.mapping\r\n    if (mapping.length > 0) {\r\n      document.getElementById(\"chk-enrich-course-names\").classList.remove(\"d-none\")\r\n    } else {\r\n      document.getElementById(\"chk-enrich-course-names\").classList.add(\"d-none\")\r\n    }\r\n    coursesGeoreferenced = parsedCourses.georeferenced\r\n    displayInfoDialog(\"Course details\", getCourseInfoAsHTML())\r\n    createResultCourseMapping()\r\n    displayCourseAllocations()\r\n    fitControlsToMap()\r\n  }\r\n  redraw()\r\n}\r\n\r\nfunction processMap(e) {\r\n  // called to load a new map locally rather than from server when creating a new map\r\n  loadNewMap(e.target.result, true)\r\n  document.getElementById(\"rg2-load-map-file\").classList.add(\"is-valid\")\r\n  mapLoaded = true\r\n  mapSize = getMapSize()\r\n  fitControlsToMap()\r\n  redraw()\r\n  document.getElementById(\"btn-add-map\").removeAttribute(\"disabled\")\r\n}\r\n\r\nfunction processResultFile(e) {\r\n  const parsedResults = new ResultParser(e, resultsFileFormat)\r\n  results = parsedResults.results\r\n  if (results.length > 0) {\r\n    resultCourses = parsedResults.resultCourses\r\n    displayInfoDialog(\"Result details\", getResultInfoAsHTML())\r\n    displayCourseAllocations()\r\n  }\r\n}\r\n\r\nfunction readCourses(e) {\r\n  let reader = new FileReader()\r\n  reader.onerror = function () {\r\n    showWarningDialog(\"Course file error\", \"The selected course file could not be read.\")\r\n  }\r\n\r\n  reader.onload = function (e) {\r\n    processCourseFile(e)\r\n  }\r\n  //\r\n  // TODO: input charset should be set based on RG_FILE_ENCODING variable\r\n  // reader.readAsText(e.target.files[0], 'ISO-8859-1')\r\n  reader.readAsText(e.target.files[0])\r\n}\r\n\r\nfunction readGeorefFile(e) {\r\n  const reader = new FileReader()\r\n  try {\r\n    reader.readAsText(e.target.files[0])\r\n  } catch (err) {\r\n    showWarningDialog(\"File read error\", \"Failed to open selected world file.\")\r\n    return\r\n  }\r\n  reader.onerror = function () {\r\n    showWarningDialog(\"World file error\", \"The selected world file could not be read.\")\r\n  }\r\n  reader.onload = function (e) {\r\n    // see http://en.wikipedia.org/wiki/World_file\r\n    const txt = e.target.result\r\n    const args = txt.split(/[\\r\\n]+/g)\r\n    localworldfile = new Worldfile({\r\n      A: args[0],\r\n      B: args[2],\r\n      C: args[4],\r\n      D: args[1],\r\n      E: args[3],\r\n      F: args[5]\r\n    })\r\n    const defaultGeorefValue = georefsystems.getDefaultValue()\r\n    document.getElementById(\"rg2-georef-type\").value = defaultGeorefValue\r\n    convertWorldFile(defaultGeorefValue)\r\n  }\r\n}\r\n\r\nfunction readMapFile(e) {\r\n  const reader = new FileReader()\r\n  reader.onload = function (e) {\r\n    processMap(e)\r\n  }\r\n  const format = e.target.files[0].name.substr(-3, 3).toUpperCase()\r\n  if (format === \"JPG\" || format === \"GIF\") {\r\n    mapFile = e.target.files[0]\r\n    reader.readAsDataURL(e.target.files[0])\r\n  } else {\r\n    showWarningDialog(\r\n      \"File type error\",\r\n      e.target.files[0].name + \" is not recognised. Only .jpg and .gif files are supported at present.\"\r\n    )\r\n  }\r\n}\r\n\r\nfunction readResults() {\r\n  let reader = new FileReader()\r\n\r\n  reader.onerror = function () {\r\n    showWarningDialog(\"Results file error\", \"The selected results file could not be read.\")\r\n  }\r\n  reader.onload = function (e) {\r\n    checkResultsFileEncoding(e)\r\n  }\r\n  format = resultsOrCourseFile.name.substr(-3, 3).toUpperCase()\r\n  if (format === \"XML\" || format === \"CSV\") {\r\n    resultsFileFormat = format\r\n    reader.readAsText(resultsOrCourseFile, encodings[encodingIndex])\r\n  } else {\r\n    showWarningDialog(\"File type error\", \"Results file type is not recognised. Please select a valid file.\")\r\n  }\r\n}\r\n\r\nfunction renumberResults() {\r\n  // updates the course id and name when we know the mapping\r\n  // and deletes results for courses not required\r\n  let newResults = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const id = getCourseIDForResult(results[i].course)\r\n    if (id !== config.DO_NOT_SAVE_COURSE) {\r\n      results[i].courseid = id\r\n      results[i].course = getCourseName(id)\r\n      // set null here: overwritten later in extractVariants if this is a variant\r\n      results[i].variantid = \"\"\r\n      newResults.push(results[i])\r\n    }\r\n  }\r\n  results = newResults\r\n}\r\n\r\nfunction setButtons() {\r\n  document.getElementById(\"btn-create-event\").addEventListener(\"click\", (e) => {\r\n    confirmCreateEvent(e)\r\n  })\r\n  document.getElementById(\"btn-update-event\").addEventListener(\"click\", (e) => {\r\n    confirmUpdateEvent(e)\r\n  })\r\n\r\n  document.getElementById(\"btn-delete-route\").addEventListener(\"click\", (e) => {\r\n    confirmDeleteRoute(e)\r\n  })\r\n  document.getElementById(\"btn-delete-event\").addEventListener(\"click\", (e) => {\r\n    confirmDeleteEvent(e)\r\n  })\r\n  document.getElementById(\"btn-add-map\").addEventListener(\"click\", (e) => {\r\n    confirmAddMap(e)\r\n  })\r\n  document.getElementById(\"btn-delete-unused-maps\").addEventListener(\"click\", (e) => {\r\n    confirmDeleteUnusedMaps(e)\r\n  })\r\n  document.getElementById(\"btn-draw-courses\").addEventListener(\"click\", (e) => {\r\n    startDrawingCourses(e)\r\n  })\r\n  document.getElementById(\"rg2-load-georef-file\").addEventListener(\"input\", (e) => {\r\n    readGeorefFile(e)\r\n  })\r\n  document.getElementById(\"rg2-load-map-file\").addEventListener(\"input\", (e) => {\r\n    validateMapUpload(e.target.files[0])\r\n    readMapFile(e)\r\n  })\r\n  const loadResults = document.getElementById(\"rg2-load-results-file\")\r\n  loadResults.addEventListener(\"click\", (e) => {\r\n    if (!mapLoaded) {\r\n      showWarningDialog(\"No map loaded\", \"Please load a map file before adding results.\")\r\n      e.preventDefault()\r\n    }\r\n  })\r\n  loadResults.addEventListener(\"change\", (e) => {\r\n    resultsOrCourseFile = e.target.files[0]\r\n    initialiseEncodings()\r\n    readResults()\r\n  })\r\n  document.getElementById(\"chk-move-map-and-controls\").addEventListener(\"click\", (e) => {\r\n    toggleMoveAll(e.target.checked)\r\n  })\r\n  document.getElementById(\"chk-no-results\").addEventListener(\"click\", (e) => {\r\n    toggleResultsRequired(e.target.checked)\r\n  })\r\n  document.getElementById(\"chk-score-event\").addEventListener(\"click\", (e) => {\r\n    toggleScoreEvent(e.target.checked)\r\n  })\r\n  document.getElementById(\"chk-enrich-course-names\").addEventListener(\"click\", (e) => {\r\n    toggleEnrichCourseNames(e.target.checked)\r\n  })\r\n  document.getElementById(\"chk-sort-results\").addEventListener(\"click\", (e) => {\r\n    toggleSortResults(e.target.checked)\r\n  })\r\n  const load = document.getElementById(\"rg2-load-course-file\")\r\n  load.addEventListener(\"click\", (e) => {\r\n    if (!mapLoaded) {\r\n      showWarningDialog(\"No map loaded\", \"Please load a map file before adding courses.\")\r\n      e.preventDefault()\r\n    }\r\n  })\r\n  load.addEventListener(\"change\", (e) => {\r\n    readCourses(e)\r\n  })\r\n}\r\n\r\nfunction setControlLocations() {\r\n  // called when saving courses\r\n  // reads control locations and updates course details\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    for (let j = 0; j < courses[i].codes.length; j += 1) {\r\n      const c = getControlXY(courses[i].codes[j])\r\n      courses[i].x[j] = c.x\r\n      courses[i].y[j] = c.y\r\n    }\r\n  }\r\n}\r\n\r\nfunction setCourseName() {\r\n  const course = document.getElementById(\"rg2-new-course-name\").value\r\n  if (course) {\r\n    drawnCourse.name = course\r\n  }\r\n}\r\n\r\nfunction setEvent(kartatid) {\r\n  if (kartatid) {\r\n    loadEventByKartatID(kartatid)\r\n  } else {\r\n    // no event selected so initialise everything\r\n    initialiseData()\r\n    document.getElementById(\"rg2-edit-event-name\").value = \"\"\r\n    document.getElementById(\"rg2-edit-club-name\").value = \"\"\r\n    eventEditDatePicker.setDate(\"\")\r\n    document.getElementById(\"rg2-edit-event-level\").value = \"\"\r\n    document.getElementById(\"rg2-edit-event-comments\").value = \"\"\r\n    document.getElementById(\"rg2-edit-exclude\").value = defaultExcludedText\r\n    document.getElementById(\"rg2-route-selected\").replaceChildren()\r\n    document.getElementById(\"chk-edit-read-only\").checked = false\r\n    document.getElementById(\"rg2-course-allocations\").innerHTML = \"\"\r\n  }\r\n}\r\n\r\nfunction setGeoref(optionValue) {\r\n  if (optionValue !== 0) {\r\n    convertWorldFile(optionValue)\r\n  }\r\n}\r\n\r\nfunction setMapName() {\r\n  newMap.name = document.getElementById(\"rg2-map-name\").value\r\n  validateValue(\"rg2-map-name\", (value) => {\r\n    // at least one character\r\n    return /./.test(value)\r\n  })\r\n}\r\n\r\nfunction sortResultItems(a, b) {\r\n  // called after final courseids allocated so this is safe\r\n  if (a.courseid !== b.courseid) {\r\n    return a.courseid - b.courseid\r\n  }\r\n  if (a.position !== \"\" && b.position !== \"\") {\r\n    // sort by position, if available\r\n    return a.position - b.position\r\n  }\r\n  if (a.position === \"\" && b.position !== \"\") {\r\n    return 1\r\n  }\r\n  if (a.position !== \"\" && b.position === \"\") {\r\n    return -1\r\n  }\r\n  // sort by time, if available\r\n  if (hasZeroTime(a.time) && hasZeroTime(b.time)) {\r\n    // sort by name, when no time\r\n    return a.name - b.name\r\n  }\r\n  return a.time - b.time\r\n}\r\n\r\nfunction startDrawingCourses() {\r\n  if (mapLoaded) {\r\n    drawingCourses = true\r\n    courses.length = 0\r\n    newcontrols.deleteAllControls()\r\n    drawnCourse.name = \"Course\"\r\n    drawnCourse.x = []\r\n    drawnCourse.y = []\r\n    drawnCourse.codes = []\r\n    drawnCourse.courseid = 0\r\n    document.getElementById(\"rg2-new-course-name\").value\r\n    document.getElementById(\"rg2-draw-courses\").classList.remove(\"d-none\")\r\n  } else {\r\n    showWarningDialog(\"No map selected\", \"Please load a map before drawing courses\")\r\n  }\r\n}\r\n\r\nfunction testForInvalidCharacters(rawtext) {\r\n  // takes in text read from a results file and checks it has converted to UTF-8 correctly\r\n  let count = 0\r\n  for (let i = 0; i < rawtext.length; i += 1) {\r\n    // Unicode U+FFFD (65533) is the replacement character used to replace an incoming character whose value is unknown or unrepresentable\r\n    // see http://www.fileformat.info/info/unicode/char/0fffd/index.htm\r\n    if (rawtext.charCodeAt(i) === 65533) {\r\n      count += 1\r\n    }\r\n  }\r\n  return count\r\n}\r\n\r\nfunction toggleEnrichCourseNames(checked) {\r\n  isEnrichCourseNames = checked\r\n  displayCourseAllocations()\r\n}\r\n\r\n// locks or unlocks background when adjusting map\r\nfunction toggleMoveAll(checkedState) {\r\n  backgroundLocked = checkedState\r\n}\r\n\r\nfunction toggleResultsRequired(checked) {\r\n  // check box checked means event does not have results\r\n  hasResults = !checked\r\n  createResultCourseMapping()\r\n  displayCourseAllocations()\r\n}\r\n\r\nfunction toggleScoreEvent(checked) {\r\n  newEventIsScoreEvent = checked\r\n}\r\n\r\nfunction toggleSortResults(checkedState) {\r\n  sortResults = checkedState\r\n}\r\n\r\nfunction updateGeorefMap() {\r\n  // Plot a polygon and recentre the map on the polygon\r\n  const lon = newMap.lon\r\n  const lat = newMap.lat\r\n  //console.log(newMap)\r\n  let poly_coords = []\r\n  // For some reason this is the order the coordinates are stored in.\r\n  const indices = [3, 1, 2, 0]\r\n  indices.forEach(function (i) {\r\n    poly_coords.push([lat[i], lon[i]])\r\n  })\r\n  const poly = L.polygon(poly_coords, { color: \"red\" })\r\n  poly.addTo(georefmap)\r\n  document.getElementById(\"rg2-world-file-map-container\").classList.remove(\"d-none\")\r\n  georefmap.invalidateSize()\r\n  georefmap.fitBounds(poly.getBounds())\r\n}\r\n\r\nfunction validateData() {\r\n  if (document.getElementById(\"rg2-event-name\").value === \"\") {\r\n    return \"Event name is not valid.\"\r\n  }\r\n  if (mapIndex === config.INVALID_MAP_ID) {\r\n    return \"No map selected.\"\r\n  }\r\n  if (document.getElementById(\"rg2-select-club-name\").value === \"\") {\r\n    return \"Club name is not valid.\"\r\n  }\r\n  if (eventSelectDatePicker.getDate(\"yyyy-mm-dd\") === undefined) {\r\n    return \"Date is not valid.\"\r\n  }\r\n  if (document.getElementById(\"rg2-select-event-level\").value === \"X\") {\r\n    return \"Event level is not valid.\"\r\n  }\r\n  if (!format) {\r\n    return \"Event format is not valid.\"\r\n  }\r\n  if (courses.length === 0) {\r\n    if (!drawingCourses) {\r\n      return \"No course information. Check your course XML file.\"\r\n    }\r\n  }\r\n  if (results.length === 0) {\r\n    if (hasResults) {\r\n      return \"No results information. Check your results file.\"\r\n    }\r\n  }\r\n  if (!controlsAdjusted) {\r\n    return \"Controls have not been adjusted on the map.\"\r\n  }\r\n  return \"OK\"\r\n}\r\n\r\nfunction validateMapUpload(upload) {\r\n  let reader = new FileReader()\r\n  reader.onload = function (e) {\r\n    let image = new Image()\r\n    image.src = e.target.result\r\n    image.onload = function () {\r\n      const size = Math.round(upload.size / 1024 / 1024)\r\n      if (\r\n        size > config.FILE_SIZE_WARNING ||\r\n        image.height > config.PIXEL_SIZE_WARNING ||\r\n        image.width > config.PIXEL_SIZE_WARNING\r\n      ) {\r\n        let msg = \"The uploaded map file is \" + size + \"MB (\" + image.width\r\n        msg += \" x \" + image.height + \"px). It is recommended that you use maps under \" + config.FILE_SIZE_WARNING\r\n        msg += \"MB with a maximum dimension of \" + config.PIXEL_SIZE_WARNING + \"px. Please see the \"\r\n        msg += \"<a href='https://github.com/Maprunner/rg2/wiki/Map-files'>RG2 wiki</a> for \"\r\n        msg += \"guidance on how to create map files.\"\r\n        showWarningDialog(\"Oversized map upload\", msg)\r\n      }\r\n    }\r\n  }\r\n  reader.readAsDataURL(upload)\r\n}\r\n","import { ctx } from \"./canvas\"\r\nimport { config, options, getOverprintDetails } from \"./config\"\r\nimport { controls, getCourseDetails, incrementTracksCount, drawLinesBetweenControls } from \"./courses\"\r\nimport { getMetresPerPixel } from \"./events\"\r\nimport { decode } from \"html-entities\"\r\nimport { getTimeAndSplitsForID } from \"./results\"\r\nimport { getAngle, getDistanceBetweenPoints, getNextTrackColour } from \"./utils\"\r\n\r\nexport class Result {\r\n  constructor(data, isScoreEvent, scorecodes, scorex, scorey) {\r\n    // resultid is the kartat id value\r\n    this.resultid = data.resultid\r\n    this.rawid = this.resultid % config.GPS_RESULT_OFFSET\r\n    this.isScoreEvent = isScoreEvent\r\n    this.name = decode(data.name).trim()\r\n    this.initials = this.getInitials(this.name)\r\n    this.starttime = data.starttime\r\n    this.time = data.time\r\n    if (this.time === \"00\" || this.time === \"0\") {\r\n      this.time = \"\"\r\n    }\r\n    this.timeInSecs = data.secs\r\n    this.position = data.position\r\n    this.status = data.status\r\n    this.canDelete = false\r\n    this.showResult = true\r\n    this.token = 0\r\n    // get round iconv problem in API for now: unescape special characters to get sensible text\r\n    if (data.comments) {\r\n      this.comments = decode(data.comments)\r\n    } else {\r\n      this.comments = \"\"\r\n    }\r\n    this.coursename = data.coursename\r\n    if (this.coursename === \"\") {\r\n      // need to force this to be a string for use elsewhere\r\n      this.coursename = data.courseid.toString()\r\n    }\r\n    this.courseid = data.courseid\r\n    this.variant = data.variant\r\n    this.splits = this.adjustRawSplits(data.splits)\r\n    if (this.isScoreEvent) {\r\n      // save control locations for score course result\r\n      this.scorex = scorex\r\n      this.scorey = scorey\r\n      this.scorecodes = scorecodes\r\n    }\r\n    // colours set when track is displayed\r\n    this.trackColour = null\r\n    this.userColour = null\r\n    this.initialiseTrack(data)\r\n  }\r\n\r\n  addInterpolatedTimes(startindex, endindex, cumulativeDistance) {\r\n    // add interpolated time at each point based on cumulative distance; this assumes uniform speed...\r\n    const oldt = this.xysecs[startindex]\r\n    const deltat = this.xysecs[endindex] - oldt\r\n    const olddist = cumulativeDistance[startindex]\r\n    const deltadist = cumulativeDistance[endindex] - olddist\r\n    for (let i = startindex; i <= endindex; i += 1) {\r\n      this.xysecs[i] = oldt + Math.round(((cumulativeDistance[i] - olddist) * deltat) / deltadist)\r\n    }\r\n  }\r\n\r\n  addTrack(data) {\r\n    this.trackx = data.x.split(\",\").map(function (n) {\r\n      return parseInt(n, 10)\r\n    })\r\n    this.tracky = data.y.split(\",\").map(function (n) {\r\n      return parseInt(n, 10)\r\n    })\r\n    // co-ords sent as differences, so recreate absolute values\r\n    for (let i = 1; i < this.trackx.length; i += 1) {\r\n      this.trackx[i] = this.trackx[i - 1] + this.trackx[i]\r\n      this.tracky[i] = this.tracky[i - 1] + this.tracky[i]\r\n    }\r\n    let trackOK\r\n    if (this.isGPSTrack) {\r\n      trackOK = this.expandGPSTrack()\r\n    } else {\r\n      // handle events that just have a start and finish time\r\n      if (this.splits.length === 2) {\r\n        trackOK = this.expandTrackWithNoSplits()\r\n      } else {\r\n        trackOK = this.expandNormalTrack()\r\n      }\r\n    }\r\n    if (trackOK) {\r\n      incrementTracksCount(this.courseid)\r\n    }\r\n  }\r\n\r\n  adjustRawSplits(rawSplits) {\r\n    // insert a 0 split at the start to make life much easier elsewhere\r\n    rawSplits.splice(0, 0, 0)\r\n    // splits are time in seconds at control, but may have 0 for missing controls\r\n    // make life easier elsewhere by replacing 0 with time at previous valid control\r\n    for (let i = 1; i < rawSplits.length; i += 1) {\r\n      // also allow for negative splits\r\n      if (rawSplits[i] <= 0) {\r\n        rawSplits[i] = rawSplits[i - 1]\r\n      }\r\n    }\r\n    // for some excluded events the finish split is unadjusted (bug in results system?)\r\n    // so safer to copy in running time\r\n    // ...but don't get any slower than we already are (random missing splits or something)\r\n    rawSplits[rawSplits.length - 1] = Math.max(this.timeInSecs, rawSplits[rawSplits.length - 2])\r\n    return rawSplits\r\n  }\r\n\r\n  calculateTotalTrackLength() {\r\n    // read through track to find total distance\r\n    let cumulativeDistance = []\r\n    cumulativeDistance[0] = 0\r\n    let oldx = this.trackx[0]\r\n    let oldy = this.tracky[0]\r\n    for (let i = 1; i < this.trackx.length; i += 1) {\r\n      cumulativeDistance[i] =\r\n        cumulativeDistance[i - 1] + Math.round(getDistanceBetweenPoints(this.trackx[i], this.tracky[i], oldx, oldy))\r\n      oldx = this.trackx[i]\r\n      oldy = this.tracky[i]\r\n    }\r\n    return cumulativeDistance\r\n  }\r\n\r\n  calculateTrackTimes(course) {\r\n    let cumulativeDistance = []\r\n    cumulativeDistance[0] = 0\r\n    let nextcontrol = this.getNextValidControl(0)\r\n    let nextx = course.x[nextcontrol]\r\n    let nexty = course.y[nextcontrol]\r\n    let dist = 0\r\n    let oldx = this.trackx[0]\r\n    let oldy = this.tracky[0]\r\n    let x = 0\r\n    let y = 0\r\n    let previouscontrolindex = 0\r\n    // read through list of controls and copy in split times\r\n    // we are assuming the track starts at the start which is index 0...\r\n    // look at each track point and see if it matches the next control location\r\n    for (let i = 1; i < this.trackx.length; i += 1) {\r\n      // calculate distance while we are looping through\r\n      x = this.trackx[i]\r\n      y = this.tracky[i]\r\n      dist += getDistanceBetweenPoints(x, y, oldx, oldy)\r\n      cumulativeDistance[i] = Math.round(dist)\r\n      oldx = x\r\n      oldy = y\r\n      // track ends at control\r\n      if (nextx === x && nexty === y) {\r\n        this.xysecs[i] = this.splits[nextcontrol]\r\n        this.addInterpolatedTimes(previouscontrolindex, i, cumulativeDistance)\r\n        previouscontrolindex = i\r\n        nextcontrol = this.getNextValidControl(nextcontrol)\r\n        if (nextcontrol === course.x.length) {\r\n          // we have found all the controls\r\n          this.hasValidTrack = true\r\n          break\r\n        }\r\n        nextx = course.x[nextcontrol]\r\n        nexty = course.y[nextcontrol]\r\n      }\r\n    }\r\n  }\r\n\r\n  drawScoreCourse() {\r\n    // draws a score course for an individual runner to show where they went\r\n    // based on drawCourse in course.js\r\n    // could refactor in future...\r\n    // > 1 since we need at least a start and finish to draw something\r\n    if (this.displayScoreCourse && this.scorex.length > 1) {\r\n      const opt = getOverprintDetails()\r\n      ctx.globalAlpha = config.FULL_INTENSITY\r\n      let angle = getAngle(this.scorex[0], this.scorey[0], this.scorex[1], this.scorey[1])\r\n      controls.drawStart(this.scorex[0], this.scorey[0], \"\", angle, opt)\r\n      angle = []\r\n      for (let i = 0; i < this.scorex.length - 1; i += 1) {\r\n        angle[i] = getAngle(this.scorex[i], this.scorey[i], this.scorex[i + 1], this.scorey[i + 1])\r\n      }\r\n      // draw all controls for a score course: too complicated to filter individuals\r\n      const filter = { from: 0, to: this.scorex.length }\r\n      drawLinesBetweenControls({ x: this.scorex, y: this.scorey }, angle, this.courseid, opt, filter)\r\n      for (let i = 1; i < this.scorex.length - 1; i += 1) {\r\n        controls.drawSingleControl(this.scorex[i], this.scorey[i], i, Math.PI * 0.25, opt)\r\n      }\r\n      controls.drawFinish(this.scorex[this.scorex.length - 1], this.scorey[this.scorey.length - 1], \"\", opt)\r\n    }\r\n  }\r\n\r\n  drawTrack(filter) {\r\n    // lots of scope for problems drawing incomplete results so just trap and move on\r\n    try {\r\n      let oldx, oldy, stopCount\r\n      if (this.displayTrack) {\r\n        if (this.isGPSTrack && options.showGPSSpeed && this.speedColour.length === 0) {\r\n          // set speed colours if we haven't done it yet\r\n          this.setSpeedColours()\r\n        }\r\n        let startIndex = 0\r\n        let endIndex = this.xysecs.length\r\n        const fromSplit = this.splits[filter.filterFrom]\r\n        const toSplit = this.splits[filter.filterTo]\r\n        // attempt at loop optimisation since drawing is quite slow...\r\n        for (let f = 0; f < this.xysecs.length; f += 1) {\r\n          if (this.xysecs[f] >= fromSplit) {\r\n            startIndex = f\r\n            break\r\n          }\r\n        }\r\n        for (let f = this.xysecs.length - 1; f >= 0; f -= 1) {\r\n          if (this.xysecs[f] <= toSplit) {\r\n            endIndex = f\r\n            break\r\n          }\r\n        }\r\n        ctx.lineWidth = options.routeWidth\r\n        ctx.strokeStyle = this.trackColour\r\n        ctx.globalAlpha = options.perCentRouteIntensity / 100\r\n        ctx.fillStyle = this.trackColour\r\n        ctx.font = \"10pt Arial\"\r\n        ctx.textAlign = \"left\"\r\n        ctx.beginPath()\r\n        ctx.moveTo(this.trackx[startIndex], this.tracky[startIndex])\r\n        oldx = this.trackx[startIndex]\r\n        oldy = this.tracky[startIndex]\r\n        stopCount = 0\r\n        for (let i = startIndex + 1; i <= endIndex; i += 1) {\r\n          // lines\r\n          ctx.lineTo(this.trackx[i], this.tracky[i])\r\n          if (this.trackx[i] === oldx && this.tracky[i] === oldy) {\r\n            // we haven't moved\r\n            stopCount += 1\r\n          } else {\r\n            // we have started moving again\r\n            if (stopCount > 0) {\r\n              if (!this.isGPSTrack || (this.isGPSTrack && options.showThreeSeconds)) {\r\n                ctx.fillText(\"+\" + 3 * stopCount, oldx + 5, oldy + 5)\r\n              }\r\n              stopCount = 0\r\n            }\r\n          }\r\n          oldx = this.trackx[i]\r\n          oldy = this.tracky[i]\r\n          if (this.isGPSTrack && options.showGPSSpeed) {\r\n            // draw partial track since we need to keep changing colour\r\n            ctx.strokeStyle = this.speedColour[i]\r\n            ctx.stroke()\r\n            ctx.beginPath()\r\n            ctx.moveTo(oldx, oldy)\r\n          }\r\n        }\r\n        ctx.stroke()\r\n      }\r\n    } catch (e) {\r\n      //  console.log(\"Problem drawing track for result ID \" + this.resultid)\r\n      return\r\n    }\r\n  }\r\n\r\n  expandGPSTrack() {\r\n    // in theory we get one point every three seconds\r\n    for (let t = 0; t < this.trackx.length; t += 1) {\r\n      this.xysecs[t] = 3 * t\r\n    }\r\n    // colours now set the first time we try to draw the track: major time saving on initial event load\r\n    this.speedColour.length = 0\r\n    this.hasValidTrack = true\r\n    return this.hasValidTrack\r\n  }\r\n\r\n  expandNormalTrack() {\r\n    // allow for getting two tracks for same result: should have been filtered in API...\r\n    this.xysecs.length = 0\r\n    // add times and distances at each position\r\n    this.xysecs[0] = 0\r\n    // get course details\r\n    let course = {}\r\n    // each person has their own defined score course\r\n    if (this.isScoreEvent) {\r\n      course.x = this.scorex\r\n      course.y = this.scorey\r\n    } else {\r\n      course = getCourseDetails(this.courseid)\r\n    }\r\n    this.calculateTrackTimes(course)\r\n    // treat all score tracks as valid for now\r\n    // may need a complete rethink on score course handling later\r\n    if (this.isScoreEvent) {\r\n      this.hasValidTrack = true\r\n    }\r\n    return this.hasValidTrack\r\n  }\r\n\r\n  expandTrackWithNoSplits() {\r\n    // based on ExpandNormalTrack, but deals with event format 2: no results\r\n    // this means we have a course and a finish time but no split times\r\n    this.xysecs.length = 0\r\n    // only have finish time, which is in [1] at present\r\n    const totaltime = this.splits[1]\r\n    let currenttime = 0\r\n    this.xysecs[0] = 0\r\n    // get course details: can't be a score course since they aren't supported for format 2\r\n    const course = {}\r\n    course.x = getCourseDetails(this.courseid).x\r\n    course.y = getCourseDetails(this.courseid).y\r\n    let nextcontrol = 1\r\n    let nextx = course.x[nextcontrol]\r\n    let nexty = course.y[nextcontrol]\r\n    let lastx = course.x[course.x.length - 1]\r\n    let lasty = course.y[course.y.length - 1]\r\n    // add finish location to track just in case...\r\n    this.trackx.push(lastx)\r\n    this.tracky.push(lasty)\r\n    let previouscontrolindex = 0\r\n    const cumulativeDistance = this.calculateTotalTrackLength()\r\n    const totaldist = cumulativeDistance[cumulativeDistance.length - 1]\r\n    // read through track to generate splits\r\n    let x = 0\r\n    let y = 0\r\n    let moved = false\r\n    for (let i = 1; i < this.trackx.length; i += 1) {\r\n      x = this.trackx[i]\r\n      y = this.tracky[i]\r\n      // cope with routes that have start and finish in same place, and where the first point in a route is a repeat of the start\r\n      if (x !== this.trackx[0] || y !== this.tracky[0]) {\r\n        moved = true\r\n      }\r\n      // track ends at control, as long as we have moved away from the start\r\n      if (nextx === x && nexty === y && moved) {\r\n        currenttime = parseInt((cumulativeDistance[i] / totaldist) * totaltime, 10)\r\n        this.xysecs[i] = currenttime\r\n        this.splits[nextcontrol] = currenttime\r\n        this.addInterpolatedTimes(previouscontrolindex, i, cumulativeDistance)\r\n        previouscontrolindex = i\r\n        nextcontrol += 1\r\n        if (nextcontrol === course.x.length) {\r\n          // we have found all the controls\r\n          this.hasValidTrack = true\r\n          break\r\n        }\r\n        nextx = course.x[nextcontrol]\r\n        nexty = course.y[nextcontrol]\r\n      }\r\n    }\r\n    return this.hasValidTrack\r\n  }\r\n\r\n  getColour(value) {\r\n    // RGB Hex values\r\n    //   Red Or  Yel LGr Gre PaG LBl Bl  DBl\r\n    // R 255 255 255 128 0   0   0   0   0\r\n    // G 0   128 255 255 255 255 255 128 0\r\n    // B 0   0   0   0   0   128 255 255 255\r\n    let colour = \"#\"\r\n    // using range 0 = Red to 1 = Green\r\n    // gets in a value between 0 (slowest) and 1 (fastest) and returns a colour string\r\n    if (value === 0) {\r\n      return \"#0080ff\"\r\n    }\r\n    if (value < 0.5) {\r\n      colour += \"ff\"\r\n    } else {\r\n      const red = parseInt((1 - value) * 255 * 2, 10)\r\n      if (red < 16) {\r\n        colour += \"0\"\r\n      }\r\n      colour += red.toString(16)\r\n    }\r\n    if (value >= 0.5) {\r\n      colour += \"ff\"\r\n    } else {\r\n      const green = 255 - parseInt((0.5 - value) * 255 * 2, 10)\r\n      if (green < 16) {\r\n        colour += \"0\"\r\n      }\r\n      colour += green.toString(16)\r\n    }\r\n    colour += \"00\"\r\n    // console.log(value, colour)\r\n    return colour\r\n  }\r\n\r\n  getInitials(name) {\r\n    // converts name to initials\r\n    if (name === null) {\r\n      return \"??\"\r\n    }\r\n    // replace GPS with * so that we get *SE rather than GSE for initials\r\n    name = name.replace(/GPS/g, \"*\")\r\n    let initials = \"\"\r\n    let addNext = true\r\n    for (let i = 0; i < name.length; i += 1) {\r\n      if (addNext) {\r\n        initials += name.substr(i, 1)\r\n        addNext = false\r\n      }\r\n      if (name.charAt(i) === \" \") {\r\n        addNext = true\r\n      }\r\n    }\r\n    return initials\r\n  }\r\n\r\n  getNextValidControl(thisControl) {\r\n    // look through splits to find next control which has a split time\r\n    // to allow drawing for missed controls where the split time is 0\r\n    for (let i = thisControl + 1; i < this.splits.length; i += 1) {\r\n      if (this.splits[i] !== this.splits[i - 1]) {\r\n        return i\r\n      }\r\n    }\r\n    // implies we have no finish time which is unlikely but anyway...\r\n    return this.splits.length\r\n  }\r\n\r\n  initialiseTrack(data) {\r\n    this.legpos = []\r\n    this.racepos = []\r\n    // set true if track includes all expected controls in correct order or is a GPS track\r\n    this.hasValidTrack = false\r\n    this.displayTrack = false\r\n    this.displayScoreCourse = false\r\n    // raw track data\r\n    this.trackx = []\r\n    this.tracky = []\r\n    this.speedColour = []\r\n    // interpolated times\r\n    this.xysecs = []\r\n    // GPS track ids are normal resultid + GPS_RESULT_OFFSET\r\n    if (this.resultid >= config.GPS_RESULT_OFFSET) {\r\n      this.isGPSTrack = true\r\n      // don't get time or splits so need to copy them in from original result\r\n      const info = getTimeAndSplitsForID(this.rawid)\r\n      this.time = info.time\r\n      this.splits = info.splits\r\n      // allow for events with no results where there won't be a non-GPS result\r\n      if (this.time === config.TIME_NOT_FOUND) {\r\n        this.time = data.time\r\n      }\r\n    } else {\r\n      //this.name = data.name\r\n      this.isGPSTrack = false\r\n    }\r\n  }\r\n\r\n  mapSpeedColours() {\r\n    // speed options are in min/km\r\n    const maxMetresPerSecond = 16.667 / options.maxSpeed\r\n    const minMetresPerSecond = 16.667 / options.minSpeed\r\n    const secondsPerSample = 3\r\n    // converts speed to RGB value\r\n    const sorted = this.speedColour.slice().sort(function (a, b) {\r\n      return a - b\r\n    })\r\n    const metresPerPixel = getMetresPerPixel()\r\n    let maxspeed = 0\r\n    let minspeed = 0\r\n    if (metresPerPixel !== undefined) {\r\n      maxspeed = (secondsPerSample * maxMetresPerSecond) / metresPerPixel\r\n      minspeed = (secondsPerSample * minMetresPerSecond) / metresPerPixel\r\n    } else {\r\n      maxspeed = sorted[sorted.length - 1]\r\n      // arbitrary limit below which everything will be red\r\n      minspeed = sorted[Math.floor(sorted.length / 95)]\r\n    }\r\n    const range = maxspeed - minspeed\r\n    // speedColour comes in with speeds at each point and gets updated to the associated colour\r\n    for (let i = 0; i < this.speedColour.length; i += 1) {\r\n      // force value into allowable range\r\n      let value = Math.max(this.speedColour[i], minspeed)\r\n      value = Math.min(value, maxspeed)\r\n      //console.log(value, (value - minspeed) / range)\r\n      this.speedColour[i] = this.getColour((value - minspeed) / range)\r\n    }\r\n  }\r\n\r\n  setSpeedColours() {\r\n    //calculate distance between each point in pixels, averaged over 2 points\r\n    this.speedColour[0] = 0\r\n    let oldDelta = 0\r\n    for (let t = 1; t < this.trackx.length; t += 1) {\r\n      const delta = getDistanceBetweenPoints(this.trackx[t], this.tracky[t], this.trackx[t - 1], this.tracky[t - 1])\r\n      this.speedColour[t] = (delta + oldDelta) / 2\r\n      oldDelta = delta\r\n    }\r\n    this.mapSpeedColours()\r\n  }\r\n\r\n  setTrackDisplay(display) {\r\n    if (this.hasValidTrack) {\r\n      if (display) {\r\n        if (this.userColour !== null) {\r\n          this.trackColour = this.userColour\r\n        } else {\r\n          this.trackColour = getNextTrackColour()\r\n        }\r\n      } else {\r\n        this.trackColour = null\r\n      }\r\n      this.displayTrack = display\r\n    }\r\n  }\r\n}\r\n","import { resultIsBeingAnimated, updateTrackNames } from \"./animation\"\r\nimport { getMapSize, redraw } from \"./canvas\"\r\nimport { config, options } from \"./config\"\r\nimport {\r\n  controls,\r\n  createCourseMenu,\r\n  isValidCourseId,\r\n  getCourseDetails,\r\n  getCourseName,\r\n  getCoursesForEvent,\r\n  getNumberOfControlsOnCourse,\r\n  getnumberOfCourses,\r\n  getFilterDetails,\r\n  setResultsCount,\r\n  updateScoreCourse\r\n} from \"./courses\"\r\nimport { setName } from \"./draw\"\r\nimport {\r\n  eventIsLocked,\r\n  getActiveMapID,\r\n  getEventInfoForKartatID,\r\n  getKartatEventID,\r\n  getWorldFile,\r\n  isScoreEvent\r\n} from \"./events\"\r\nimport { getHashRoutes, getHashCourses, getHashTab } from \"./hash\"\r\nimport { eventFinishedLoading } from \"./manager\"\r\nimport { Result } from \"./result\"\r\nimport { getActiveTab, setResultCheckboxes, displayStatsDialog } from \"./rg2ui\"\r\nimport { t } from \"./translate\"\r\nimport { formatSecsAsMMSS, generateOption } from \"./utils\"\r\n\r\nlet results = []\r\n\r\nexport function addResults(data, isScoreEvent) {\r\n  results.length = 0\r\n  let codes = []\r\n  let scorex = []\r\n  let scorey = []\r\n  // extract score course details if necessary\r\n  if (isScoreEvent) {\r\n    // details are only sent the first time a variant occurs (to reduce file size quite a lot in some cases)\r\n    // so need to extract them for use later\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      let variant = data[i].variant\r\n      if (codes[variant] === undefined) {\r\n        codes[variant] = data[i].scorecodes\r\n        scorex[variant] = data[i].scorex\r\n        scorey[variant] = data[i].scorey\r\n      }\r\n    }\r\n  }\r\n  // save each result\r\n  for (let i = 0; i < data.length; i += 1) {\r\n    // trap cases where only some courses for an event are set up, but for some reason all the results get saved\r\n    // so you end up getting results for courses you don't know about: just ignore these results\r\n    if (isValidCourseId(data[i].courseid)) {\r\n      if (data[i].resultid > config.GPS_RESULT_OFFSET && data[i].coursename === \"\") {\r\n        data[i].coursename = getCourseDetails(data[i].courseid).name\r\n      }\r\n      let result = undefined\r\n      if (isScoreEvent) {\r\n        let variant = data[i].variant\r\n        result = new Result(data[i], isScoreEvent, codes[variant], scorex[variant], scorey[variant])\r\n      } else {\r\n        result = new Result(data[i], isScoreEvent)\r\n      }\r\n      results.push(result)\r\n    }\r\n  }\r\n  //setTrackColours()\r\n  setDisplayOrder()\r\n  setDeletionInfo()\r\n  setScoreCourseInfo()\r\n  handleExclusions()\r\n  sanitiseSplits(isScoreEvent)\r\n}\r\n\r\nexport function addTracks(tracks) {\r\n  for (let i = 0; i < tracks.length; i += 1) {\r\n    let resultIndex = tracks[i].id\r\n    let j = 0\r\n    // loop through all results and add it against the correct id\r\n    while (j < results.length) {\r\n      if (resultIndex === results[j].resultid) {\r\n        results[j].addTrack(tracks[i])\r\n        break\r\n      }\r\n      j += 1\r\n    }\r\n  }\r\n}\r\n\r\nexport function allResultsForCourseReplayed(courseid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      // careful: animation runners use index, not resultid\r\n      if (!resultIsBeingAnimated(i)) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function allTracksDisplayed() {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].hasValidTrack) {\r\n      if (!results[i].displayTrack) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function allTracksForCourseDisplayed(courseid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].hasValidTrack) {\r\n        if (!results[i].displayTrack) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function allTracksForCourseReplayed(courseid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].hasValidTrack) {\r\n        // careful: animation runners use index, not resultid\r\n        if (!resultIsBeingAnimated(i)) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function anyTracksForCourseDisplayed(courseid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].hasValidTrack) {\r\n        if (results[i].displayTrack) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function countResultsByCourseID(courseid) {\r\n  const info = getEventInfoForKartatID()\r\n  let count = 0\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      // don't double-count GPS tracks, unless no initial results (#284)\r\n      if (\r\n        results[i].resultid < config.GPS_RESULT_OFFSET ||\r\n        info.format === config.FORMAT_NO_RESULTS ||\r\n        info.format === config.FORMAT_SCORE_EVENT_NO_RESULTS\r\n      ) {\r\n        count += 1\r\n      }\r\n    }\r\n  }\r\n  return count\r\n}\r\n\r\nexport function createNameDropdown(courseid) {\r\n  let dropdown = document.getElementById(\"rg2-select-name\")\r\n  dropdown.innerHTML = \"\"\r\n  dropdown.options.add(generateOption(null, t(\"Select name\", \"\")))\r\n  // empty dropdown if course not yet selected\r\n  if (courseid === undefined) {\r\n    return\r\n  }\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    // only use original results, not GPS results\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].resultid < config.GPS_RESULT_OFFSET) {\r\n        dropdown.options.add(generateOption(results[i].resultid, results[i].time + \" \" + results[i].name))\r\n      }\r\n    }\r\n  }\r\n  dropdown.addEventListener(\"change\", (e) => {\r\n    setName(parseInt(e.target.value, 10))\r\n  })\r\n  dropdown.removeAttribute(\"disabled\")\r\n}\r\n\r\nexport function createResultMenu() {\r\n  //loads menu from populated result array\r\n  let html = formatResultListAsAccordion()\r\n  // #177 not pretty but gets round problems of double encoding\r\n  html = html.replace(/&amp;/g, \"&\")\r\n  const el = document.getElementById(\"rg2-result-table\")\r\n  el.innerHTML = html\r\n  setResultsSearch()\r\n  setDisplayedRunnerCounts()\r\n  setResultCheckboxes()\r\n  const rows = document.querySelectorAll(\".resultrow\")\r\n  for (let row of rows) {\r\n    row.addEventListener(\"dblclick\", (e) => {\r\n      // currentTarget is the <tr> element: target points to <td> within the <tr>\r\n      const id = parseInt(e.currentTarget.dataset.id, 10)\r\n      if (id) {\r\n        displayStatsDialog(id, false)\r\n      }\r\n    })\r\n    row.addEventListener(\"contextmenu\", (e) => {\r\n      // currentTarget is the <tr> element: target points to <td> within the <tr>\r\n      const id = parseInt(e.currentTarget.dataset.id, 10)\r\n      if (id) {\r\n        displayStatsDialog(id, true)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function deleteResultsForEvent() {\r\n  results.length = 0\r\n}\r\n\r\nexport function displayScoreCourse(id, display) {\r\n  results[id].displayScoreCourse = display\r\n}\r\n\r\nexport function drawTracks() {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    let filter\r\n    if (results[i].isScoreEvent) {\r\n      filter = { from: 0, to: results[i].scorex.length }\r\n    } else {\r\n      filter = getFilterDetails(results[i].courseid)\r\n    }\r\n    results[i].drawTrack(filter)\r\n    results[i].drawScoreCourse()\r\n  }\r\n}\r\n\r\nexport function formatResultListAsAccordion() {\r\n  // header rows to create\r\n  let headers = []\r\n  // results tables to create\r\n  let tables = []\r\n\r\n  if (results.length === 0) {\r\n    return `<p>${t(\"No results available\")}</p>`\r\n  }\r\n  let html = \"\"\r\n  let oldCourseID = 0\r\n  let tracksForThisCourse = 0\r\n  prepareResults()\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const res = results[i]\r\n    if (!res.showResult) {\r\n      // result marked not to display as it is being combined with GPS route\r\n      continue\r\n    }\r\n    if (res.courseid !== oldCourseID) {\r\n      // save previous course table if there was one\r\n      if (headers.length > 0) {\r\n        html += getBottomRows(tracksForThisCourse, oldCourseID) + \"</table>\"\r\n        tables.push(html)\r\n      }\r\n      // found a new course so add header\r\n      tracksForThisCourse = 0\r\n      headers.push(getCourseHeader(res))\r\n      // Start the table with an id that relates to the course name to help with the filtering function\r\n      html = `<table class='resulttable' id='table-${res.courseid}'><thead><tr><th>#</th>`\r\n      html += `<th>${t(\"Name\")}</th><th>${t(\"Time\")}</th>`\r\n      html += `<th><i class='bi-pencil'></i></th><th><i class='bi-play-fill'></i></th></tr></thead><tbody class=\"table-group-divider\">`\r\n      oldCourseID = res.courseid\r\n    }\r\n    html += `<tr class=\"resultrow\" data-id=\"${res.rawid}\"><td>${res.position}</td>`\r\n    // #310 filter default comments in local language just in case\r\n    if (res.comments !== \"\" && res.comments !== t(\"Type your comment\")) {\r\n      // #304 make sure double quotes show up\r\n      res.comments = res.comments.replace(/\"/g, \"&quot;\")\r\n      html += `<td title=\"${res.comments}\"><u>${getNameHTML(res, i)}</u>`\r\n    } else {\r\n      html += `<td>${getNameHTML(res, i)}`\r\n    }\r\n    if (res.canDelete) {\r\n      html += ` <i class='deleteroute bi-trash-fill' data-resultidx=${i}></i>`\r\n    }\r\n    html += `</td><td>${res.time}</td>`\r\n    let showTrack = \"\"\r\n    let showReplay = \"showreplay\"\r\n    if (res.hasValidTrack) {\r\n      tracksForThisCourse += 1\r\n      showTrack = `<input class='showtrack' data-courseid='${oldCourseID}' data-id='${res.resultid}' type=checkbox name=result></input>`\r\n      showReplay += \" showtrackreplay\"\r\n    }\r\n    html += `<td>${showTrack}</td>`\r\n    html += `<td><input class=\"${showReplay}\" data-courseid=${oldCourseID} data-id=${res.resultid} type=checkbox name=replay></input></td></tr>`\r\n  }\r\n  html += `</tbody>${getBottomRows(tracksForThisCourse, oldCourseID)}</table>`\r\n  tables.push(html)\r\n\r\n  html = `<div class=\"accordion\" id=\"results-accordion\">`\r\n  for (let i = 0; i < tables.length; i += 1) {\r\n    html += `<div class=\"accordion-item\">`\r\n    html += `<h2 class=\"accordion-header d-flex\" id=\"header-${i}\">`\r\n    html += `<button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapse-${i}\" aria-expanded=\"true\" aria-controls=\"collapse-${i}\">`\r\n    html += `${headers[i].title}</button>${headers[i].check}</h2>`\r\n    html += `<div id=\"collapse-${i}\" class=\"accordion-collapse collapse\" aria-labelledby=\"header-${i}\" data-bs-parent=\"#rg2-result-tab-body\">`\r\n    html += `<div class=\"accordion-body px-0\">${tables[i]}</div></div></div>`\r\n  }\r\n  html += `</div>`\r\n  return html\r\n}\r\n\r\nfunction formatTotalRunningTime(secs) {\r\n  let time = Math.floor(secs / 86400) + \" days \"\r\n  secs = secs - 86400 * Math.floor(secs / 86400)\r\n  time += Math.floor(secs / 3600) + \" hours \"\r\n  secs = secs - 3600 * Math.floor(secs / 3600)\r\n  time += Math.floor(secs / 60) + \" minutes \"\r\n  time += secs - 60 * Math.floor(secs / 60) + \" seconds\"\r\n  return time\r\n}\r\n\r\n// read through results to get list of all controls on score courses\r\n// since there is no master list of controls!\r\nexport function generateScoreCourses() {\r\n  let courses = []\r\n  let codes = []\r\n  let x = []\r\n  let y = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const res = results[i]\r\n    // only do this for original results, not GPS results\r\n    if (res.resultid < config.GPS_RESULT_OFFSET) {\r\n      const courseid = res.courseid\r\n      // save courseid if it is new\r\n      if (courses.indexOf(courseid) === -1) {\r\n        courses.push(courseid)\r\n        codes[courseid] = []\r\n        x[courseid] = []\r\n        y[courseid] = []\r\n      }\r\n      // read all controls for this result and save if new\r\n      for (let j = 0; j < res.scorecodes.length; j += 1) {\r\n        if (codes[courseid].indexOf(res.scorecodes[j]) === -1) {\r\n          codes[courseid].push(res.scorecodes[j])\r\n          x[courseid].push(res.scorex[j])\r\n          y[courseid].push(res.scorey[j])\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // save the details we have just generated\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    const courseid = courses[i]\r\n    updateScoreCourse(courseid, codes[courseid], x[courseid], y[courseid])\r\n  }\r\n}\r\n\r\nexport function getAllResultsForCourse(courseid) {\r\n  let list = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      // only want first entry: not other drawn routes\r\n      if (results[i].resultid === results[i].rawid) {\r\n        list.push(results[i])\r\n      }\r\n    }\r\n  }\r\n  return list\r\n}\r\n\r\nexport function getAllResultsForVariant(variant) {\r\n  let list = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].variant === variant) {\r\n      // only want first entry: not other drawn routes\r\n      if (results[i].resultid === results[i].rawid) {\r\n        list.push(results[i])\r\n      }\r\n    }\r\n  }\r\n  return list\r\n}\r\n\r\nexport function getAllRunnersForCourse(courseid) {\r\n  let runners = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      runners.push(results[i].resultid)\r\n    }\r\n  }\r\n  return runners\r\n}\r\n\r\nexport function getAllRunnersWithTrackForCourse(courseid) {\r\n  let runners = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].hasValidTrack) {\r\n        runners.push(results[i].resultid)\r\n      }\r\n    }\r\n  }\r\n  return runners\r\n}\r\n\r\nfunction getBottomRows(tracks, courseid) {\r\n  // create bottom rows for all tracks checkboxes\r\n  // first row is drawn and GPS routes (if they exist)\r\n  let html = `<tfoot class=\"table-group-divider\"><tr class='allitemsrow'><td></td><td>${t(\"Routes\")}</td><td></td>`\r\n  if (tracks > 0) {\r\n    html += `<td><input class='allcoursetracks' data-courseid=${courseid} type=checkbox name=track></input></td>`\r\n    html += `<td><input class='allcoursetracksreplay' data-courseid=${courseid} type=checkbox name=replay></input></td>`\r\n  } else {\r\n    html += \"<td></td><td></td>\"\r\n  }\r\n  // second row allows replay of non-drawn routes\r\n  html += `</tr><tr class='allitemsrow'><td></td><td>${t(\"All\")}</td><td></td><td></td>`\r\n  html += `<td><input class='allcoursereplay' data-courseid=${courseid} type=checkbox name=replay></input></td></tr></tfoot>`\r\n  return html\r\n}\r\n\r\nexport function getCommentsForEvent() {\r\n  let hasComments = false\r\n  let html = [\r\n    `<table id='rg2-comments-table' class='table table-sm table-striped table-bordered'>`,\r\n    `<thead><tr><th>${t(\"Name\")}</th><th>${t(\"Course\")}</th>`,\r\n    `<th>${t(\"Comments\")}</th></tr></thead><tbody class=\"table-group-divider\">`\r\n  ].join(\"\")\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].comments !== \"\") {\r\n      hasComments = true\r\n      html += [\r\n        `<tr><td>${results[i].name}</td><td>${results[i].coursename}</td>`,\r\n        `<td>${results[i].comments}</td></tr>`\r\n      ].join(\"\")\r\n    }\r\n  }\r\n  if (hasComments) {\r\n    html += `</tbody></table>`\r\n  } else {\r\n    html = \"\"\r\n  }\r\n  return html\r\n}\r\n\r\nexport function getCourseForResult(id) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === id) {\r\n      return results[i].courseid\r\n    }\r\n  }\r\n  return undefined\r\n}\r\n\r\nfunction getCourseHeader(result) {\r\n  let text = result.coursename\r\n  const info = getCourseDetails(result.courseid)\r\n  // need to protect against some old events with dodgy results\r\n  if (info) {\r\n    text += info.length === undefined ? \"\" : \": \" + info.length + \" km\"\r\n  }\r\n  let html = `<div class=\"d-flex w-100\"><div class=\"flex-grow-1 runners-table-course-header\" data-runners=\"\" data-courseid=\"${result.courseid}\">${text}</div>`\r\n  let check = `<div class=\"px-2\"><input class='showcourse' data-courseid=\"${result.courseid}\"`\r\n  check += ` type=checkbox name =\"course\" title='Show course' ></input ></div >`\r\n  return { title: html, check: check }\r\n}\r\n\r\nexport function getDeletionInfo(id) {\r\n  return { id: results[id].resultid, token: results[id].token }\r\n}\r\n\r\nexport function getDisplayedTrackDetails() {\r\n  // used to populate rg2-track-names within animation on screen redraw\r\n  let tracks = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].displayTrack) {\r\n      let info = {}\r\n      info.trackColour = results[i].trackColour\r\n      info.course = getCourseName(results[i].courseid)\r\n      info.name = results[i].name\r\n      info.resultid = results[i].resultid\r\n      info.rawid = results[i].rawid\r\n      tracks.push(info)\r\n    }\r\n  }\r\n  return tracks\r\n}\r\n\r\nexport function getFullResultforResultID(resultid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === resultid) {\r\n      return results[i]\r\n    }\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport function getFullResultForRawID(rawid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === rawid) {\r\n      return results[i]\r\n    }\r\n  }\r\n  return undefined\r\n}\r\n\r\nfunction getNameHTML(res, i) {\r\n  let namehtml\r\n  if (res.rawid === res.resultid) {\r\n    namehtml = res.name\r\n  } else {\r\n    namehtml = \"<i>\" + res.name + \"</i>\"\r\n  }\r\n  if (res.isScoreEvent) {\r\n    namehtml = `<input class='showscorecourse' data-courseid=${i} type=checkbox></input> ${namehtml}`\r\n  }\r\n  return `<div>${namehtml}</div>`\r\n}\r\n\r\nfunction getRawDisplayOrder(rawid) {\r\n  let idx = results.findIndex((res) => res.resultid === rawid)\r\n  return idx > -1 ? results[idx].displayOrder : rawid\r\n}\r\n\r\nfunction getResultsInfo() {\r\n  let info = { results: 0, drawnroutes: 0, gpsroutes: 0, secs: 0 }\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const res = results[i]\r\n    if (res.resultid < config.GPS_RESULT_OFFSET) {\r\n      info.results += 1\r\n      // beware invalid splits for incomplete runs\r\n      if (res.time) {\r\n        info.secs += res.splits[res.splits.length - 1]\r\n      }\r\n    }\r\n    if (res.hasValidTrack) {\r\n      if (res.resultid < config.GPS_RESULT_OFFSET) {\r\n        info.drawnroutes += 1\r\n      } else {\r\n        info.gpsroutes += 1\r\n      }\r\n    }\r\n  }\r\n  info.totalroutes = info.drawnroutes + info.gpsroutes\r\n  if (info.results > 0) {\r\n    info.percent = ((100 * info.totalroutes) / info.results).toFixed(1)\r\n  } else {\r\n    info.percent = 0\r\n  }\r\n  info.time = formatTotalRunningTime(info.secs)\r\n  return info\r\n}\r\n\r\nexport function getResultsStats(controls, validWorldFile) {\r\n  const resultsinfo = getResultsInfo()\r\n  const coursearray = getCoursesForEvent()\r\n  const mapSize = getMapSize()\r\n  let wf = \"\"\r\n  if (validWorldFile) {\r\n    const worldFile = getWorldFile()\r\n    const digits = 1000000\r\n    wf = `. ${t(\"Map is georeferenced\")}: ${parseInt(worldFile.F * digits) / digits}`\r\n    wf += `, ${parseInt(worldFile.C * digits) / digits}.`\r\n  }\r\n\r\n  let stats = [\r\n    `<tr><td>${t(\"Courses\")}</td><td>${coursearray.length}</td></tr>`,\r\n    `<tr><td>${t(\"Controls\")}</td><td>${controls}</td></tr>`,\r\n    `<tr><td>${t(\"Results\")}</td><td>${resultsinfo.results}</td></tr>`,\r\n    `<tr><td>${t(\"Routes\")}</td><td>${resultsinfo.totalroutes} (${resultsinfo.percent}%)</td></tr>`,\r\n    `<tr><td>${t(\"Drawn routes\")}</td><td>${resultsinfo.drawnroutes}</td></tr>`,\r\n    `<tr><td>${t(\"GPS routes\")}</td><td>${resultsinfo.gpsroutes}</td></tr>`,\r\n    `<tr><td>${t(\"Total time\")}</td><td>${resultsinfo.time}</td></tr>`,\r\n    `<tr><td>${t(\"Map\")} ID ${getActiveMapID()}</td><td>${mapSize.width}  x ${mapSize.height} pixels${wf}</td></tr>`\r\n  ].join(\"\")\r\n  return stats\r\n}\r\n\r\nexport function getRoutesForEvent() {\r\n  let routes = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].hasValidTrack) {\r\n      let route = {}\r\n      route.id = i\r\n      route.resultid = results[i].resultid\r\n      route.name = results[i].name\r\n      route.time = results[i].time\r\n      route.coursename = results[i].coursename\r\n      routes.push(route)\r\n    }\r\n  }\r\n  return routes\r\n}\r\n\r\nexport function getTimeAndSplitsForID(resultid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (resultid === results[i].resultid) {\r\n      return { time: results[i].time, splits: results[i].splits }\r\n    }\r\n  }\r\n  return { time: config.TIME_NOT_FOUND, splits: [] }\r\n}\r\n\r\nexport function getTracksOnDisplay() {\r\n  let tracks = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const result = results[i]\r\n    if (result.displayTrack) {\r\n      tracks.push(result.resultid)\r\n    }\r\n  }\r\n  return tracks\r\n}\r\n\r\nfunction handleExclusions() {\r\n  // adjust times for events with excluded controls that have uploaded unadjusted splits\r\n  let currentCourseID = undefined\r\n  let course = undefined\r\n  let adjustedCourseIDs = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid !== currentCourseID) {\r\n      currentCourseID = results[i].courseid\r\n      course = getCourseDetails(currentCourseID)\r\n    }\r\n    if (course.excludeType === config.EXCLUDED_REAL_SPLITS) {\r\n      if (adjustedCourseIDs.indexOf(currentCourseID) === -1) {\r\n        adjustedCourseIDs.push(currentCourseID)\r\n      }\r\n      let excluded = 0\r\n      // start at 1 since you can't exclude the start control\r\n      for (let j = 1; j < course.exclude.length; j += 1) {\r\n        if (course.exclude[j]) {\r\n          excluded = excluded + Math.min(results[i].splits[j] - results[i].splits[j - 1], course.allowed[j])\r\n        }\r\n      }\r\n      results[i].timeInSecs = Math.max(results[i].splits[results[i].splits.length - 1] - excluded, 0)\r\n      results[i].time = formatSecsAsMMSS(results[i].timeInSecs)\r\n    }\r\n  }\r\n  // set positions for amended courses\r\n  for (let i = 0; i < adjustedCourseIDs.length; i += 1) {\r\n    let runners = results.filter((res) => res.courseid === adjustedCourseIDs[i])\r\n    // horrid mess since all GPS results show status \"ok\" even if the original results was not \"ok\"\r\n    // so need to copy across status from original result\r\n    for (let j = 0; j < runners.length; j += 1) {\r\n      if (runners[j].rawid !== runners[j].resultid) {\r\n        let idx = runners.findIndex((res) => res.resultid === runners[j].rawid)\r\n        // should always find the index but...\r\n        if (idx > -1) {\r\n          runners[j].status = runners[idx].status\r\n        }\r\n      }\r\n    }\r\n    runners.sort(function (a, b) {\r\n      // sort valid times in ascending order\r\n      if (a.status !== \"ok\" || a.timeInSecs === 0) {\r\n        if (b.status !== \"ok\" || b.timeInSecs === 0) {\r\n          return 0\r\n        } else {\r\n          return 1\r\n        }\r\n      }\r\n      if (b.status !== \"ok\" || b.timeInSecs === 0) {\r\n        return -1\r\n      }\r\n      return a.timeInSecs - b.timeInSecs\r\n    })\r\n    let pos = 0\r\n    let prevTime = 0\r\n    for (let j = 0; j < runners.length; j += 1) {\r\n      if (runners[j].status !== \"ok\" || runners[j].timeInSecs === 0) {\r\n        runners[j].position = \"\"\r\n        continue\r\n      }\r\n      if (prevTime !== runners[j].timeInSecs) {\r\n        pos = pos + 1\r\n        prevTime = runners[j].timeInSecs\r\n      } else {\r\n        // same time, but might be GPS result for a normal result\r\n        if (j > 0) {\r\n          if (runners[j].rawid !== runners[j - 1].rawid) {\r\n            pos = pos + 1\r\n          }\r\n        }\r\n      }\r\n      runners[j].position = pos\r\n    }\r\n    for (let j = 0; j < runners.length; j += 1) {\r\n      let idx = results.findIndex((res) => res.resultid === runners[j].resultid)\r\n      // should always find the index but...\r\n      if (idx > -1) {\r\n        results[idx].position = runners[j].position\r\n        // set new display order for this course\r\n        results[idx].displayOrder = j\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction prepareResults() {\r\n  // want to avoid extra results line for GPS routes if there is no drawn route\r\n  // first sort so that GPS routes come after initial result\r\n  results.sort(sortByCourseIDThenResultID)\r\n  // now we can combine first GPS route with original result if needed\r\n  let oldID = undefined\r\n  let canCombine = false\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].rawid === oldID) {\r\n      if (canCombine) {\r\n        if (results[i].hasValidTrack) {\r\n          // found a GPS track to combine\r\n          results[i - 1].showResult = false\r\n          // add position to GPS route\r\n          results[i].position = results[i - 1].position\r\n          canCombine = false\r\n        }\r\n      }\r\n    } else {\r\n      // this is the original result which can be combined if\r\n      // it doesn't already have a drawn route\r\n      canCombine = !results[i].hasValidTrack\r\n      oldID = results[i].rawid\r\n    }\r\n  }\r\n}\r\n\r\nexport function resetSpeedColours() {\r\n  // called when user changes GPS speed colour configuration\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    // forces colours to recalculate\r\n    results[i].speedColour.length = 0\r\n  }\r\n}\r\n\r\nexport function resultIDExists(resultid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (resultid === results[i].resultid) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction sanitiseSplits(isScoreEvent) {\r\n  // sort out missing punches and add some helpful new fields\r\n  let currentCourseID = undefined\r\n  let course = undefined\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid !== currentCourseID) {\r\n      currentCourseID = results[i].courseid\r\n      course = getCourseDetails(currentCourseID)\r\n    }\r\n    results[i].legSplits = []\r\n    results[i].legSplits[0] = 0\r\n    let previousValidSplit = 0\r\n    let nextSplitInvalid = false\r\n    for (let j = 1; j < results[i].splits.length; j += 1) {\r\n      if (results[i].splits[j] - previousValidSplit === 0) {\r\n        if (course.exclude[j]) {\r\n          results[i].legSplits[j] = results[i].splits[j] - previousValidSplit\r\n          previousValidSplit = results[i].splits[j]\r\n        } else {\r\n          // found a zero split\r\n          results[i].legSplits[j] = 0\r\n          // need to ignore next split as well: e.g missing 3 means splits to 3 and 4 are invalid\r\n          nextSplitInvalid = true\r\n          if (results[i].lastValidSplit === undefined) {\r\n            // race positions need to stop at previous control\r\n            results[i].lastValidSplit = j - 1\r\n          }\r\n        }\r\n      } else {\r\n        if (nextSplitInvalid) {\r\n          results[i].legSplits[j] = 0\r\n          previousValidSplit = results[i].splits[j]\r\n          nextSplitInvalid = false\r\n        } else {\r\n          results[i].legSplits[j] = results[i].splits[j] - previousValidSplit\r\n          previousValidSplit = results[i].splits[j]\r\n        }\r\n      }\r\n    }\r\n    if (results[i].lastValidSplit === undefined) {\r\n      results[i].lastValidSplit = results[i].splits.length - 1\r\n    }\r\n\r\n    // handle corrupted events with missing splits\r\n    // force all results to have the correct number of splits to make stats processing work correctly\r\n    if (!isScoreEvent) {\r\n      // splits array contains \"S\" and \"F\" as well as each control\r\n      const expectedSplits = getNumberOfControlsOnCourse(results[i].courseid) + 2\r\n      while (results[i].splits.length < expectedSplits) {\r\n        // copy last valid split data as often as necessary to fill missing gaps\r\n        results[i].splits.push(results[i].splits[results[i].splits.length - 1])\r\n        results[i].legSplits.push(0)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function saveResults(results) {\r\n  document.getElementById(\"rg2-load-progress-label\").textContent = t(\"Saving results\", \"\")\r\n  // TODO remove temporary (?) fix to get round RG1 events with no courses defined: see #179\r\n  if (getnumberOfCourses() > 0) {\r\n    addResults(results, isScoreEvent())\r\n  }\r\n  setResultsCount()\r\n  if (isScoreEvent()) {\r\n    generateScoreCourses()\r\n    controls.generateControlList()\r\n  }\r\n}\r\n\r\nexport function saveRoutes(data) {\r\n  // TODO: bit messy. Where does this really belong?\r\n  document.getElementById(\"rg2-load-progress-label\").textContent = t(\"Saving routes\", \"\")\r\n  // TODO remove temporary (?) fix to get round RG1 events with no courses defined: see #179\r\n  if (getnumberOfCourses() > 0) {\r\n    addTracks(data)\r\n  }\r\n  createCourseMenu()\r\n  createResultMenu()\r\n  if (config.managing()) {\r\n    eventFinishedLoading()\r\n  } else {\r\n    document.getElementById(config.TAB_COURSES).removeAttribute(\"disabled\")\r\n    document.getElementById(config.TAB_RESULTS).removeAttribute(\"disabled\")\r\n    if (eventIsLocked()) {\r\n      document.getElementById(config.TAB_DRAW).setAttribute(\"disabled\", \"\")\r\n    } else {\r\n      document.getElementById(config.TAB_DRAW).removeAttribute(\"disabled\")\r\n    }\r\n    // open courses tab for new event: else stay on draw tab\r\n    const active = getActiveTab()\r\n    // don't change tab if we have come from DRAW since it means\r\n    // we have just reloaded following a save\r\n    if (active !== config.TAB_DRAW) {\r\n      const tab = getHashTab()\r\n      const target = document.getElementById(tab)\r\n      target.click()\r\n    }\r\n    // set up screen as requested in hash\r\n    const routes = getHashRoutes()\r\n    for (let i = 0; i < routes.length; i += 1) {\r\n      let e = new Event(\"click\", { bubbles: true })\r\n      const target = document.querySelector(`.showtrack[data-id='${routes[i]}']`)\r\n      if (target) {\r\n        target.checked = true\r\n        target.dispatchEvent(e)\r\n      }\r\n    }\r\n    const courses = getHashCourses()\r\n    for (let i = 0; i < courses.length; i += 1) {\r\n      let e = new Event(\"click\", { bubbles: true })\r\n      const target = document.querySelector(`.showcourse[data-courseid='${courses[i]}']`)\r\n      if (target) {\r\n        target.checked = true\r\n        target.dispatchEvent(e)\r\n      }\r\n    }\r\n  }\r\n  document.getElementById(\"rg2-load-progress\").classList.add(\"d-none\")\r\n  redraw()\r\n}\r\n\r\nfunction setDeletionInfo() {\r\n  const eventid = getKartatEventID()\r\n  let deletionInfo = []\r\n  const opt = options.drawnRoutes\r\n  // find routes that can be deleted for this event\r\n  for (let i = 0; i < opt.length; i += 1) {\r\n    if (opt[i].eventid === eventid) {\r\n      deletionInfo.push(opt[i])\r\n    }\r\n  }\r\n  for (let i = 0; i < deletionInfo.length; i += 1) {\r\n    for (let r = 0; r < results.length; r += 1) {\r\n      if (results[r].resultid === deletionInfo[i].id) {\r\n        results[r].canDelete = true\r\n        results[r].token = deletionInfo[i].token\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setDisplayedRunnerCounts() {\r\n  // set number of displayed runners in each course header\r\n  const resultTable = document.getElementById(\"rg2-result-table\")\r\n  const courses = resultTable.querySelectorAll(\"#results-accordion .accordion-item\")\r\n  courses.forEach((course) => {\r\n    const displayedRows = course.querySelectorAll(\".resulttable tbody tr:not(.d-none)\")\r\n    course.querySelector(\".runners-table-course-header\").setAttribute(\"data-runners\", displayedRows.length)\r\n  })\r\n}\r\n\r\nfunction setDisplayOrder() {\r\n  // used to sort results when generating results table for courses with excluded controls\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid < config.GPS_RESULT_OFFSET) {\r\n      // order stays as it was when event was set up\r\n      results[i].displayOrder = i\r\n    } else {\r\n      results[i].displayOrder = getRawDisplayOrder(results[i].rawid)\r\n    }\r\n  }\r\n}\r\n\r\nexport function setResultColour(rawid, trackColour) {\r\n  // colours set by rawid so that all tracks for same runner are same colour\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].rawid === rawid) {\r\n      results[i].userColour = trackColour\r\n      results[i].trackColour = trackColour\r\n    }\r\n  }\r\n}\r\n\r\nfunction setResultsSearch() {\r\n  let searchBox = document.getElementById(\"rg2-result-search\")\r\n  if (results.length === 0) {\r\n    searchBox.classList.add(\"d-none\")\r\n    return\r\n  }\r\n  searchBox.innerHTML = `<form class=\"d-flex pb-2\" role=\"search\">\r\n  <input class=\"form-control mx-2\" type=\"search\" aria-label=\"${t(\"Search\")}\">\r\n  <i class=\"bi-search mx-2\"></i>\r\n  </form>`\r\n  let resultTable = document.getElementById(\"rg2-result-table\")\r\n  searchBox.addEventListener(\"keyup\", (e) => {\r\n    const filter = e.target.value.toUpperCase()\r\n    const rows = resultTable.querySelectorAll(\"tbody tr\")\r\n    // set visibility of all runners based on filter\r\n    for (let i = 0; i < rows.length; i += 1) {\r\n      if (rows[i].innerText.toUpperCase().indexOf(filter) > -1) {\r\n        rows[i].classList.remove(\"d-none\")\r\n      } else {\r\n        rows[i].classList.add(\"d-none\")\r\n      }\r\n    }\r\n    setDisplayedRunnerCounts()\r\n  })\r\n}\r\n\r\nexport function setScoreCourseDisplay(resultid, display) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === resultid) {\r\n      results[i].displayScoreCourse = display\r\n    }\r\n  }\r\n}\r\n\r\nfunction setScoreCourseInfo() {\r\n  // don't get score course info for GPS tracks so find it from original result\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid >= config.GPS_RESULT_OFFSET) {\r\n      const baseresult = getFullResultForRawID(results[i].rawid)\r\n      if (baseresult !== undefined) {\r\n        if (baseresult.scorex !== undefined) {\r\n          results[i].scorex = baseresult.scorex\r\n          results[i].scorey = baseresult.scorey\r\n          results[i].scorecodes = baseresult.scorecodes\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function setTrackDisplayByCourse(courseid, display) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid || config.DISPLAY_ALL_COURSES === courseid) {\r\n      results[i].setTrackDisplay(display)\r\n    }\r\n  }\r\n  updateTrackNames()\r\n}\r\n\r\nexport function setTrackDisplayByResult(resultid, display) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === parseInt(resultid, 10)) {\r\n      results[i].setTrackDisplay(display)\r\n    }\r\n  }\r\n  updateTrackNames()\r\n}\r\n\r\nfunction sortByCourseIDThenResultID(a, b) {\r\n  // sorts GPS results to be immediately after the associated main id\r\n  if (a.courseid > b.courseid) {\r\n    return 1\r\n  }\r\n  if (b.courseid > a.courseid) {\r\n    return -1\r\n  }\r\n  // if rawid matches then this is a GPS route for an existing result\r\n  if (a.rawid === b.rawid) {\r\n    return a.resultid - b.resultid\r\n  }\r\n  // we know these are different results\r\n  // now sort by displayOrder to allow handling of excluded controls when results order might change\r\n  // displayOrder defaults to the original results order if nothing is excluded so this works as needed\r\n  // whether controls are excluded or not\r\n  return a.displayOrder - b.displayOrder\r\n}\r\n","import { getDistanceBetweenPoints } from \"./utils\"\r\nimport { config } from \"./config\"\r\nimport { getMetresPerPixel } from \"./events\"\r\nimport { getFullResultforResultID } from \"./results\"\r\nimport { getCourseDetails } from \"./courses\"\r\n\r\nexport class Runner {\r\n  constructor(resultid) {\r\n    const res = getFullResultforResultID(resultid)\r\n    this.name = res.name\r\n    this.initials = res.initials\r\n    // careful: we need the index into results, not the resultid from the text file\r\n    this.resultid = resultid\r\n    this.rawid = res.rawid\r\n    this.starttime = res.starttime\r\n    this.splits = res.splits\r\n    this.trackColour = res.trackColour\r\n    this.userColour = res.userColour\r\n    let course\r\n    if (res.isScoreEvent) {\r\n      course = {}\r\n      course.name = res.coursename\r\n      course.x = res.scorex\r\n      course.y = res.scorey\r\n      course.codes = res.scorecodes\r\n    } else {\r\n      course = getCourseDetails(res.courseid)\r\n    }\r\n    this.coursename = course.name\r\n    // used to stop runners when doing replay by control\r\n    this.nextStopTime = config.VERY_HIGH_TIME_IN_SECS\r\n    // map position x,y indexed by running time in seconds\r\n    this.x = []\r\n    this.y = []\r\n\r\n    // total distance travelled indexed by running time in seconds\r\n    // in metres if georeferenced, otherwise in pixels\r\n    this.cumulativeDistance = []\r\n    this.cumulativeDistance[0] = 0\r\n\r\n    // distance travelled for a leg indexed by control number\r\n    this.legTrackDistance = []\r\n    this.legTrackDistance[0] = 0\r\n\r\n    // total distance travelled at end of leg indexed by control number\r\n    this.cumulativeTrackDistance = []\r\n    this.cumulativeTrackDistance[0] = 0\r\n\r\n    if (res.hasValidTrack) {\r\n      this.expandTrack(res.trackx, res.tracky, res.xysecs)\r\n    } else {\r\n      // no track so use straight line between controls\r\n      this.expandTrack(course.x, course.y, res.splits)\r\n    }\r\n    this.addTrackDistances(course, res)\r\n  }\r\n\r\n  addTrackDistances(course, res) {\r\n    // add track distances for each leg\r\n    const lastPointIndex = this.cumulativeDistance.length - 1\r\n    if (course.codes !== undefined) {\r\n      // if we got no splits then there will just be a finish time\r\n      if (res.splits.length > 1) {\r\n        for (let control = 1; control < course.codes.length; control += 1) {\r\n          // avoid NaN values for GPS tracks that are shorter than the result time\r\n          let ind\r\n          if (res.splits[control] <= lastPointIndex) {\r\n            ind = res.splits[control]\r\n          } else {\r\n            ind = lastPointIndex\r\n          }\r\n          this.cumulativeTrackDistance[control] = this.cumulativeDistance[ind]\r\n          this.legTrackDistance[control] =\r\n            this.cumulativeTrackDistance[control] - this.cumulativeTrackDistance[control - 1]\r\n        }\r\n      } else {\r\n        // allows for tracks at events with no results so no splits: just use start and finish\r\n        this.legTrackDistance[1] = this.cumulativeDistance[lastPointIndex]\r\n        this.cumulativeTrackDistance[1] = this.cumulativeDistance[lastPointIndex]\r\n      }\r\n    }\r\n  }\r\n\r\n  expandTrack(itemsx, itemsy, itemstime) {\r\n    // gets passed arrays of x, y and time\r\n    // iterate over item which will be xy or controls\r\n    let timeatprevitem = 0\r\n    let timeatitem = 0\r\n    let fromx = itemsx[0]\r\n    let fromy = itemsy[0]\r\n    let fromdist = 0\r\n    let dist = 0\r\n    this.x[0] = itemsx[0]\r\n    this.y[0] = itemsy[0]\r\n    let metresPerPixel = getMetresPerPixel()\r\n    if (metresPerPixel === undefined) {\r\n      metresPerPixel = 1\r\n    }\r\n    for (let item = 1; item < itemstime.length; item += 1) {\r\n      let tox = itemsx[item]\r\n      let toy = itemsy[item]\r\n      let diffx = tox - fromx\r\n      let diffy = toy - fromy\r\n      dist = dist + getDistanceBetweenPoints(tox, toy, fromx, fromy) * metresPerPixel\r\n      let diffdist = dist - fromdist\r\n      timeatitem = itemstime[item]\r\n      // allow for 0 splits indicating a missed control\r\n      // just assume a 1 second split for now: probably harmless\r\n      if (timeatitem === 0) {\r\n        timeatitem = timeatprevitem + 1\r\n      }\r\n      let difft = timeatitem - timeatprevitem\r\n      for (let t = timeatprevitem + 1; t < timeatitem; t += 1) {\r\n        this.x[t] = Math.round(fromx + ((t - timeatprevitem) * diffx) / difft)\r\n        this.y[t] = Math.round(fromy + ((t - timeatprevitem) * diffy) / difft)\r\n        this.cumulativeDistance[t] = Math.round(fromdist + ((t - timeatprevitem) * diffdist) / difft)\r\n      }\r\n      this.x[timeatitem] = tox\r\n      this.y[timeatitem] = toy\r\n      this.cumulativeDistance[timeatitem] = Math.round(dist)\r\n      fromx = tox\r\n      fromy = toy\r\n      fromdist = dist\r\n      timeatprevitem = timeatitem\r\n    }\r\n  }\r\n}\r\n","import { createGrid, Grid, ModuleRegistry } from \"@ag-grid-community/core\"\r\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\"\r\nimport Chart from \"chart.js/auto\"\r\nimport { config } from \"./config\"\r\nimport { getCourseDetails } from \"./courses\"\r\nimport { eventHasResults, isScoreEvent } from \"./events\"\r\nimport { getAllResultsForCourse, getAllResultsForVariant, getFullResultForRawID } from \"./results\"\r\nimport { t } from \"./translate\"\r\nimport { formatSecsAsMMSS, showWarningDialog } from \"./utils\"\r\n\r\nModuleRegistry.registerModules([ClientSideRowModelModule])\r\n\r\nconst tabs = [\r\n  { id: \"rg2-stats-summary\", title: \"Summary\", active: \"true\" },\r\n  { id: \"rg2-legs\", title: \"Leg times\" },\r\n  { id: \"rg2-cumulative\", title: \"Cumulative times\" },\r\n  { id: \"rg2-split-times\", title: \"Split times\" },\r\n  { id: \"rg2-time-loss\", title: \"Time loss\" }\r\n]\r\nconst content = [\r\n  `<div id=\"rg2-stats-summary\" class=\"container\"></div><div style=\"height: 400px;\"><canvas id=\"rg2-splits-chart\"></canvas></div>`,\r\n  `<div id=\"rg2-leg-table\" style=\"width: 950px; height: 100%\" class=\"ag-theme-balham\"></div>`,\r\n  `<div id=\"rg2-race-table\" style=\"width: 950px; height: 100%;\" class=\"ag-theme-balham\"></div>`,\r\n  `<div id=\"rg2-results-table\" class=\"rg2-results-table-container\">\r\n     <div id=\"rg2-results-grid-wrapper\">\r\n       <div id=\"rg2-results-grid\" style=\"height: 100%\" class=\"ag-theme-balham\"></div>\r\n     </div>\r\n   </div>`,\r\n  `<div id=\"rg2-time-loss\" class=\"container\">\r\n      <div class=\"rg2-control-slider-grid d-flex flex-column\">\r\n        <div class=\"d-flex\">\r\n          <div id=\"rg2-control-number\"></div>\r\n          <div id=\"rg2-control-slider\"></div>\r\n        </div>\r\n        <div id=\"rg2-loss-details\" class=\"d-flex justify-content-center\"></div>\r\n      </div>\r\n      <canvas id=\"rg2-loss-chart\"></canvas>\r\n    </div>`\r\n]\r\n\r\nlet result = null\r\nlet rawid = null\r\nlet results = []\r\nlet isScoreOrRelay = false\r\nlet course = null\r\nlet controls = 0\r\nlet byLegPos = []\r\nlet byRacePos = []\r\nlet resultIndex = null\r\nlet splitsChart = undefined\r\nlet legChart = undefined\r\nlet activeLeg = 1\r\nlet maxIterationIndex = 9\r\n// starting iteration to use for display\r\nlet iterationIndex = 2\r\n\r\nfunction adjustSplits() {\r\n  // adjust splits for events with excluded controls that have uploaded unadjusted splits\r\n  // total times were adjusted when results were saved initially\r\n  if (course.excludeType === config.EXCLUDED_REAL_SPLITS) {\r\n    for (let i = 0; i < results.length; i += 1) {\r\n      let excluded = 0\r\n      // start at 1 since you can't exclude the start control\r\n      for (let j = 1; j < course.exclude.length; j += 1) {\r\n        if (course.exclude[j]) {\r\n          const newExclude = Math.min(results[i].splits[j] - results[i].splits[j - 1] - excluded, course.allowed[j])\r\n          excluded = excluded + newExclude\r\n        }\r\n        results[i].splits[j] = results[i].splits[j] - excluded\r\n        results[i].legSplits[j] = results[i].splits[j] - results[i].splits[j - 1]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction calculateLostTimeForIteration(iter) {\r\n  // find predicted times and losses\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (iter === 0) {\r\n      results[i].predictedSplits = []\r\n      results[i].loss = []\r\n      results[i].totalLoss = []\r\n    }\r\n    results[i].predictedSplits[iter] = []\r\n    results[i].predictedSplits[iter][0] = 0\r\n    results[i].loss[iter] = []\r\n    results[i].loss[iter][0] = 0\r\n    let loss = 0\r\n    for (let k = 0; k < controls; k += 1) {\r\n      if (results[i].performanceIndex[iter] > 0) {\r\n        results[i].predictedSplits[iter][k] = parseInt(\r\n          course.refLegTime[iter][k] / results[i].normalPerformanceIndex[iter],\r\n          10\r\n        )\r\n      } else {\r\n        results[i].predictedSplits[iter][k] = results[i].legSplits[k]\r\n      }\r\n      results[i].loss[iter][k] = results[i].legSplits[k] - results[i].predictedSplits[iter][k]\r\n      if (results[i].loss[iter][k] < 0) {\r\n        results[i].loss[iter][k] = 0\r\n      }\r\n      loss = loss + results[i].loss[iter][k]\r\n    }\r\n    results[i].totalLoss[iter] = loss\r\n  }\r\n}\r\n\r\nfunction calculatePerformanceForIteration(iter) {\r\n  // find reference times for each leg\r\n  if (iter === 0) {\r\n    course.refLegTime = []\r\n    course.refTime = []\r\n  }\r\n  let times = []\r\n  let refTimes = []\r\n  for (let i = 0; i < controls; i += 1) {\r\n    times.length = 0\r\n    if (!course.exclude[i]) {\r\n      for (let k = 0; k < results.length; k += 1) {\r\n        if (results[k].iterSplits[iter][i] !== 0) {\r\n          times.push(results[k].iterSplits[iter][i])\r\n        }\r\n      }\r\n    }\r\n    // using median of best 25% of times (minimum of 3) for the leg\r\n    const averages = getAverages(times, 25)\r\n    refTimes.push(averages.median)\r\n  }\r\n  course.refLegTime[iter] = refTimes.slice(0)\r\n  course.refTime[iter] = refTimes.reduce((a, b) => a + b)\r\n  // find ratio to reference times\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (iter === 0) {\r\n      results[i].refRatio = []\r\n      results[i].performanceIndex = []\r\n      results[i].normalPerformanceIndex = []\r\n      results[i].totalSecs = []\r\n    }\r\n    results[i].refRatio[iter] = []\r\n    const ratios = []\r\n    for (let k = 0; k < controls; k += 1) {\r\n      if (results[i].iterSplits[iter][k] === 0) {\r\n        results[i].refRatio[iter][k] = 0\r\n      } else {\r\n        results[i].refRatio[iter][k] = course.refLegTime[iter][k] / results[i].iterSplits[iter][k]\r\n      }\r\n      ratios.push(results[i].refRatio[iter][k])\r\n    }\r\n    const nonZeroRatios = ratios.filter((ratio) => ratio > 0)\r\n    const averages = getAverages(nonZeroRatios, 100)\r\n    results[i].performanceIndex[iter] = averages.median\r\n    results[i].totalSecs[iter] = results[i].iterSplits[iter].reduce((a, b) => a + b)\r\n\r\n    // normal PI weighted by ref times\r\n    let sum = 0\r\n    let weight = 0\r\n    for (let k = 0; k < controls; k += 1) {\r\n      if (results[i].iterSplits[iter][k] !== 0) {\r\n        sum = sum + results[i].refRatio[iter][k] * course.refLegTime[iter][k]\r\n        weight = weight + course.refLegTime[iter][k]\r\n      }\r\n    }\r\n    if (sum === 0) {\r\n      results[i].normalPerformanceIndex[iter] = 0\r\n    } else {\r\n      results[i].normalPerformanceIndex[iter] = sum / weight\r\n    }\r\n  }\r\n}\r\nfunction calculateSplitsforIteration(iter) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (iter === 0) {\r\n      results[i].iterSplits = []\r\n    }\r\n    let splits = []\r\n    for (let k = 0; k < controls; k += 1) {\r\n      if (iter === 0) {\r\n        splits.push(results[i].legSplits[k])\r\n      } else {\r\n        splits.push(results[i].predictedSplits[iter - 1][k])\r\n      }\r\n    }\r\n    results[i].iterSplits[iter] = splits.slice(0)\r\n  }\r\n}\r\n\r\nfunction decrementIterations() {\r\n  iterationIndex = Math.max(iterationIndex - 1, 0)\r\n  setIterations()\r\n}\r\n\r\nfunction displayControlDetails(stacks) {\r\n  let control = \"\"\r\n  let leg = \"\"\r\n  if (result.splits.length - 1 === activeLeg) {\r\n    control = t(\"Finish\")\r\n  } else {\r\n    control = t(\"Control\")\r\n    leg = \": \" + activeLeg\r\n  }\r\n  let html = `<div>${control}${leg}</div>`\r\n  document.getElementById(\"rg2-control-number\").innerHTML = html\r\n\r\n  html = \"\"\r\n  if (course.exclude[activeLeg]) {\r\n    html = t(\"Control excluded\", \"\")\r\n  } else {\r\n    const losses = stacks.filter((stack) => stack.loss > 0).map((stack) => stack.loss)\r\n    const averages = getAverages(losses, 100)\r\n    html = `<div class=\"px-2 fw-bold\">${t(\"Runners\")}: ${averages.count}</div >`\r\n    html += `<div class=\"px-2 fw-bold\">${t(\"Average\")}: ${parseInt(averages.mean, 10)}s (${\r\n      parseInt((averages.mean * 1000) / course.refLegTime[iterationIndex][activeLeg], 10) / 10\r\n    }%)</div>`\r\n    html += `<div class=\"px-2 fw-bold\">${t(\"Median\")}: ${averages.median}s (${\r\n      parseInt((averages.median * 1000) / course.refLegTime[iterationIndex][activeLeg], 10) / 10\r\n    }%)</div>`\r\n  }\r\n  document.getElementById(\"rg2-loss-details\").innerHTML = html\r\n}\r\n\r\nfunction displayStats() {\r\n  document.getElementById(\"rg2-stats-panel-tab-headers\").addEventListener(\"show.bs.tab\", (e) => {\r\n    handleTabActivation(e)\r\n  })\r\n  // start on Summary tab\r\n  document.getElementById(\"rg2-stats-summary-tab-label\").click()\r\n}\r\n\r\nfunction drawLegChart() {\r\n  if (legChart !== undefined) {\r\n    legChart.destroy()\r\n    legChart = undefined\r\n  }\r\n  const ctx = document.getElementById(\"rg2-loss-chart\")\r\n  const getBackgroundColor = (context) => {\r\n    if (stacks.length === 0) {\r\n      return config.DARK_GREEN_30\r\n    }\r\n    return stacks[context.dataIndex].activeRunner ? config.DARK_GREEN : config.DARK_GREEN_30\r\n  }\r\n  const getBackgroundLossColor = (context) => {\r\n    if (stacks.length === 0) {\r\n      return config.RED_30\r\n    }\r\n\r\n    return stacks[context.dataIndex].activeRunner ? config.RED : config.RED_30\r\n  }\r\n  const stacks = []\r\n  if (!course.exclude[activeLeg]) {\r\n    results.map((res) => {\r\n      // only add runners with valid split for this control\r\n      if (parseInt(res.legSplits[activeLeg], 10) > 0) {\r\n        let stack = {}\r\n        stack.loss = parseInt(res.loss[iterationIndex][activeLeg], 10)\r\n        stack.total = parseInt(res.legSplits[activeLeg], 10)\r\n        stack.predicted = stack.total - stack.loss\r\n        stack.pos = res.legpos[activeLeg]\r\n        stack.name = res.name\r\n        if (res.rawid === rawid) {\r\n          stack.activeRunner = true\r\n        }\r\n        stacks.push(stack)\r\n      }\r\n    })\r\n  }\r\n  stacks.sort((a, b) => a.total - b.total)\r\n  const predicted = stacks.map((res) => res.predicted)\r\n  const losses = stacks.map((res) => res.loss)\r\n  const labels = stacks.map((res) => res.pos)\r\n  const refTime = stacks.map(() => course.refLegTime[iterationIndex][activeLeg])\r\n  const worst = results.reduce((worst, res) => Math.max(worst, res.legSplits[activeLeg]), 0)\r\n  // fit y-axis (time) to nearest higher multiple of 5 minutes (300 seconds)\r\n  const timeMax = parseInt((worst + 299) / 300, 10) * 300\r\n  displayControlDetails(stacks)\r\n  legChart = new Chart(ctx, {\r\n    data: {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: \"Predicted\",\r\n          type: \"bar\",\r\n          data: predicted,\r\n          backgroundColor: getBackgroundColor\r\n        },\r\n        {\r\n          label: \"Loss\",\r\n          type: \"bar\",\r\n          data: losses,\r\n          yAxisID: \"yLoss\",\r\n          backgroundColor: getBackgroundLossColor\r\n        },\r\n        {\r\n          label: \"Reference time\",\r\n          type: \"line\",\r\n          data: refTime,\r\n          borderColor: config.RED,\r\n          backgroundColor: config.WHITE,\r\n          borderDash: [5, 5],\r\n          yAxisID: \"yLoss\",\r\n          pointStyle: \"circle\",\r\n          pointRadius: 0,\r\n          pointHoverRadius: 0\r\n        }\r\n      ]\r\n    },\r\n    options: {\r\n      scales: {\r\n        x: {\r\n          stacked: true,\r\n          title: {\r\n            display: true,\r\n            text: \"Position\"\r\n          }\r\n        },\r\n        yLoss: {\r\n          stacked: true,\r\n          min: 0,\r\n          max: timeMax,\r\n          title: {\r\n            display: true,\r\n            text: \"Time (s)\"\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        tooltip: {\r\n          callbacks: {\r\n            label(context) {\r\n              let label = context.dataset.label + \": \"\r\n              if (context.dataset.label === \"Loss\") {\r\n                label += formatSecsAsMMSS(stacks[context.dataIndex].loss)\r\n              } else {\r\n                label += formatSecsAsMMSS(stacks[context.dataIndex].predicted)\r\n              }\r\n              return label\r\n            },\r\n            title(context) {\r\n              const title =\r\n                stacks[context[0].dataIndex].name + \": \" + formatSecsAsMMSS(stacks[context[0].dataIndex].total)\r\n              return title\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })\r\n  const legChartElement = document.querySelector(\"#rg2-loss-chart\")\r\n  legChartElement.onwheel = (e) => {\r\n    e.preventDefault()\r\n    if (e.deltaY < 0) {\r\n      activeLeg = activeLeg === result.splits.length - 1 ? 1 : activeLeg + 1\r\n    } else {\r\n      activeLeg = activeLeg > 1 ? activeLeg - 1 : result.splits.length - 1\r\n    }\r\n    //document.getElementById(\"rg2-control-slider\").slider(\"value\", activeLeg\")\r\n    drawLegChart()\r\n  }\r\n}\r\n\r\nfunction generateLegChart() {\r\n  activeLeg = 1\r\n  // document.getElementById(\"rg2-control-slider\"\").slider({\r\n  //   value: activeLeg,\r\n  //   min: 1,\r\n  //   max: results[resultIndex].splits.length - 1,\r\n  //   step: 1,\r\n  //   slide(event, ui) {\r\n  //     activeLeg = ui.value\r\n  //     drawLegChart()\r\n  //   }activeLeg\r\n  // })\r\n  drawLegChart()\r\n}\r\n\r\nfunction generateLegPositions() {\r\n  let pos = []\r\n  // two very similar bits of code: scope to rationalise...\r\n  // Generate positions for each leg\r\n  // start at 1 since 0 is time 0\r\n  for (let k = 1; k < course.codes.length; k += 1) {\r\n    pos.length = 0\r\n    for (let j = 0; j < results.length; j += 1) {\r\n      if (results[j].resultid === results[j].rawid) {\r\n        if (results[j].isScoreEvent) {\r\n          if (results[j].variant === course.courseid) {\r\n            pos.push({ time: results[j].legSplits[k], id: j })\r\n          }\r\n        } else {\r\n          if (results[j].courseid === course.courseid) {\r\n            pos.push({ time: results[j].legSplits[k], id: j })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 0 splits sorted to end\r\n    pos.sort(sortLegTimes)\r\n    let prevPos = 0\r\n    let prevTime = 0\r\n    // set positions\r\n    for (let j = 0; j < pos.length; j += 1) {\r\n      if (course.exclude[k]) {\r\n        results[pos[j].id].legpos[k] = 0\r\n        continue\r\n      }\r\n      if (pos[j].time !== prevTime) {\r\n        if (pos[j].time === 0) {\r\n          // all missing splits sorted to end with time 0\r\n          results[pos[j].id].legpos[k] = 0\r\n          prevTime = 0\r\n          prevPos = 0\r\n        } else {\r\n          // new time so position increments\r\n          results[pos[j].id].legpos[k] = j + 1\r\n          prevTime = pos[j].time\r\n          prevPos = j + 1\r\n        }\r\n      } else {\r\n        // same time so use same position\r\n        results[pos[j].id].legpos[k] = prevPos\r\n      }\r\n    }\r\n  }\r\n\r\n  // Generate positions for cumulative time at each control\r\n  pos.length = 0\r\n\r\n  // start at 1 since 0 is time 0\r\n  for (let k = 1; k < course.codes.length; k += 1) {\r\n    pos.length = 0\r\n    let time = 0\r\n    for (let j = 0; j < results.length; j += 1) {\r\n      if (results[j].resultid === results[j].rawid) {\r\n        if (results[j].isScoreEvent) {\r\n          if (results[j].variant === course.courseid) {\r\n            if (k > results[j].lastValidSplit) {\r\n              time = 0\r\n            } else {\r\n              time = results[j].splits[k]\r\n            }\r\n            pos.push({ time: time, id: j })\r\n          }\r\n        } else {\r\n          if (results[j].courseid === course.courseid) {\r\n            if (k > results[j].lastValidSplit) {\r\n              time = 0\r\n            } else {\r\n              time = results[j].splits[k]\r\n            }\r\n            pos.push({ time: time, id: j })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 0 splits sorted to end\r\n    pos.sort(sortLegTimes)\r\n    let prevPos = 0\r\n    let prevTime = 0\r\n    for (let j = 0; j < pos.length; j += 1) {\r\n      if (pos[j].time !== prevTime) {\r\n        if (pos[j].time === 0) {\r\n          results[pos[j].id].racepos[k] = 0\r\n          prevPos = 0\r\n          prevTime = 0\r\n        } else {\r\n          // new time so position increments\r\n          results[pos[j].id].racepos[k] = j + 1\r\n          prevTime = pos[j].time\r\n          prevPos = j + 1\r\n        }\r\n      } else {\r\n        // same time so use same position\r\n        results[pos[j].id].racepos[k] = prevPos\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction generateSplitsChart() {\r\n  if (splitsChart !== undefined) {\r\n    splitsChart.destroy()\r\n    splitsChart = undefined\r\n  }\r\n  const skipped = (ctx, value) => (ctx.p0.skip || ctx.p1.skip ? value : undefined)\r\n  const ctx = document.getElementById(\"rg2-splits-chart\")\r\n  const labels = results[resultIndex].legpos.map((val, idx, array) => (idx === array.length - 1 ? \"F\" : idx))\r\n  const info = getLegPosInfo()\r\n  const legPos = results[resultIndex].legpos.map((val) => (val === 0 ? NaN : val))\r\n  const losses = results[resultIndex].loss[iterationIndex].map((val, idx) =>\r\n    results[resultIndex].legpos[idx] === 0 ? NaN : val\r\n  )\r\n  const averageLegPos = results[resultIndex].legpos.map(() => info.average)\r\n  const worst = results[resultIndex].loss[iterationIndex].reduce((worst, loss) => Math.max(worst, loss), 0)\r\n  // fit y-axis (loss) to nearest higher multiple of 5 minutes (300 seconds)\r\n  const lossMax = parseInt((worst + 299) / 300, 10) * 300\r\n  splitsChart = new Chart(ctx, {\r\n    data: {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: \"Leg position\",\r\n          type: \"line\",\r\n          data: legPos,\r\n          borderColor: config.RED,\r\n          backgroundColor: config.RED_30,\r\n          yAxisID: \"yPosition\",\r\n          segment: {\r\n            borderColor: (ctx) => skipped(ctx, \"rgb(0,0,0,0.2)\"),\r\n            borderDash: (ctx) => skipped(ctx, [6, 6])\r\n          },\r\n          spanGaps: true\r\n        },\r\n        {\r\n          label: \"Average leg position\",\r\n          type: \"line\",\r\n          data: averageLegPos,\r\n          borderColor: config.RED,\r\n          backgroundColor: config.WHITE,\r\n          borderDash: [5, 5],\r\n          yAxisID: \"yPosition\",\r\n          pointStyle: \"circle\",\r\n          pointRadius: 0,\r\n          pointHoverRadius: 0\r\n        },\r\n        {\r\n          label: \"Time loss\",\r\n          type: \"bar\",\r\n          data: losses,\r\n          borderColor: config.DARK_GREEN,\r\n          backgroundColor: config.DARK_GREEN_30,\r\n          yAxisID: \"yLoss\",\r\n          segment: {\r\n            borderColor: (ctx) => skipped(ctx, \"rgb(0,0,0,0.2)\"),\r\n            borderDash: (ctx) => skipped(ctx, [6, 6])\r\n          },\r\n          spanGaps: true\r\n        }\r\n      ]\r\n    },\r\n    options: {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      scales: {\r\n        x: {\r\n          min: 1,\r\n          title: {\r\n            display: true,\r\n            text: t(\"Control\", \"\")\r\n          }\r\n        },\r\n        yPosition: {\r\n          type: \"linear\",\r\n          display: true,\r\n          position: \"left\",\r\n          min: 0,\r\n          max: parseInt((results.length + 9) / 10, 10) * 10,\r\n          title: {\r\n            display: true,\r\n            text: \"Leg position\"\r\n          }\r\n        },\r\n        yLoss: {\r\n          type: \"linear\",\r\n          display: true,\r\n          position: \"right\",\r\n          min: 0,\r\n          max: lossMax,\r\n          grid: {\r\n            drawOnChartArea: false\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: \"Time loss\"\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        tooltip: {\r\n          callbacks: {\r\n            label: function (context) {\r\n              if (context.dataset.label === \"Time loss\") {\r\n                return \"Loss: \" + formatSecsAsMMSS(losses[context.dataIndex])\r\n              }\r\n              if (context.dataset.label === \"Leg position\") {\r\n                return \"Position: \" + legPos[context.dataIndex]\r\n              }\r\n              return \"\"\r\n            },\r\n            title: function (context) {\r\n              if (context[0].label === \"F\") {\r\n                return t(\"Finish\", \"\")\r\n              }\r\n              return t(\"Control\", \"\") + \" \" + context[0].label\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })\r\n  const splitsChartElem = document.querySelector(\"#rg2-splits-chart\")\r\n  splitsChartElem.onwheel = (event) => {\r\n    event.preventDefault()\r\n    if (event.deltaY < 0) {\r\n      resultIndex = resultIndex === results.length - 1 ? 0 : resultIndex + 1\r\n    } else {\r\n      resultIndex = resultIndex > 0 ? resultIndex - 1 : results.length - 1\r\n    }\r\n    prepareStats(results[resultIndex].rawid)\r\n  }\r\n}\r\n\r\nfunction generateSplitsTable() {\r\n  const columnDefs = [\r\n    {\r\n      headerName: t(\"Pos\", \"\"),\r\n      field: \"position\",\r\n      cellDataType: \"text\",\r\n      width: 60,\r\n      pinned: \"left\",\r\n      sortable: true\r\n    },\r\n    {\r\n      headerName: t(\"Name\", \"\"),\r\n      field: \"name\",\r\n      cellDataType: \"text\",\r\n      headerClass: \"align-left\",\r\n      cellClass: \"align-left\",\r\n      width: 150,\r\n      pinned: \"left\"\r\n    },\r\n    { headerName: t(\"Time\", \"\"), field: \"time\", cellDataType: \"text\", width: 85 }\r\n  ]\r\n  for (let j = 1; j < controls - 1; j += 1) {\r\n    columnDefs.push({\r\n      headerName: j + \" (\" + course.codes[j] + \")\",\r\n      field: \"C\" + j,\r\n      cellDataType: \"text\",\r\n      cellRenderer: renderSplits,\r\n      width: 110\r\n    })\r\n  }\r\n  columnDefs.push({\r\n    headerName: t(\"F\", \"\"),\r\n    field: \"finish\",\r\n    cellDataType: \"text\",\r\n    cellRenderer: renderSplits,\r\n    width: 110\r\n  })\r\n  columnDefs.push({ headerName: t(\"Loss\", \"\"), field: \"loss\", cellDataType: \"text\", width: 100 })\r\n  columnDefs.push({\r\n    headerName: t(\"Performance\", \"\"),\r\n    field: \"performance\",\r\n    cellDataType: \"text\",\r\n    width: 100\r\n  })\r\n  columnDefs.push({\r\n    headerName: t(\"Consistency\", \"\"),\r\n    field: \"consistency\",\r\n    cellDataType: \"text\",\r\n    width: 100\r\n  })\r\n\r\n  let rowData = []\r\n  // sort results table: this gets round problems of having multiple classes on one course where results were by class\r\n  results.sort(function (a, b) {\r\n    // sort valid times in ascending order\r\n    // sometimes end up with negative or 0 splits so handle those first\r\n    if (a.racepos[a.splits.length - 1] <= 0) {\r\n      return 1\r\n    } else {\r\n      if (b.racepos[b.splits.length - 1] <= 0) {\r\n        return -1\r\n      } else {\r\n        return a.racepos[a.splits.length - 1] - b.racepos[b.splits.length - 1]\r\n      }\r\n    }\r\n  })\r\n  // need to reset index for active result since array has been sorted\r\n  resultIndex = setResultIndex(rawid)\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    let row = {}\r\n    const r = results[i]\r\n    if (r.racepos[controls - 1] == 0) {\r\n      row.position = \"\"\r\n    } else {\r\n      row.position = r.racepos[controls - 1]\r\n    }\r\n    row.name = r.name\r\n    row.time = r.time\r\n    for (let j = 1; j < controls - 1; j += 1) {\r\n      if (r.splits[j] === r.splits[j - 1]) {\r\n        // no valid split for this control\r\n        row[\"C\" + j] = { split: \"0:00\", pos: r.racepos[j], loss: false }\r\n      } else {\r\n        row[\"C\" + j] = {\r\n          split: formatSecsAsMMSS(r.splits[j]),\r\n          pos: r.racepos[j],\r\n          loss: false\r\n        }\r\n      }\r\n    }\r\n    row.finish = {\r\n      split: formatSecsAsMMSS(r.splits[controls - 1]),\r\n      pos: r.racepos[controls - 1]\r\n    }\r\n    row.loss = formatSecsAsMMSS(r.timeInSecs - r.totalLoss[iterationIndex])\r\n    row.performance = (r.performanceIndex[0] * 100).toFixed(1)\r\n    // discard all 0 entries which relate to missed controls\r\n    const ratios = r.refRatio[0].filter((ratio) => ratio > 0)\r\n    row.consistency = (100 * getStandardDeviation(ratios)).toFixed(1)\r\n    rowData.push(row)\r\n    row = {}\r\n    for (let j = 1; j < controls - 1; j += 1) {\r\n      // highlight predicted losses greater than 20 seconds\r\n      row[\"C\" + j] = {\r\n        split: formatSecsAsMMSS(r.legSplits[j]),\r\n        pos: r.legpos[j],\r\n        loss: r.loss[iterationIndex][j] > 19\r\n      }\r\n    }\r\n    row.finish = {\r\n      split: formatSecsAsMMSS(r.legSplits[controls - 1]),\r\n      pos: r.legpos[controls - 1],\r\n      loss: r.loss[iterationIndex][controls - 1] > 19\r\n    }\r\n    row.loss = formatSecsAsMMSS(r.totalLoss[iterationIndex])\r\n    rowData.push(row)\r\n  }\r\n\r\n  const gridOptions = {\r\n    columnDefs: columnDefs,\r\n    rowData: rowData,\r\n    defaultColDef: {\r\n      headerClass: \"align-center\",\r\n      cellClass: \"align-center\"\r\n    }\r\n  }\r\n\r\n  // can't get ag-grid examples to work in terms of height adjustment so this is\r\n  // the quick and dirty fix: 120 is content/padding/margin etc. for everything else in the dialog\r\n  const height = document.getElementById(\"rg2-map-canvas\").height * 0.98 - 120\r\n  const wrapper = document.getElementById(\"rg2-results-grid-wrapper\")\r\n  wrapper.removeAttribute(\"style\")\r\n  wrapper.setAttribute(\"style\", \"height: \" + height + \"px;\")\r\n  const table = document.getElementById(\"rg2-results-grid\")\r\n  table.innerHTML = \"\"\r\n  createGrid(table, gridOptions)\r\n}\r\n\r\nfunction generateSummary() {\r\n  const info = getLegPosInfo()\r\n  const packRow = (elem) => {\r\n    return `${elem}`\r\n  }\r\n  let html = packRow(`<div>${t(\"Name\")}</div><div>${result.name}</div>`)\r\n  html += packRow(`<div>${t(\"Course\")}</div><div>${result.coursename}</div>`)\r\n  html += packRow(`<div>${t(\"Time\")}</div><div>${result.time}</div>`)\r\n  html += packRow(\r\n    `<div>${t(\"Position\")}</div><div>${results[resultIndex].racepos[controls - 1]} / ${results.length}</div>`\r\n  )\r\n  html += packRow(\r\n    `<div>${t(\"Average leg position\")}</div><div>${info.average} (${t(\"Best\", \"\")}: ${info.best}, ${t(\"Worst\")}: ${\r\n      info.worst\r\n    })</div >`\r\n  )\r\n  let loss = \"\"\r\n  if (isNumberOverZero(result.timeInSecs)) {\r\n    loss = ` (${((100 * results[resultIndex].totalLoss[iterationIndex]) / result.timeInSecs).toFixed(1)}%)`\r\n  }\r\n  html += packRow(\r\n    `<div>${t(\"Estimated loss\")}</div><div>${formatSecsAsMMSS(\r\n      results[resultIndex].totalLoss[iterationIndex]\r\n    )}${loss}</div>`\r\n  )\r\n  // performanceIndex[0] is based on actual splits\r\n  html += packRow(`<div>${t(\"Performance\")}</div><div>${(result.performanceIndex[0] * 100).toFixed(1)}%</div>`)\r\n  // discard all 0 entries which relate to missed controls\r\n  const ratios = results[resultIndex].refRatio[0].filter((ratio) => ratio > 0)\r\n  html += packRow(`<div>${t(\"Consistency\")}</div><div>${(100 * getStandardDeviation(ratios)).toFixed(1)}%</div>`)\r\n  document.getElementById(\"rg2-stats-summary\").innerHTML = html\r\n}\r\n\r\nfunction generateTableByLegPos() {\r\n  const rowData = []\r\n  for (let i = 0; i < results[resultIndex].splits.length; i += 1) {\r\n    let row = {}\r\n    if (i === 0) {\r\n      row.control = \"S\"\r\n    } else {\r\n      if (i == results[resultIndex].splits.length - 1) {\r\n        row.control = \"F\"\r\n      } else {\r\n        row.control = i + \" (\" + course.codes[i] + \")\"\r\n      }\r\n    }\r\n    if (i === 0) {\r\n      row.time = \"0:00\"\r\n    } else {\r\n      row.time = formatSecsAsMMSS(results[resultIndex].legSplits[i])\r\n    }\r\n    if (i === 0 || results[resultIndex].legpos[i] === 0 || course.exclude[i]) {\r\n      row.position = \"-\"\r\n    } else {\r\n      row.position = results[resultIndex].legpos[i]\r\n    }\r\n    if (i === 0 || course.exclude[i]) {\r\n      row.performance = \"-\"\r\n    } else {\r\n      row.performance = (100 * results[resultIndex].refRatio[0][i]).toFixed(1)\r\n    }\r\n    if (course.exclude[i]) {\r\n      row.best = \"-\"\r\n    } else {\r\n      row.best = formatSecsAsMMSS(byLegPos[i][0].t)\r\n    }\r\n    if (i === 0 || course.exclude[i]) {\r\n      row.who = \"-\"\r\n    } else {\r\n      let names = byLegPos[i][0].name\r\n      for (let j = 1; j < byLegPos[i].length; j += 1) {\r\n        if (byLegPos[i][0].t === byLegPos[i][j].t) {\r\n          names += \", \" + byLegPos[i][j].name\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n      row.who = names\r\n    }\r\n    const behind = results[resultIndex].legSplits[i] - byLegPos[i][0].t\r\n    if (i === 0) {\r\n      row.behind = \"-\"\r\n    } else {\r\n      if (results[resultIndex].legSplits[i] <= 0) {\r\n        row.behind = \"-\"\r\n      } else {\r\n        row.behind = formatSecsAsMMSS(behind)\r\n      }\r\n    }\r\n    if (i === 0) {\r\n      row.percent = 0\r\n    } else {\r\n      if (results[resultIndex].legSplits[i] <= 0) {\r\n        row.percent = 0\r\n      } else {\r\n        row.percent = parseInt((behind * 100) / byLegPos[i][0].t, 10)\r\n      }\r\n    }\r\n    if (course.exclude[i]) {\r\n      row.predicted = \"-\"\r\n    } else {\r\n      row.predicted = formatSecsAsMMSS(results[resultIndex].predictedSplits[iterationIndex][i])\r\n    }\r\n    if (results[resultIndex].legSplits[i] <= 0) {\r\n      row.loss = \"-\"\r\n    } else {\r\n      row.loss = formatSecsAsMMSS(results[resultIndex].loss[iterationIndex][i])\r\n    }\r\n    rowData.push(row)\r\n  }\r\n\r\n  const gridOptions = {\r\n    columnDefs: [\r\n      { headerName: t(\"Control\", \"\"), field: \"control\", width: 80 },\r\n      {\r\n        headerName: t(\"Time\", \"\"),\r\n        field: \"time\",\r\n        width: 80,\r\n        comparator: timeComparator.bind(this)\r\n      },\r\n      { headerName: t(\"Position\", \"\"), field: \"position\", width: 75 },\r\n      {\r\n        headerName: t(\"Performance\", \"\"),\r\n        field: \"performance\",\r\n        width: 95,\r\n        comparator: perfComparator.bind(this)\r\n      },\r\n      { headerName: t(\"Best\", \"\"), field: \"best\", width: 80 },\r\n      {\r\n        headerName: t(\"Who\", \"\"),\r\n        field: \"who\",\r\n        headerClass: \"align-left\",\r\n        cellClass: \"align-left\",\r\n        flex: 1,\r\n        tooltipField: \"who\"\r\n      },\r\n      {\r\n        headerName: t(\"Behind\", \"\"),\r\n        field: \"behind\",\r\n        width: 80,\r\n        comparator: timeComparator.bind(this)\r\n      },\r\n      { headerName: \"%\", field: \"percent\", width: 60 },\r\n      {\r\n        headerName: t(\"Predicted\", \"\"),\r\n        field: \"predicted\",\r\n        width: 100,\r\n        comparator: timeComparator.bind(this)\r\n      },\r\n      {\r\n        headerName: t(\"Loss\", \"\"),\r\n        field: \"loss\",\r\n        width: 75,\r\n        comparator: timeComparator.bind(this)\r\n      }\r\n    ],\r\n    rowData: rowData,\r\n    domLayout: \"autoHeight\",\r\n    defaultColDef: {\r\n      headerClass: \"align-center\",\r\n      cellClass: \"align-center\",\r\n      sortable: true\r\n    }\r\n  }\r\n  const table = document.getElementById(\"rg2-leg-table\")\r\n  table.innerHTML = \"\"\r\n  createGrid(table, gridOptions)\r\n}\r\n\r\nfunction generateTableByRacePos() {\r\n  const rowData = []\r\n  let loss = 0\r\n  for (let i = 0; i < results[resultIndex].splits.length; i += 1) {\r\n    let row = {}\r\n    if (i == 0) {\r\n      row.control = \"S\"\r\n    } else {\r\n      if (i == results[resultIndex].splits.length - 1) {\r\n        row.control = \"F\"\r\n      } else {\r\n        row.control = i + \" (\" + course.codes[i] + \")\"\r\n      }\r\n    }\r\n    if (i == 0) {\r\n      row.time = \"0:00\"\r\n    } else {\r\n      if (results[resultIndex].splits[i] === results[resultIndex].splits[i - 1]) {\r\n        row.time = \"\"\r\n      } else {\r\n        row.time = formatSecsAsMMSS(results[resultIndex].splits[i])\r\n      }\r\n    }\r\n    if (i === 0 || results[resultIndex].racepos[i] === 0) {\r\n      row.position = \"-\"\r\n    } else {\r\n      row.position = results[resultIndex].racepos[i]\r\n    }\r\n    row.best = formatSecsAsMMSS(byRacePos[i][0].t)\r\n    if (i === 0) {\r\n      row.who = \"-\"\r\n    } else {\r\n      let names = byRacePos[i][0].name\r\n      for (let j = 1; j < byRacePos[i].length; j += 1) {\r\n        if (byRacePos[i][0].t === byRacePos[i][j].t) {\r\n          names += \", \" + byRacePos[i][j].name\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n      row.who = names\r\n    }\r\n    const behind = results[resultIndex].splits[i] - byRacePos[i][0].t\r\n    if (i === 0 || results[resultIndex].racepos[i] === 0) {\r\n      row.behind = \"-\"\r\n    } else {\r\n      row.behind = formatSecsAsMMSS(behind)\r\n    }\r\n    if (i === 0 || results[resultIndex].racepos[i] === 0) {\r\n      row.percent = \"-\"\r\n    } else {\r\n      row.percent = parseInt((behind * 100) / byRacePos[i][0].t, 10)\r\n    }\r\n    loss = loss + results[resultIndex].loss[iterationIndex][i]\r\n    row.loss = formatSecsAsMMSS(loss)\r\n    rowData.push(row)\r\n  }\r\n\r\n  const gridOptions = {\r\n    columnDefs: [\r\n      { headerName: t(\"Control\", \"\"), field: \"control\", width: 88 },\r\n      { headerName: t(\"Time\", \"\"), field: \"time\", width: 85 },\r\n      { headerName: t(\"Position\", \"\"), field: \"position\", width: 100 },\r\n      { headerName: t(\"Best\", \"\"), field: \"best\", width: 85 },\r\n      {\r\n        headerName: t(\"Who\", \"\"),\r\n        field: \"who\",\r\n        headerClass: \"align-left\",\r\n        cellClass: \"align-left\",\r\n        flex: 1,\r\n        tooltipField: \"who\"\r\n      },\r\n      { headerName: t(\"Behind\", \"\"), field: \"behind\", width: 85 },\r\n      { headerName: \"%\", field: \"percent\", width: 85 },\r\n      { headerName: \"Loss\", field: \"loss\", width: 100 }\r\n    ],\r\n    rowData: rowData,\r\n    domLayout: \"autoHeight\",\r\n    defaultColDef: {\r\n      headerClass: \"align-center\",\r\n      cellClass: \"align-center\"\r\n    }\r\n  }\r\n\r\n  const table = document.getElementById(\"rg2-race-table\")\r\n  table.innerHTML = \"\"\r\n  createGrid(table, gridOptions)\r\n}\r\n\r\nfunction getAverages(rawData, perCent) {\r\n  // avoid mutating source array\r\n  let data = rawData.slice()\r\n\r\n  if (data.length === 0) {\r\n    return { mean: 0, median: 0, count: 0 }\r\n  }\r\n  // sort incoming values\r\n  data.sort(function compare(a, b) {\r\n    return a - b\r\n  })\r\n  let total = 0\r\n  let count = data.length\r\n  // select top perCent items\r\n  if (perCent < 100) {\r\n    // arbitrary choice to keep at least three entries\r\n    const adjustedCount = Math.max(parseInt((count * perCent) / 100, 10), 3)\r\n    data.splice(adjustedCount)\r\n    count = data.length\r\n  }\r\n\r\n  for (let i = 0; i < count; i += 1) {\r\n    total = total + data[i]\r\n  }\r\n  let median\r\n  if (count === 1) {\r\n    median = data[0]\r\n  } else {\r\n    if (count % 2 === 0) {\r\n      median = (data[count / 2 - 1] + data[count / 2]) / 2\r\n    } else {\r\n      median = data[Math.floor(count / 2)]\r\n    }\r\n  }\r\n  return { mean: total / count, median: median, count: count }\r\n}\r\n\r\nfunction getLegPosInfo() {\r\n  let total = 0\r\n  let count = 0\r\n  let worst = 0\r\n  let best = 9999\r\n  for (let i = 1; i < result.legpos.length; i += 1) {\r\n    if (result.legpos[i] === 0) {\r\n      continue\r\n    }\r\n    total += result.legpos[i]\r\n    count += 1\r\n    if (best > result.legpos[i]) {\r\n      best = result.legpos[i]\r\n    }\r\n    if (worst < result.legpos[i]) {\r\n      worst = result.legpos[i]\r\n    }\r\n  }\r\n\r\n  // allow for people with no valid leg times\r\n  let average\r\n  if (count > 0) {\r\n    average = (total / count).toFixed(1)\r\n  } else {\r\n    average = 0\r\n    best = 0\r\n    worst = 0\r\n  }\r\n  return { best: best, worst: worst, average: average }\r\n}\r\n\r\nfunction getMean(data) {\r\n  return data.reduce((a, b) => a + b, 0) / data.length\r\n}\r\n\r\nfunction getPerfValue(p) {\r\n  if (p === \"-\") {\r\n    return 0\r\n  } else {\r\n    return parseFloat(p)\r\n  }\r\n}\r\n\r\nfunction getStandardDeviation(values) {\r\n  if (values.length === 0) {\r\n    return 0\r\n  }\r\n  const mean = getMean(values)\r\n  return Math.sqrt(values.reduce((sq, n) => sq + Math.pow(n - mean, 2), 0) / values.length)\r\n}\r\n\r\nexport function getStatsHeader() {\r\n  // generates HTML for a Bootstrap Tab layout\r\n  let html = `<ul class=\"nav nav-pills\" id=\"rg2-stats-panel-tab-headers\" role=\"tablist\">`\r\n  // add tab headers\r\n  for (let tab of tabs) {\r\n    const title = t(tab.title)\r\n    const active = tab.active ? \" active\" : \"\"\r\n    const index = tab.active ? \"\" : \"tabindex='-1'\"\r\n    html += `<li class=\"nav-item${active}\" role=\"presentation\">\r\n    <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#${tab.id}-tab\"\r\n      type=\"button\" role=\"tab\" ${index}>\r\n      <div id=\"${tab.id}-tab-label\">${title}</div>\r\n    </button>\r\n    </li>`\r\n  }\r\n  html += `</ul>`\r\n\r\n  return html\r\n}\r\n\r\nexport function getStatsLayout() {\r\n  // generates HTML for a Bootstrap Tab layout\r\n  let html = `<div id=\"rg2-stats-table\"><div class=\"tab-content\" id=\"rg2-stats-panel-tab-body\">`\r\n  for (let i = 0; i < tabs.length; i += 1) {\r\n    const active = tabs[i].active ? \" active\" : \"\"\r\n    html += `<div class=\"tab-pane fade ${active} pt-2\" id=\"${tabs[i].id}-tab\" role=\"tabpanel\" tabindex=\"${i}\">\r\n      ${content[i]}</div>`\r\n  }\r\n  html += `</div></div></div>`\r\n\r\n  return html\r\n}\r\n\r\nfunction getTimeValue(t) {\r\n  // gets \"-\" or \"mm:ss\"\r\n  if (t === \"-\") {\r\n    return 0\r\n  } else {\r\n    return parseFloat(t.replace(\":\", \".\"))\r\n  }\r\n}\r\n\r\nfunction handleTabActivation(e) {\r\n  // tabs not on display yet\r\n  if (!e.currentTarget) {\r\n    return\r\n  }\r\n  // trap + and - and use them to change iteration count\r\n  switch (e.currentTarget.id) {\r\n    case \"rg2-iter-plus-text\":\r\n      incrementIterations()\r\n      e.preventDefault()\r\n      break\r\n    case \"rg2-iter-minus-text\":\r\n      decrementIterations()\r\n      e.preventDefault()\r\n      break\r\n    case \"rg2-iter-text\":\r\n      e.preventDefault()\r\n      break\r\n    default:\r\n  }\r\n}\r\n\r\nfunction incrementIterations() {\r\n  iterationIndex = Math.min(iterationIndex + 1, maxIterationIndex)\r\n  setIterations()\r\n}\r\n\r\nfunction initialise(id) {\r\n  rawid = id\r\n  isScoreOrRelay = isScoreEvent()\r\n  result = getFullResultForRawID(rawid)\r\n  if (isScoreOrRelay) {\r\n    results = getAllResultsForVariant(result.variant)\r\n  } else {\r\n    results = getAllResultsForCourse(result.courseid)\r\n  }\r\n  initialiseCourse(result.courseid)\r\n  adjustSplits()\r\n  generateLegPositions()\r\n  resultIndex = setResultIndex(rawid)\r\n}\r\n\r\nfunction initialiseCourse(id) {\r\n  if (isScoreOrRelay) {\r\n    course = {\r\n      courseid: result.variant,\r\n      codes: result.scorecodes,\r\n      exclude: false\r\n    }\r\n  } else {\r\n    course = getCourseDetails(id)\r\n  }\r\n  // includes start and finish\r\n  controls = course.codes.length\r\n  if (controls <= 2) {\r\n    throw new rg2Exception(t(\"No splits available.\"))\r\n  }\r\n  byLegPos.length = 0\r\n  byRacePos.length = 0\r\n  let legTimes = []\r\n  let raceTimes = []\r\n  // for each leg\r\n  for (let i = 0; i < controls; i += 1) {\r\n    legTimes.length = 0\r\n    raceTimes.length = 0\r\n    // for each runner\r\n    for (let k = 0; k < results.length; k += 1) {\r\n      // create array of valid splits to this control\r\n      if (i === 0) {\r\n        // start control\r\n        legTimes.push({ t: 0, name: \"\", pos: 0 })\r\n        raceTimes.push({ t: 0, name: \"\", pos: 0 })\r\n      } else {\r\n        legTimes.push({\r\n          t: results[k].legSplits[i],\r\n          name: results[k].name,\r\n          pos: results[k].legpos[i]\r\n        })\r\n        // race position only valid if all controls to that point are valid\r\n        if (i <= results[k].lastValidSplit) {\r\n          raceTimes.push({\r\n            t: results[k].splits[i],\r\n            name: results[k].name,\r\n            pos: results[k].racepos[i]\r\n          })\r\n        }\r\n      }\r\n    }\r\n    legTimes.sort(function (a, b) {\r\n      // sort array of times in ascending order: 0 splits get sorted to the bottom\r\n      if (a.t === 0) {\r\n        return 1\r\n      } else {\r\n        if (b.t === 0) {\r\n          return -1\r\n        } else {\r\n          return a.t - b.t\r\n        }\r\n      }\r\n    })\r\n    raceTimes.sort(function (a, b) {\r\n      return a.t - b.t\r\n    })\r\n    byLegPos.push(legTimes.slice())\r\n    byRacePos.push(raceTimes.slice())\r\n  }\r\n}\r\n\r\nfunction isNumberOverZero(n) {\r\n  if (!isNaN(parseFloat(n)) && isFinite(n)) {\r\n    if (n > 0) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction iterateLostTime() {\r\n  for (let iter = 0; iter <= maxIterationIndex; iter += 1) {\r\n    calculateSplitsforIteration(iter)\r\n    calculatePerformanceForIteration(iter)\r\n    calculateLostTimeForIteration(iter)\r\n  }\r\n}\r\n\r\nexport function loadStats(rawid) {\r\n  if (!eventHasResults()) {\r\n    showWarningDialog(t(\"Statistics\", \"\"), t(\"No statistics available for this event format.\", \"\"))\r\n    return false\r\n  }\r\n  prepareStats(rawid)\r\n  return true\r\n}\r\n\r\nfunction perfComparator(p1, p2) {\r\n  return getPerfValue(p1) - getPerfValue(p2)\r\n}\r\n\r\nfunction prepareStats(rawid) {\r\n  // all sorts of possible data consistency errors that might turn up\r\n  try {\r\n    initialise(rawid)\r\n    iterateLostTime()\r\n    generateSummary()\r\n    generateSplitsChart()\r\n    generateLegChart()\r\n    generateTableByLegPos()\r\n    generateTableByRacePos()\r\n    generateSplitsTable()\r\n    displayStats()\r\n  } catch (err) {\r\n    if (err instanceof rg2Exception) {\r\n      // one we trapped ourselves\r\n      showWarningDialog(t(\"Statistics\"), err.message)\r\n    } else {\r\n      // general problem: probably an index out of bounds on an array somewhere: dodgy results files\r\n      showWarningDialog(t(\"Statistics\", \"\"), t(\"Data inconsistency.\", \"\"))\r\n    }\r\n    return\r\n  }\r\n}\r\n\r\nfunction renderSplits(params) {\r\n  if (params.value.split === \"0:00\") {\r\n    return \"\"\r\n  }\r\n  let splitinfo = params.value.split\r\n  let classes = \"\"\r\n  if (params.value.pos !== 0) {\r\n    splitinfo += \" (\" + params.value.pos + \")\"\r\n    if (params.value.pos === 1) {\r\n      classes = \"rg2-first\"\r\n    }\r\n    if (params.value.pos === 2) {\r\n      classes = \"rg2-second\"\r\n    }\r\n    if (params.value.pos === 3) {\r\n      classes = \"rg2-third\"\r\n    }\r\n  }\r\n  if (params.value.loss) {\r\n    classes += \" rg2-lost-time\"\r\n  }\r\n  return '<span class=\"' + classes + '\">' + splitinfo + \"</span>\"\r\n}\r\n\r\nfunction rg2Exception(msg) {\r\n  this.message = msg\r\n}\r\n\r\nfunction setIterations() {\r\n  document.getElementById(\"rg2-iter-count-tab-label\").innerText = iterationIndex + 1\r\n  drawLegChart()\r\n  generateSummary()\r\n  generateSplitsChart()\r\n  generateTableByLegPos()\r\n  generateTableByRacePos()\r\n  generateSplitsTable()\r\n}\r\n\r\nfunction setResultIndex(rawid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].rawid === rawid) {\r\n      // index for runner we are analysing\r\n      // reset result since we may have adjusted splits for excluded controls\r\n      result = results[i]\r\n      return i\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nfunction sortLegTimes(a, b) {\r\n  // sort array of times in ascending order\r\n  // 0 splits get sorted to the bottom\r\n  if (a.time === 0) {\r\n    return 1\r\n  } else {\r\n    if (b.time === 0) {\r\n      return -1\r\n    } else {\r\n      return a.time - b.time\r\n    }\r\n  }\r\n}\r\n\r\nfunction timeComparator(t1, t2) {\r\n  return getTimeValue(t1) - getTimeValue(t2)\r\n}\r\n","import { addRunner, animateRunners, removeRunner } from \"./animation\"\r\n// eslint-disable-next-line no-unused-vars\r\nimport * as bootstrap from \"bootstrap\"\r\nimport { redraw, resizeCanvas } from \"./canvas\"\r\nimport { config, options, saveConfigOptions, setConfigOption } from \"./config\"\r\nimport {\r\n  allCoursesDisplayed,\r\n  controls,\r\n  createCourseDropdown,\r\n  setCourseDisplay,\r\n  setAllCoursesDisplay,\r\n  setAllFilters,\r\n  setFilter,\r\n  getCoursesOnDisplay\r\n} from \"./courses\"\r\nimport {\r\n  adjustOffset,\r\n  autofitGPSTrack,\r\n  confirmDeleteRoute,\r\n  resetDrawing,\r\n  saveGPSRoute,\r\n  saveRoute,\r\n  showCourseInProgress,\r\n  undoGPSAdjust,\r\n  undoLastPoint,\r\n  readGPS,\r\n  waitThreeSeconds,\r\n  setNameAndTime\r\n} from \"./draw\"\r\nimport { eventHasResults, formatEvents, getEventStats, getKartatEventID, loadEventByKartatID } from \"./events\"\r\nimport { setHashCourses, setHashRoutes } from \"./hash\"\r\nimport {\r\n  allResultsForCourseReplayed,\r\n  allTracksDisplayed,\r\n  allTracksForCourseDisplayed,\r\n  allTracksForCourseReplayed,\r\n  createNameDropdown,\r\n  displayScoreCourse,\r\n  getAllRunnersForCourse,\r\n  getAllRunnersWithTrackForCourse,\r\n  getCourseForResult,\r\n  getTracksOnDisplay,\r\n  resetSpeedColours,\r\n  setTrackDisplayByCourse,\r\n  setTrackDisplayByResult\r\n} from \"./results\"\r\nimport { Runner } from \"./runner\"\r\nimport { getStatsHeader, getStatsLayout, loadStats } from \"./stats\"\r\nimport { t, createLanguageDropdown } from \"./translate\"\r\n\r\nconst infoPanelControl = document.getElementById(\"rg2-show-info-panel-control\")\r\nconst rightInfoPanelEl = document.getElementById(\"rg2-right-info-panel\")\r\nconst rightInfoPanelTitle = document.getElementById(\"rg2-right-info-panel-title\")\r\n//const rightInfoPanelBody = document.getElementById(\"rg2-right-info-panel-body\")\r\nconst rightInfoPanel = new bootstrap.Offcanvas(rightInfoPanelEl, { backdrop: false })\r\n\r\nconst leftInfoPanelEl = document.getElementById(\"rg2-left-info-panel\")\r\nconst leftInfoPanelTitle = document.getElementById(\"rg2-left-info-panel-title\")\r\nlet leftInfoPanelBody = document.getElementById(\"rg2-left-info-panel-body\")\r\n\r\nconst leftInfoPanel = new bootstrap.Offcanvas(leftInfoPanelEl, { backdrop: false })\r\nleftInfoPanelEl.style.width = `420px`\r\nleftInfoPanelEl.addEventListener(\"hidden.bs.offcanvas\", () => {\r\n  // display close button when panel has finished closing\r\n  infoPanelControl.classList.remove(\"d-none\")\r\n})\r\nresizePanels()\r\n\r\nconst MAX_OFFSET = 10\r\nconst MIN_OFFSET = -10\r\n\r\nfunction animationPanelDisplayed() {\r\n  const animationPanel = document.getElementById(\"rg2-animation-controls\")\r\n  if (animationPanel.classList.contains(\"d-none\")) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function configureDrawDialog() {\r\n  // sets up all non-changing aspects of draw dialog at start-up\r\n  // variable aspects set by resetDrawDialog when needed\r\n\r\n  document.querySelector(\"label[for=rg2-select-course]\").innerHTML = `${t(\"Select course\")}`\r\n  document.querySelector(\"label[for=rg2-select-name]\").innerHTML = `${t(\"Select name\")}`\r\n  // name and time entry for events with no results\r\n  document.querySelector(`label[for=rg2-name-entry]`).innerHTML = t(\"Name\")\r\n  document.querySelector(\"#rg2-name-entry\").addEventListener(\"input\", () => {\r\n    setNameAndTime()\r\n  })\r\n  document.querySelector(`label[for=rg2-time-entry]`).innerHTML = t(\"Time\")\r\n  document.querySelector(\"#rg2-time-entry\").addEventListener(\"input\", () => {\r\n    setNameAndTime()\r\n  })\r\n  const comments = document.getElementById(\"rg2-new-comments\")\r\n  comments.setAttribute(\"placeholder\", t(config.DEFAULT_NEW_COMMENT, \"\"))\r\n  comments.addEventListener(\"focus\", () => {\r\n    const comments = document.getElementById(\"rg2-new-comments\")\r\n    // Clear placeholder when user focuses on it\r\n    comments.setAttribute(\"placeholder\", \"\")\r\n  })\r\n\r\n  const secs = document.getElementById(\"btn-three-seconds\")\r\n  secs.innerHTML = t(\"+3 secs\")\r\n  secs.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    waitThreeSeconds()\r\n  })\r\n\r\n  const undo = document.getElementById(\"btn-undo\")\r\n  undo.innerHTML = t(\"Undo\")\r\n  undo.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    undoLastPoint()\r\n  })\r\n\r\n  const save = document.getElementById(\"btn-save-route\")\r\n  save.innerHTML = t(\"Save\")\r\n  save.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    saveRoute()\r\n  })\r\n\r\n  const reset = document.getElementById(\"btn-reset-drawing\")\r\n  reset.innerHTML = t(\"Reset\")\r\n  reset.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    resetDrawing()\r\n  })\r\n\r\n  document.getElementById(\"rg2-load-gps-title\").innerHTML = t(\"Load GPS file (GPX or TCX)\")\r\n\r\n  document.getElementById(\"btn-offset-plus\").addEventListener(\"click\", () => {\r\n    const input = document.getElementById(\"rg2-offset-value\")\r\n    let val = parseInt(input.value, 10)\r\n    if (val < MAX_OFFSET) {\r\n      val = val + 1\r\n      input.value = val\r\n      adjustOffset(val)\r\n    }\r\n  })\r\n\r\n  document.getElementById(\"btn-offset-minus\").addEventListener(\"click\", () => {\r\n    const input = document.getElementById(\"rg2-offset-value\")\r\n    let val = parseInt(input.value, 10)\r\n    if (val > MIN_OFFSET) {\r\n      val = val - 1\r\n      input.value = val\r\n      adjustOffset(val)\r\n    }\r\n  })\r\n\r\n  document.getElementById(\"rg2-offset-value\").addEventListener(\"input\", () => {\r\n    const input = document.getElementById(\"rg2-offset-value\")\r\n    let val = parseInt(input.value, 10)\r\n    if (isNaN(val)) {\r\n      val = 0\r\n    }\r\n    if (val < MIN_OFFSET) {\r\n      val = MIN_OFFSET\r\n    }\r\n    if (val > MAX_OFFSET) {\r\n      val = MAX_OFFSET\r\n    }\r\n    input.value = val\r\n    adjustOffset(val)\r\n  })\r\n\r\n  const adjust = document.getElementById(\"btn-undo-gps-adjust\")\r\n  adjust.innerHTML = t(\"Undo\")\r\n  adjust.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    undoGPSAdjust()\r\n  })\r\n\r\n  const autofit = document.getElementById(\"btn-autofit-gps\")\r\n  autofit.innerHTML = t(\"Autofit\")\r\n  autofit.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    autofitGPSTrack()\r\n  })\r\n\r\n  document.querySelector(`label[for=chk-move-all]`).innerHTML = t(\"Move track and map together (or right click-drag)\")\r\n\r\n  const saveGPS = document.getElementById(\"btn-save-gps-route\")\r\n  saveGPS.innerHTML = t(\"Save GPS route\")\r\n  saveGPS.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    saveGPSRoute()\r\n  })\r\n\r\n  const help = [\r\n    \"Left click to add/lock/unlock a handle\",\r\n    \"Green - draggable\",\r\n    \"Red - locked\",\r\n    \"Right click to delete a handle\",\r\n    \"Drag a handle to adjust track around locked point(s)\"\r\n  ]\r\n  help.forEach((text, i) => {\r\n    const el = document.getElementById(`draw-text-${i + 1}`)\r\n    el.innerHTML = `${t(text)}.`\r\n  })\r\n\r\n  const file = document.getElementById(\"rg2-load-gps-file\")\r\n  file.addEventListener(\"input\", (e) => {\r\n    readGPS(e)\r\n  })\r\n}\r\n\r\nfunction configureSettingsDialog() {\r\n  document.querySelector(`label[for=rg2-select-language]`).innerHTML = `${t(\"Language\")}`\r\n  createLanguageDropdown(config.languages)\r\n  configureSettingsCheckbox(\"chk-show-GPS-speed\", \"showGPSSpeed\", \"Show GPS speed colours\")\r\n  configureSettingsCheckbox(\"chk-snap-toggle\", \"snap\", \"Snap to control when drawing\")\r\n  configureSettingsCheckbox(\"chk-show-three-seconds\", \"showThreeSeconds\", \"Show +3 time loss for GPS routes\")\r\n  configureSettingsSlider(\"map-intensity\", \"perCentMapIntensity\", \"Map intensity\", \"%\")\r\n  configureSettingsSlider(\"route-intensity\", \"perCentRouteIntensity\", \"Route intensity\", \"%\")\r\n  configureSettingsSlider(\"control-circle\", \"circleSize\", \"Control circle size\")\r\n  configureSettingsSlider(\"course-width\", \"courseWidth\", \"Course overprint width\")\r\n  configureSettingsSlider(\"route-width\", \"routeWidth\", \"Route width\")\r\n  configureSettingsSlider(\"name-font-size\", \"replayFontSize\", \"Replay label font size\")\r\n\r\n  const slider = document.getElementById(\"rg2-gps-speed-slider\")\r\n  slider.setAttribute(\"value1\", options.maxSpeed)\r\n  slider.setAttribute(\"value2\", options.minSpeed)\r\n  slider.addEventListener(\"change\", gpsSpeedChanged)\r\n\r\n  document.getElementById(\"rg2-min-gps-speed-label\").innerHTML = getMinSpeedLabel()\r\n  document.getElementById(\"rg2-max-gps-speed-label\").innerHTML = getMaxSpeedLabel()\r\n}\r\n\r\nfunction configureSettingsCheckbox(selector, option, text) {\r\n  document.querySelector(`label[for=${selector}]`).innerHTML = `${t(text)}`\r\n  const el = document.getElementById(selector)\r\n  el.addEventListener(\"click\", (e) => {\r\n    options[option] = e.target.checked\r\n    saveConfigOptions()\r\n    redraw()\r\n  })\r\n  el.checked = options[option]\r\n}\r\n\r\nfunction configureSettingsSlider(selector, option, text, units = \"\") {\r\n  let label = document.querySelector(`label[for=spn-${selector}]`)\r\n  label.innerHTML = `${t(text)} ${options[option]}${units}`\r\n  let el = document.getElementById(`spn-${selector}`)\r\n  el.setAttribute(\"value\", options[option])\r\n  el.addEventListener(\"change\", (e) => {\r\n    setConfigOption(option, parseInt(e.target.value, 10))\r\n    label = document.querySelector(`label[for=spn-${selector}`)\r\n    label.innerHTML = `${t(text)} ${options[option]}${units}`\r\n    redraw()\r\n  })\r\n}\r\n\r\nfunction configureStatsDialog(resultid) {\r\n  return loadStats(resultid)\r\n}\r\n\r\nexport function configureUI() {\r\n  // disable right click menu: may add our own later\r\n  document.body.addEventListener(\"contextmenu\", (e) => {\r\n    e.preventDefault()\r\n  })\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    resizePanels()\r\n    resizeCanvas()\r\n  })\r\n\r\n  document.getElementById(\"rg2-left-info-panel-body\").addEventListener(\"scroll\", (e) => {\r\n    // Save current scroll bar position in tab\r\n    document.getElementById(\"rg2-info-panel\").setAttribute(getScrollPosAttrName(), e.target.scrollTop)\r\n  })\r\n\r\n  initialiseInfoPanelDialog()\r\n  if (!config.managing()) {\r\n    configureDrawDialog()\r\n  }\r\n  displayInfoPanelDialog()\r\n\r\n  const logo = document.getElementById(\"rg2-logo\")\r\n  logo.addEventListener(\"click\", () => {\r\n    leftInfoPanel.toggle()\r\n  })\r\n\r\n  const tabsBody = document.querySelector(\"#rg2-info-panel-tab-headers\")\r\n  const tabs = tabsBody.querySelectorAll('button[data-bs-toggle=\"tab\"]')\r\n  tabs.forEach((tab) => {\r\n    tab.addEventListener(\"shown.bs.tab\", (e) => {\r\n      tabActivated(e)\r\n    })\r\n  })\r\n\r\n  infoPanelControl.addEventListener(\"click\", () => {\r\n    displayInfoPanelDialog()\r\n    infoPanelControl.classList.add(\"d-none\")\r\n  })\r\n\r\n  initialiseButtons()\r\n}\r\n\r\nexport function createEventMenu() {\r\n  if (config.managing()) {\r\n    return\r\n  }\r\n  let eventList = document.getElementById(\"rg2-event-list\")\r\n  eventList.innerHTML = formatEvents()\r\n  let eventTable = document.getElementById(\"rg2-event-table\")\r\n  let searchBox = document.getElementById(\"rg2-event-search\")\r\n  searchBox.innerHTML = `<form class=\"d-flex pb-2\" role=\"search\">\r\n  <input class=\"form-control mr-2\" type=\"search\" aria-label=\"${t(\"Search\")}\">\r\n  <i class=\"bi-search ms-2 mt-2\"></i>\r\n  </form>`\r\n  searchBox.addEventListener(\"keyup\", (e) => {\r\n    let filter = e.target.value.toUpperCase()\r\n    let rows = eventTable.getElementsByTagName(\"tr\")\r\n    for (let i = 0; i < rows.length; i += 1) {\r\n      if (rows[i].innerText.toUpperCase().indexOf(filter) > -1) {\r\n        rows[i].classList.remove(\"d-none\")\r\n      } else {\r\n        rows[i].classList.add(\"d-none\")\r\n      }\r\n    }\r\n  })\r\n  eventTable.addEventListener(\"click\", (e) => {\r\n    // get tr that contains element that was clicked\r\n    const row = e.target.closest(\"tr\")\r\n    const kartatid = parseInt(row.dataset.kartatid, 10)\r\n    if (!isNaN(kartatid)) {\r\n      loadEventByKartatID(kartatid)\r\n    }\r\n  })\r\n}\r\n\r\nfunction displayAboutDialog() {\r\n  rightInfoPanelEl.style.width = `800px`\r\n  rightInfoPanelTitle.innerHTML = \"RG2 Version \" + config.RG2VERSION\r\n  document.getElementById(\"rg2-about-dialog\").classList.remove(\"d-none\")\r\n  document.getElementById(\"rg2-option-controls\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-stats-dialog\").classList.add(\"d-none\")\r\n  let eventStats = document.getElementById(\"rg2-event-stats\")\r\n  eventStats.innerHTML = getEventStats()\r\n  document.getElementById(\"rg2-manager-link\").innerHTML = `<a href=\"${rg2Config.api_url.replace(\r\n    \"rg2api.php\",\r\n    \"?manage\"\r\n  )}\">Manager Login</a>`\r\n  rightInfoPanel.show()\r\n}\r\n\r\nfunction displayInfoPanelDialog() {\r\n  leftInfoPanel.show()\r\n}\r\n\r\nfunction displaySettingsDialog() {\r\n  rightInfoPanelEl.style.width = `420px`\r\n  rightInfoPanelTitle.innerHTML = t(\"Configuration options\")\r\n  document.getElementById(\"rg2-about-dialog\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-option-controls\").classList.remove(\"d-none\")\r\n  document.getElementById(\"rg2-stats-dialog\").classList.add(\"d-none\")\r\n  configureSettingsDialog()\r\n  rightInfoPanel.show()\r\n}\r\n\r\nexport function displayStatsDialog(resultid) {\r\n  rightInfoPanelEl.style.width = `1000px`\r\n  rightInfoPanelTitle.innerHTML = getStatsHeader()\r\n  document.getElementById(\"rg2-stats-dialog\").innerHTML = getStatsLayout()\r\n  document.getElementById(\"rg2-about-dialog\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-option-controls\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-stats-dialog\").classList.remove(\"d-none\")\r\n  let statsAvailable = configureStatsDialog(resultid)\r\n  if (statsAvailable) {\r\n    rightInfoPanel.show()\r\n  }\r\n}\r\n\r\nexport function getActiveTab() {\r\n  return document.querySelector(\"#rg2-info-panel-tab-headers button.active\").id\r\n}\r\n\r\nfunction getInfoPanelBodyHTML(tabs) {\r\n  let html = `<div id=\"rg2-info-panel\">`\r\n  html += `<div class=\"tab-content\" id=\"rg2-info-panel-tab-body\">`\r\n  for (let i = 0; i < tabs.length; i = i + 1) {\r\n    const body = document.getElementById(tabs[i].body)\r\n    const active = tabs[i].active ? \" active show\" : \"\"\r\n    html += `<div class=\"tab-pane fade ${active}\" id=\"rg2-${tabs[i].name}-body\" role=\"tabpanel\" \r\n    aria-labelledby=\"${tabs[i].name}\" tabindex=\"${i}\">${body.innerHTML}</div>`\r\n    body.remove()\r\n  }\r\n  html += `</div></div>`\r\n  return html\r\n}\r\n\r\nfunction getInfoPanelHeaderHTML(tabs) {\r\n  let html = `<ul class=\"nav nav-pills\" id=\"rg2-info-panel-tab-headers\" role=\"tablist\">`\r\n  for (let i = 0; i < tabs.length; i = i + 1) {\r\n    const hidden = tabs[i].hidden ? \" d-none\" : \"\"\r\n    const active = tabs[i].active ? \" active\" : \"\"\r\n    const disabled = tabs[i].disabled ? \" disabled \" : \"\"\r\n    html += `\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <button class=\"nav-link${active}${hidden}\"${disabled}id=\"${tabs[i].name}\" data-bs-toggle=\"tab\"\r\n      data-bs-target=\"#rg2-${tabs[i].name}-body\"\r\n        type=\"button\" role=\"tab\"><div id=\"${tabs[i].name}-label\">${t(tabs[i].title)}</div>\r\n      </button>\r\n    </li>`\r\n  }\r\n  html += `</ul>`\r\n  return html\r\n}\r\n\r\nfunction getMaxSpeedLabel() {\r\n  return `<i class=\"bi-emoji-smile rg2-run-green\"></i> ${options.maxSpeed.toFixed(1)} min/km`\r\n}\r\n\r\nfunction getMinSpeedLabel() {\r\n  return `<i class=\"bi-emoji-smile rg2-run-red\"></i> ${options.minSpeed.toFixed(1)} min/km`\r\n}\r\n\r\nfunction getScrollPosAttrName() {\r\n  return `scroll-${getActiveTab()}`\r\n}\r\n\r\nfunction gpsSpeedChanged(e) {\r\n  options.maxSpeed = e.detail.value1\r\n  options.minSpeed = e.detail.value2\r\n  const minSpeedLabel = document.getElementById(\"rg2-min-gps-speed-label\")\r\n  minSpeedLabel.innerHTML = getMinSpeedLabel()\r\n  const maxSpeedLabel = document.getElementById(\"rg2-max-gps-speed-label\")\r\n  maxSpeedLabel.innerHTML = getMaxSpeedLabel()\r\n  resetSpeedColours()\r\n  redraw()\r\n}\r\n\r\nfunction initialiseButtons() {\r\n  document.getElementById(\"btn-about\").addEventListener(\"click\", (e) => {\r\n    displayAboutDialog(e)\r\n  })\r\n  document.getElementById(\"btn-settings\").addEventListener(\"click\", (e) => {\r\n    displaySettingsDialog(e)\r\n  })\r\n  document.getElementById(\"btn-splitsbrowser\").addEventListener(\"click\", () => {\r\n    // <timestamp> mimics jQuery cache busting strategy to force reload of event data: needed to get\r\n    // around events that are deleted and then recreated with same number\r\n    window.open(rg2Config.api_url + \"?type=splitsbrowser&id=\" + getKartatEventID() + \"&_=\" + Date.now())\r\n  })\r\n  document.getElementById(\"btn-measure\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-runners\").setAttribute(\"disabled\", \"\")\r\n\r\n  const btn = document.getElementById(\"btn-toggle-controls\")\r\n  btn.setAttribute(\"disabled\", \"\")\r\n  btn.addEventListener(\"click\", () => {\r\n    controls.toggleControlDisplay()\r\n    redraw()\r\n  })\r\n}\r\n\r\nfunction initialiseInfoPanelDialog() {\r\n  const normalTabs = [\r\n    { name: config.TAB_EVENTS, title: \"Events\", body: \"rg2-event-body\", active: true },\r\n    { name: config.TAB_COURSES, title: \"Courses\", body: \"rg2-course-body\", disabled: true },\r\n    { name: config.TAB_RESULTS, title: \"Results\", body: \"rg2-result-body\", disabled: true },\r\n    { name: config.TAB_DRAW, title: \"Draw\", body: \"rg2-draw-body\", disabled: true }\r\n  ]\r\n\r\n  const managerTabs = [\r\n    { name: config.TAB_LOGIN, title: \"Login\", body: \"rg2-login-body\", active: true },\r\n    { name: config.TAB_CREATE, title: \"Add event\", body: \"rg2-add-event-body\", hidden: true },\r\n    { name: config.TAB_EDIT, title: \"Edit event\", body: \"rg2-edit-event-body\", hidden: true },\r\n    { name: config.TAB_MAP, title: \"Add map\", body: \"rg2-add-map-body\", hidden: true },\r\n    { name: config.TAB_DELETE_MAP, title: \"Delete maps\", body: \"rg2-delete-maps-body\", hidden: true }\r\n  ]\r\n\r\n  if (config.managing()) {\r\n    leftInfoPanelTitle.innerHTML = getInfoPanelHeaderHTML(managerTabs)\r\n    leftInfoPanelBody.innerHTML = getInfoPanelBodyHTML(managerTabs)\r\n  } else {\r\n    leftInfoPanelTitle.innerHTML = getInfoPanelHeaderHTML(normalTabs)\r\n    leftInfoPanelBody.innerHTML = getInfoPanelBodyHTML(normalTabs)\r\n  }\r\n}\r\n\r\nexport function resetDrawDialog() {\r\n  createCourseDropdown()\r\n  // name dialog initialised empty and disabled until course selected\r\n  createNameDropdown(undefined)\r\n  document.getElementById(\"rg2-select-name\").setAttribute(\"disabled\", \"\")\r\n  if (eventHasResults()) {\r\n    document.getElementById(\"rg2-name-select\").classList.remove(\"d-none\")\r\n    document.getElementById(\"rg2-enter-name-and-time\").classList.add(\"d-none\")\r\n  } else {\r\n    document.getElementById(\"rg2-name-select\").classList.add(\"d-none\")\r\n    document.getElementById(\"rg2-enter-name-and-time\").classList.remove(\"d-none\")\r\n  }\r\n\r\n  configureSettingsCheckbox(\"chk-align-map\", \"alignMap\", \"Align map to next control\")\r\n  document.getElementById(\"btn-three-seconds\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-undo\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-save-route\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-reset-drawing\").setAttribute(\"disabled\", \"\")\r\n\r\n  document.getElementById(\"rg2-load-gps-file\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-autofit-gps\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-undo-gps-adjust\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-save-gps-route\").setAttribute(\"disabled\", \"\")\r\n\r\n  document.getElementById(\"chk-move-all\").checked = false\r\n}\r\n\r\nexport function resizePanels() {\r\n  const headerHeight = document.getElementById(\"rg2-header-container\").offsetHeight\r\n  const footerHeight = animationPanelDisplayed() ? document.getElementById(\"rg2-animation-controls\").offsetHeight : 0\r\n  leftInfoPanelEl.style.top = `${headerHeight}px`\r\n  rightInfoPanelEl.style.top = `${headerHeight}px`\r\n  leftInfoPanelEl.style.bottom = `${footerHeight}px`\r\n  rightInfoPanelEl.style.bottom = `${footerHeight}px`\r\n  // maxWidth overrides width in CSS so we can set width elsewhere and this will always clamp to screen size\r\n  leftInfoPanelEl.style.maxWidth = `${window.innerWidth}px`\r\n  rightInfoPanelEl.style.maxWidth = `${window.innerWidth}px`\r\n  document.getElementById(\"rg2-track-names\").style.maxHeight = `${window.innerHeight - headerHeight - 10}px`\r\n}\r\n\r\nexport function setResultCheckboxes() {\r\n  // checkbox to show a course\r\n  const showCourse = document.querySelectorAll(\".showcourse\")\r\n  showCourse.forEach((show) => {\r\n    show.addEventListener(\"click\", (e) => {\r\n      const courseid = parseInt(e.target.dataset.courseid, 10)\r\n      setCourseDisplay(courseid, e.target.checked)\r\n      // align courses and results tab\r\n      const showCourse = document.querySelectorAll(\".showcourse\")\r\n      for (let elem of showCourse) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      // align allcourses for this course\r\n      const showAllCourses = document.querySelector(\".showallcourses\")\r\n      showAllCourses.checked = allCoursesDisplayed()\r\n      setFilter(courseid)\r\n      setHashCourses(getCoursesOnDisplay())\r\n      redraw()\r\n    })\r\n  })\r\n\r\n  // checkbox to show all courses\r\n  const showAllCourses = document.querySelector(\".showallcourses\")\r\n  showAllCourses.addEventListener(\"click\", (e) => {\r\n    setAllCoursesDisplay(e.target.checked)\r\n    // align all the individual checkboxes for each course\r\n    const showCourse = document.querySelectorAll(\".showcourse\")\r\n    for (let elem of showCourse) {\r\n      elem.checked = e.target.checked\r\n    }\r\n    setAllFilters()\r\n    setHashCourses(getCoursesOnDisplay())\r\n    redraw()\r\n  })\r\n\r\n  // checkbox to show an individual score course\r\n  const showScoreCourse = document.querySelectorAll(\".showscorecourse\")\r\n  showScoreCourse.forEach((show) => {\r\n    show.addEventListener(\"click\", (e) => {\r\n      displayScoreCourse(parseInt(e.target.dataset.courseid, 10), e.target.checked)\r\n      redraw()\r\n    })\r\n  })\r\n\r\n  // checkbox to show a track\r\n  const showTrack = document.querySelectorAll(\".showtrack\")\r\n  showTrack.forEach((show) => {\r\n    show.addEventListener(\"click\", (e) => {\r\n      const id = parseInt(e.target.dataset.id, 10)\r\n      setTrackDisplayByResult(id, e.target.checked)\r\n      const courseid = parseInt(e.target.dataset.courseid, 10)\r\n      // align all routes for this course checkboxes\r\n      const allCourseTracks = document.querySelectorAll(\".allcoursetracks\")\r\n      allCourseTracks.forEach((course) => {\r\n        if (parseInt(course.dataset.courseid, 10) === courseid) {\r\n          course.checked = allTracksForCourseDisplayed(courseid)\r\n        }\r\n      })\r\n      // align all routes for all courses checkbox\r\n      const allTracks = document.querySelectorAll(\".alltracks\")\r\n      allTracks.forEach((track) => {\r\n        track.checked = allTracksDisplayed()\r\n      })\r\n      setFilter(courseid)\r\n      setHashRoutes(getTracksOnDisplay())\r\n      redraw()\r\n    })\r\n  })\r\n\r\n  // checkbox to delete a route\r\n  const deleteRoute = document.querySelectorAll(\".deleteroute\")\r\n  for (let route of deleteRoute) {\r\n    route.addEventListener(\"click\", (e) => {\r\n      confirmDeleteRoute(parseInt(e.target.dataset.resultidx, 10))\r\n    })\r\n  }\r\n\r\n  // checkbox to display all tracks for course\r\n  const allCourseTracks = document.querySelectorAll(\".allcoursetracks\")\r\n  for (let course of allCourseTracks) {\r\n    course.addEventListener(\"click\", (e) => {\r\n      let courseid = parseInt(e.target.dataset.courseid, 10)\r\n      setTrackDisplayByCourse(courseid, e.target.checked)\r\n      // align all tabs\r\n      const allCourseTracks = document.querySelectorAll(\".allcoursetracks\")\r\n      for (let elem of allCourseTracks) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      // align individual result checkboxes\r\n      const showTrack = document.querySelectorAll(\".showtrack\")\r\n      for (let elem of showTrack) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      // align all routes for all courses checkbox\r\n      const allTracks = document.querySelectorAll(\".alltracks\")\r\n      for (let elem of allTracks) {\r\n        elem.checked = allTracksDisplayed()\r\n      }\r\n      setFilter(courseid)\r\n      setHashRoutes(getTracksOnDisplay())\r\n      redraw()\r\n    })\r\n  }\r\n\r\n  // checkbox to show all tracks for all courses\r\n  const allTracks = document.querySelectorAll(\".alltracks\")\r\n  for (let elem of allTracks) {\r\n    elem.addEventListener(\"click\", (e) => {\r\n      setTrackDisplayByCourse(config.DISPLAY_ALL_COURSES, e.target.checked)\r\n      const allCourseTracks = document.querySelectorAll(\".allcoursetracks\")\r\n      for (let elem of allCourseTracks) {\r\n        elem.checked = e.target.checked\r\n      }\r\n      const showTrack = document.querySelectorAll(\".showtrack\")\r\n      for (let elem of showTrack) {\r\n        elem.checked = e.target.checked\r\n      }\r\n      setAllFilters(e.target.checked)\r\n      setHashRoutes(getTracksOnDisplay())\r\n      redraw()\r\n    })\r\n  }\r\n\r\n  // checkbox to animate a result\r\n  const showReplay = document.querySelectorAll(\".showreplay\")\r\n  for (let elem of showReplay) {\r\n    elem.addEventListener(\"click\", (e) => {\r\n      let resultid = parseInt(e.target.dataset.id, 10)\r\n      if (e.target.checked) {\r\n        addRunner(new Runner(resultid))\r\n      } else {\r\n        removeRunner(resultid)\r\n      }\r\n      const courseid = getCourseForResult(resultid)\r\n      const allCourseTracksReplay = document.querySelectorAll(\".allcoursetracksreplay\")\r\n      for (let elem of allCourseTracksReplay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = allTracksForCourseReplayed(courseid)\r\n        }\r\n      }\r\n      const allCourseReplay = document.querySelectorAll(\".allcoursereplay\")\r\n      for (let elem of allCourseReplay) {\r\n        elem.checked = allResultsForCourseReplayed(courseid)\r\n      }\r\n      redraw()\r\n    })\r\n  }\r\n\r\n  const allCourseTracksReplay = document.querySelectorAll(\".allcoursetracksreplay\")\r\n  for (let elem of allCourseTracksReplay) {\r\n    elem.addEventListener(\"click\", (e) => {\r\n      let courseid = parseInt(e.target.dataset.courseid, 10)\r\n      const courseresults = getAllRunnersWithTrackForCourse(courseid)\r\n      animateRunners(courseresults, e.target.checked)\r\n      const replay = document.querySelectorAll(\".showreplay.showtrackreplay\")\r\n      for (let elem of replay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      const allCourseTracksReplay = document.querySelectorAll(\".allcoursetracksreplay\")\r\n      for (let elem of allCourseTracksReplay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      let allCourseReplay = document.querySelectorAll(\".allcoursereplay\")\r\n      for (let elem of allCourseReplay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = allResultsForCourseReplayed(courseid)\r\n        }\r\n      }\r\n      redraw()\r\n    })\r\n  }\r\n\r\n  // checkbox to animate all results for course\r\n  // this one draws straight lines between controls for non-drawn routes\r\n  const allCourseReplay = document.querySelectorAll(\".allcoursereplay\")\r\n  for (let elem of allCourseReplay) {\r\n    elem.addEventListener(\"click\", (e) => {\r\n      const courseid = parseInt(e.target.dataset.courseid, 10)\r\n      const courseresults = getAllRunnersForCourse(courseid)\r\n      animateRunners(courseresults, e.target.checked)\r\n      const replay = document.querySelectorAll(\".showreplay\")\r\n      for (let elem of replay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      const allCourseTracksReplay = document.querySelectorAll(\".allcoursetracksreplay\")\r\n      for (let elem of allCourseTracksReplay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = allTracksForCourseReplayed(courseid)\r\n        }\r\n      }\r\n      redraw()\r\n    })\r\n  }\r\n}\r\n\r\nfunction tabActivated(e) {\r\n  switch (e.target.id) {\r\n    case config.TAB_DRAW:\r\n      setAllCoursesDisplay(false)\r\n      showCourseInProgress()\r\n      break\r\n    default:\r\n      break\r\n  }\r\n\r\n  // Set scroll bar position in tab to how it was when user was last looking at it\r\n  const scrollPos = document.getElementById(\"rg2-info-panel\").getAttribute(getScrollPosAttrName())\r\n  document.getElementById(\"rg2-left-info-panel-body\").scrollTop = scrollPos\r\n  redraw()\r\n}\r\n","import { postApi } from \"./api\"\r\nimport { alignMap, ctx, redraw } from \"./canvas\"\r\nimport { config, getOverprintDetails, options, removeDrawnRouteDetails, saveDrawnRouteDetails } from \"./config\"\r\nimport { getCourseDetails, getCourseLegLengths, setCourseDisplay } from \"./courses\"\r\nimport { doGetEvents, getKartatEventID, loadEventByKartatID } from \"./events\"\r\nimport { GPSTrack, RouteData } from \"./gpstrack\"\r\nimport { getActiveTab, resetDrawDialog } from \"./rg2ui\"\r\nimport {\r\n  createNameDropdown,\r\n  getDeletionInfo,\r\n  getFullResultforResultID,\r\n  setScoreCourseDisplay,\r\n  resultIDExists\r\n} from \"./results\"\r\nimport { t } from \"./translate\"\r\nimport {\r\n  createModalDialog,\r\n  formatSecsAsMMSS,\r\n  getAngle,\r\n  getDistanceBetweenPoints,\r\n  getSecsFromHHMMSS,\r\n  showWarningDialog\r\n} from \"./utils\"\r\n\r\nlet trackColour = \"#ff0000\"\r\nlet routeToDelete = null\r\nlet trk = new GPSTrack()\r\ntrk.routeData = new RouteData()\r\nlet pendingCourseID = null\r\n// the RouteData versions of these have the start control removed for saving\r\nlet controlx = []\r\nlet controly = []\r\nlet angles = []\r\nlet nextControl = 0\r\nlet previousValidControlIndex = 0\r\nlet isScoreCourse = false\r\n\r\nfunction addNewPoint(x, y) {\r\n  if (closeEnough(x, y)) {\r\n    addRouteDataPoint(controlx[nextControl], controly[nextControl])\r\n    // angles will be wrong for missing splits since we don't know angles between non-consecutive controls and I\r\n    // don't intend to start calculating them now...\r\n    alignMapToAngle(nextControl)\r\n    previousValidControlIndex = nextControl\r\n    nextControl = getNextValidControl(nextControl)\r\n    if (nextControl === controlx.length) {\r\n      document.getElementById(\"btn-save-route\").removeAttribute(\"disabled\")\r\n    }\r\n  } else {\r\n    addRouteDataPoint(Math.round(x), Math.round(y))\r\n  }\r\n  document.getElementById(\"btn-undo\").removeAttribute(\"disabled\")\r\n  redraw()\r\n}\r\n\r\nfunction addRouteDataPoint(x, y) {\r\n  trk.routeData.x.push(x)\r\n  trk.routeData.y.push(y)\r\n}\r\n\r\nfunction adjustBetweenTwoLockedPoints(p1, p2, handle) {\r\n  // case 5: adjust between two locked points\r\n  // see, there is an easier way\r\n  //console.log(\"Point (\", p1.x, \", \", p1.y, \") for handle \", handle.index, handle.basex, handle.basey)\r\n  const previousHandle = trk.handles.getPreviousLockedHandle(handle)\r\n  const nextHandle = trk.handles.getNextLockedHandle(handle)\r\n  // adjust route between previous locked handle and dragged point\r\n  scaleRotateAroundSingleLockedPoint(p1, p2, previousHandle, previousHandle.time, handle.time)\r\n  // adjust route between dragged point and next locked handle\r\n  scaleRotateAroundSingleLockedPoint(p1, p2, nextHandle, handle.time, nextHandle.time)\r\n}\r\n\r\nexport function adjustOffset(offset) {\r\n  trk.adjustOffset(offset)\r\n}\r\n\r\nexport function adjustTrack(p1, p2, button = undefined) {\r\n  // called whilst dragging a GPS track\r\n  //console.log(\"adjustTrack \", p1.x, p1.y, p2.x, p2.y)\r\n  // check if background is locked or right click\r\n  const chk = document.getElementById(\"chk-move-all\")\r\n  const moveAll = chk.checked\r\n  if (moveAll || button === config.RIGHT_CLICK) {\r\n    ctx.translate(p2.x - p1.x, p2.y - p1.y)\r\n  } else {\r\n    if (trk.handles.handlesLocked() > 0) {\r\n      if (trk.handles.handlesLocked() === 1) {\r\n        scaleRotateAroundSingleLockedPoint(\r\n          p1,\r\n          p2,\r\n          trk.handles.getSingleLockedHandle(),\r\n          trk.handles.getStartHandle().time,\r\n          trk.handles.getFinishHandle().time\r\n        )\r\n      } else {\r\n        // check if start of drag is on a handle\r\n        let handle = trk.handles.getHandleClicked(p1)\r\n        // we already know we have at least two points locked: cases to deal with from here\r\n        // 1: drag point not on a handle: exit\r\n        // 2: drag point on a locked handle: exit\r\n        // 3: drag point between start and a locked handle: scale and rotate around single point\r\n        // 4: drag point between locked handle and end: scale and rotate around single handle\r\n        // 5: drag point between two locked handles: shear around two fixed handles\r\n        //case 1\r\n        if (handle === undefined) {\r\n          return\r\n        }\r\n        // case 2\r\n        if (handle.locked) {\r\n          return\r\n        }\r\n        const earliest = trk.handles.getEarliestLockedHandle()\r\n        const latest = trk.handles.getLatestLockedHandle()\r\n\r\n        if (earliest.time >= handle.time) {\r\n          // case 3: drag point between start and a locked handle\r\n          scaleRotateAroundSingleLockedPoint(p1, p2, earliest, trk.handles.getStartHandle().time, earliest.time)\r\n        } else if (latest.time < handle.time) {\r\n          // case 4: drag point between locked handle and end\r\n          scaleRotateAroundSingleLockedPoint(p1, p2, latest, latest.time, trk.handles.getFinishHandle().time)\r\n        } else {\r\n          // case 5: adjust between two locked points\r\n          adjustBetweenTwoLockedPoints(p1, p2, handle)\r\n        }\r\n      }\r\n    } else {\r\n      // nothing locked so drag track\r\n      dragTrack(p2.x - p1.x, p2.y - p1.y)\r\n    }\r\n  }\r\n}\r\n\r\nfunction alignMapToAngle(control) {\r\n  if (options.alignMap) {\r\n    // don't adjust after we have got to the finish\r\n    let angle\r\n    if (control < controlx.length - 1) {\r\n      if (isScoreCourse) {\r\n        // need to calculate this here since score courses use variants for\r\n        // each person, not single courses\r\n        angle = getAngle(controlx[control], controly[control], controlx[control + 1], controly[control + 1])\r\n      } else {\r\n        angle = angles[control]\r\n      }\r\n      // course angles are based on horizontal as 0: need to reset to north\r\n      alignMap(angle + Math.PI / 2, controlx[control], controly[control])\r\n    }\r\n  } else {\r\n    alignMap(0, controlx[control], controly[control], false)\r\n  }\r\n}\r\n\r\nexport function autofitGPSTrack() {\r\n  trk.autofitTrack()\r\n}\r\n\r\nfunction closeEnough(x, y) {\r\n  // snapto: test if drawn route is close enough to control\r\n  let range = options.snap ? 8 : 2\r\n  // console.log(x, y, controlx[nextControl], controly[nextControl])\r\n  if (Math.abs(x - controlx[nextControl]) < range) {\r\n    if (Math.abs(y - controly[nextControl]) < range) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction confirmCourseChange() {\r\n  let dlg = {}\r\n  dlg.body = \"The route you have started to draw will be discarded. Are you sure you want to change the course?\"\r\n  dlg.title = \"Confirm course change\"\r\n  dlg.doText = \"Change course\"\r\n  dlg.onDo = doChangeCourse\r\n  dlg.onCancel = doCancelChangeCourse\r\n  createModalDialog(dlg)\r\n}\r\n\r\nexport function confirmDeleteRoute(id) {\r\n  routeToDelete = id\r\n  let dlg = {}\r\n  dlg.body = \"This route will be permanently deleted. Are you sure?\"\r\n  dlg.title = \"Confirm route delete\"\r\n  dlg.doText = \"Delete route\"\r\n  dlg.onDo = doDeleteRoute\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction doCancelChangeCourse() {\r\n  document.getElementById(\"rg2-select-course\").value = trk.routeData.courseid\r\n  document.getElementById(\"rg2-select-name\").value = trk.routeData.resultid\r\n  pendingCourseID = null\r\n}\r\n\r\nfunction doChangeCourse() {\r\n  doDrawingReset()\r\n  initialiseCourse(pendingCourseID)\r\n}\r\n\r\nfunction doDeleteRoute() {\r\n  const info = getDeletionInfo(routeToDelete)\r\n  const params = { type: \"deletemyroute\", id: getKartatEventID(), routeid: info.id }\r\n  postApi(JSON.stringify({ token: info.token }), params, handleRouteDeleted, \"Route save failed\")\r\n}\r\n\r\nfunction doDrawingReset() {\r\n  // remove any displayed courses before resetting drawing\r\n  if (trk.routeData.courseid !== null) {\r\n    setCourseDisplay(trk.routeData.courseid, false)\r\n  }\r\n  if (trk.routeData.resultid !== null) {\r\n    setScoreCourseDisplay(trk.routeData.resultid, false)\r\n  }\r\n  initialiseDrawing()\r\n}\r\n\r\nfunction doSaveRoute() {\r\n  setDeltas()\r\n  const params = { type: \"addroute\", id: trk.routeData.eventid }\r\n  postApi(JSON.stringify(trk.routeData), params, handleRouteSaved(trk.routeData.name), \"Route save failed\")\r\n  // reset route here to avoid annoying flash of redrawn route\r\n  doDrawingReset()\r\n}\r\n\r\nexport function dragEnded() {\r\n  if (trk.fileLoaded) {\r\n    // rebaseline GPS track\r\n    trk.savedBaseX = trk.baseX.slice(0)\r\n    trk.savedBaseY = trk.baseY.slice(0)\r\n    trk.baseX = trk.routeData.x.slice(0)\r\n    trk.baseY = trk.routeData.y.slice(0)\r\n    trk.handles.saveForUndo()\r\n    trk.handles.rebaselineXY()\r\n    document.getElementById(\"btn-undo-gps-adjust\").removeAttribute(\"disabled\")\r\n  }\r\n}\r\n\r\nexport function dragTrack(dx, dy) {\r\n  for (let i = 0; i < trk.baseX.length; i += 1) {\r\n    trk.routeData.x[i] = trk.baseX[i] + dx\r\n    trk.routeData.y[i] = trk.baseY[i] + dy\r\n  }\r\n  trk.handles.dragHandles(dx, dy)\r\n}\r\n\r\nexport function drawCircle(radius) {\r\n  ctx.arc(controlx[nextControl], controly[nextControl], radius, 0, 2 * Math.PI, false)\r\n  // fill in with transparent colour to highlight control better\r\n  ctx.fill()\r\n}\r\n\r\nexport function drawNewTrack() {\r\n  const opt = getOverprintDetails()\r\n  ctx.lineWidth = opt.overprintWidth\r\n  ctx.strokeStyle = config.RED\r\n  ctx.fillStyle = config.RED_30\r\n  // highlight next control if we have a course selected\r\n  if (nextControl > 0 && !trk.fileLoaded) {\r\n    ctx.beginPath()\r\n    if (nextControl < controlx.length - 1) {\r\n      // normal control\r\n      drawCircle(opt.controlRadius)\r\n    } else {\r\n      // finish\r\n      drawCircle(opt.finishInnerRadius)\r\n      ctx.stroke()\r\n      ctx.beginPath()\r\n      drawCircle(opt.finishOuterRadius)\r\n    }\r\n    // dot at centre of control circle\r\n    ctx.fillRect(controlx[nextControl] - 1, controly[nextControl] - 1, 3, 3)\r\n    ctx.stroke()\r\n  }\r\n  ctx.strokeStyle = trackColour\r\n  ctx.fillStyle = trackColour\r\n  ctx.font = \"10pt Arial\"\r\n  ctx.textAlign = \"left\"\r\n  ctx.globalAlpha = 0.6\r\n  drawRoute()\r\n  trk.handles.drawHandles()\r\n}\r\n\r\nfunction drawRoute() {\r\n  if (trk.routeData.x.length > 1) {\r\n    ctx.beginPath()\r\n    ctx.moveTo(trk.routeData.x[0], trk.routeData.y[0])\r\n    // don't bother with +3 second displays in GPS adjustment\r\n    for (let i = 1; i < trk.routeData.x.length; i += 1) {\r\n      ctx.lineTo(trk.routeData.x[i], trk.routeData.y[i])\r\n    }\r\n    ctx.stroke()\r\n  }\r\n}\r\n\r\nexport function getControlXY() {\r\n  return { x: controlx, y: controly }\r\n}\r\n\r\nfunction getNextValidControl(thisControl) {\r\n  // look through splits to find next control which has a split time\r\n  // to allow drawing for missed controls where the split time is 0\r\n  const splits = trk.routeData.splits\r\n  // allow for events with no results: splits will be a start and finish time only\r\n  // in this case just move to next control\r\n  if (splits.length === 2) {\r\n    return thisControl + 1\r\n  }\r\n  for (let i = thisControl + 1; i < splits.length; i += 1) {\r\n    if (splits[i] !== splits[i - 1]) {\r\n      return i\r\n    }\r\n  }\r\n  // implies we have no finish time which is unlikely but anyway...\r\n  return splits.length\r\n}\r\n\r\nfunction getPreviousValidControl(thisControl) {\r\n  // look through splits to find previous control which has a split time\r\n  // to allow drawing for missed controls where the split time is 0\r\n  const splits = trk.routeData.splits\r\n  // allow for events with no results: splits will be a start and finish time only\r\n  // in this case just move to previous control\r\n  if (splits.length === 2) {\r\n    return thisControl - 1\r\n  }\r\n  for (let i = thisControl - 1; i > 0; i -= 1) {\r\n    if (splits[i] !== splits[i - 1]) {\r\n      return i\r\n    }\r\n  }\r\n  // go back to start...\r\n  return 0\r\n}\r\n\r\nexport function gpsFileLoaded() {\r\n  return trk.fileLoaded\r\n}\r\n\r\nfunction handleRouteDeleted(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(t(\"Route deleted\"), t(\"Route has been deleted\"))\r\n    removeDrawnRouteDetails({\r\n      eventid: parseInt(response.eventid, 10),\r\n      id: parseInt(response.routeid, 10)\r\n    })\r\n    doGetEvents()\r\n  } else {\r\n    showWarningDialog(t(\"Delete failed\"), t(\"Delete failed\"))\r\n  }\r\n}\r\n\r\nconst handleRouteSaved = (name) => (response) => {\r\n  if (response.ok) {\r\n    routeSaved(response, name)\r\n  } else {\r\n    showWarningDialog(name, t(\"Your route was not saved. Please try again\"))\r\n  }\r\n}\r\n\r\nfunction initialiseCourse(courseid) {\r\n  pendingCourseID = null\r\n  trk.routeData = new RouteData()\r\n  trk.routeData.eventid = getKartatEventID()\r\n  trk.routeData.courseid = courseid\r\n  const course = getCourseDetails(courseid)\r\n  isScoreCourse = course.isScoreCourse\r\n  // save details for normal courses\r\n  // can't do this here for score courses since you need to know the\r\n  // variant for a given runner\r\n  if (!isScoreCourse) {\r\n    setCourseDisplay(courseid, true)\r\n    trk.routeData.coursename = course.name\r\n    if (course.excludeType === config.EXCLUDED_ZERO_SPLITS) {\r\n      trk.routeData.controlsToAdjust = course.exclude.indexOf(true)\r\n    } else {\r\n      trk.routeData.controlsToAdjust = course.x.length - 1\r\n    }\r\n    controlx = course.x.slice()\r\n    controly = course.y.slice()\r\n    trk.routeData.x.length = 0\r\n    trk.routeData.y.length = 0\r\n    trk.routeData.x[0] = controlx[0]\r\n    trk.routeData.y[0] = controly[0]\r\n    trk.routeData.controlx = controlx.slice()\r\n    trk.routeData.controly = controly.slice()\r\n    angles = course.angle.slice()\r\n  }\r\n  document.getElementById(\"rg2-select-course\").value = trk.routeData.courseid\r\n  createNameDropdown(courseid)\r\n  redraw()\r\n}\r\n\r\nexport function initialiseDrawing() {\r\n  // called when we know we have an event loaded\r\n  trk = new GPSTrack()\r\n  trk.routeData = new RouteData()\r\n  // the RouteData versions of these have the start control removed for saving\r\n  controlx.length = 0\r\n  controly.length = 0\r\n  angles.length = 0\r\n  nextControl = 0\r\n  previousValidControlIndex = 0\r\n  isScoreCourse = false\r\n  trk.initialiseGPS()\r\n  resetDrawDialog()\r\n  redraw()\r\n}\r\n\r\nexport function mouseUp(x, y, button) {\r\n  // console.log(x, y)\r\n  // called after a click at (x, y)\r\n  const delta = 3\r\n  if (getActiveTab() !== config.TAB_DRAW) {\r\n    return\r\n  }\r\n  if (trk.fileLoaded) {\r\n    const handle = trk.handles.getHandleClicked({ x: x, y: y })\r\n    if (handle !== undefined) {\r\n      // delete or unlock if not first or last entry\r\n      if (button === config.RIGHT_CLICK && handle.index !== 0 && handle.index !== trk.handles.length) {\r\n        if (handle.locked) {\r\n          // unlock, don't delete\r\n          trk.handles.unlockHandle(handle.index)\r\n        } else {\r\n          // delete handle\r\n          trk.handles.deleteHandle(handle.index)\r\n        }\r\n      } else {\r\n        // clicked in a handle area so toggle state\r\n        if (handle.locked) {\r\n          trk.handles.unlockHandle(handle.index)\r\n        } else {\r\n          trk.handles.lockHandle(handle.index)\r\n        }\r\n      }\r\n    } else {\r\n      // not an existing handle so read through track to look for x,y\r\n      for (let i = 0; i < trk.baseX.length; i += 1) {\r\n        if (\r\n          trk.baseX[i] + delta >= x &&\r\n          trk.baseX[i] - delta <= x &&\r\n          trk.baseY[i] + delta >= y &&\r\n          trk.baseY[i] - delta <= y\r\n        ) {\r\n          // found on track so add new handle\r\n          trk.handles.addHandle(x, y, i)\r\n          break\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // drawing new track\r\n    // only allow drawing if we have valid name and course\r\n    if (trk.routeData.resultid !== null && trk.routeData.courseid !== null) {\r\n      addNewPoint(x, y)\r\n    } else {\r\n      showWarningDialog(\r\n        \"No course/name\",\r\n        \"Please select course, name and time before you start drawing a route or upload a file.\"\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport function readGPS(file) {\r\n  trk.readGPS(file)\r\n}\r\n\r\nexport function resetDrawing() {\r\n  let dlg = {}\r\n  dlg.body = \"All information you have entered will be removed. Are you sure you want to reset?\"\r\n  dlg.title = \"Confirm reset\"\r\n  dlg.doText = \"Reset\"\r\n  dlg.onDo = doDrawingReset\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction rotatePoint(x, y, angle) {\r\n  // rotation matrix: see http://en.wikipedia.org/wiki/Rotation_matrix\r\n  let pt = {}\r\n  pt.x = Math.cos(angle) * x - Math.sin(angle) * y\r\n  pt.y = Math.sin(angle) * x + Math.cos(angle) * y\r\n  return pt\r\n}\r\n\r\nfunction routeSaved(data, name) {\r\n  // showShareDialog(\r\n  //   trk.routeData.name,\r\n  //   data.newid,\r\n  //   t(\"Your route has been saved\") + \".\"\r\n  // )\r\n  showWarningDialog(name, t(\"Your route has been saved\"))\r\n  saveDrawnRouteDetails({\r\n    eventid: parseInt(data.eventid, 10),\r\n    id: data.newid,\r\n    token: data.token\r\n  })\r\n  loadEventByKartatID(getKartatEventID())\r\n}\r\n\r\nexport function saveGPSRoute() {\r\n  // called to save GPS file route\r\n  // tidy up route details\r\n  const t = trk.routeData.time[trk.routeData.time.length - 1] - trk.routeData.time[0]\r\n  trk.routeData.totaltime = formatSecsAsMMSS(t)\r\n  // GPS uses UTC: adjust to local time based on local user setting\r\n  // only affects replay in real time\r\n  let date = new Date()\r\n  // returns offset in minutes, so convert to seconds\r\n  const offset = date.getTimezoneOffset() * 60\r\n  trk.routeData.startsecs = trk.routeData.time[0] - offset\r\n\r\n  for (let i = 0; i < trk.routeData.x.length; i += 1) {\r\n    trk.routeData.x[i] = Math.round(trk.routeData.x[i])\r\n    trk.routeData.y[i] = Math.round(trk.routeData.y[i])\r\n    // convert real time seconds to offset seconds from start time\r\n    trk.routeData.time[i] -= trk.routeData.startsecs\r\n  }\r\n  // allow for already having a GPS route for this runner\r\n  trk.routeData.resultid += config.GPS_RESULT_OFFSET\r\n  while (resultIDExists(trk.routeData.resultid)) {\r\n    trk.routeData.resultid += config.GPS_RESULT_OFFSET\r\n    // add marker(s) to name to show it is a duplicate\r\n    trk.routeData.name += \"*\"\r\n  }\r\n  trk.routeData.comments = document.getElementById(\"rg2-new-comments\").value\r\n  document.getElementById(\"btn-undo-gps-adjust\").setAttribute(\"disabled\", \"\")\r\n  doSaveRoute()\r\n}\r\n\r\nexport function saveRoute() {\r\n  // called to save manually entered route\r\n  trk.routeData.comments = document.getElementById(\"rg2-new-comments\").value\r\n  trk.routeData.controlx = controlx\r\n  trk.routeData.controly = controly\r\n  // don't need start control so remove it\r\n  trk.routeData.controlx.splice(0, 1)\r\n  trk.routeData.controly.splice(0, 1)\r\n  doSaveRoute()\r\n}\r\n\r\nfunction scaleRotateAroundSingleLockedPoint(p1, p2, p3, fromTime, toTime) {\r\n  // rotate p1 to p2 around p3\r\n  // scale and rotate track around single locked point\r\n  const scale = getDistanceBetweenPoints(p2.x, p2.y, p3.x, p3.y) / getDistanceBetweenPoints(p1.x, p1.y, p3.x, p3.y)\r\n  const angle = getAngle(p2.x, p2.y, p3.x, p3.y) - getAngle(p1.x, p1.y, p3.x, p3.y)\r\n  //console.log (p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, scale, angle, fromTime, toTime)\r\n  for (let i = fromTime; i <= toTime; i += 1) {\r\n    const pt = rotatePoint(trk.baseX[i] - p3.x, trk.baseY[i] - p3.y, angle)\r\n    trk.routeData.x[i] = pt.x * scale + p3.x\r\n    trk.routeData.y[i] = pt.y * scale + p3.y\r\n  }\r\n  trk.handles.alignHandles(trk.routeData)\r\n}\r\n\r\nfunction setDeltas() {\r\n  // send as differences rather than absolute values: provides almost 50% reduction in size of json file\r\n  for (let i = trk.routeData.x.length - 1; i > 0; i -= 1) {\r\n    trk.routeData.x[i] = trk.routeData.x[i] - trk.routeData.x[i - 1]\r\n    trk.routeData.y[i] = trk.routeData.y[i] - trk.routeData.y[i - 1]\r\n  }\r\n  // in theory time is same length as x and y but why take the risk...\r\n  for (let i = trk.routeData.time.length - 1; i > 0; i -= 1) {\r\n    trk.routeData.time[i] = trk.routeData.time[i] - trk.routeData.time[i - 1]\r\n  }\r\n}\r\n\r\nexport function setDrawingCourse(courseid) {\r\n  if (!isNaN(courseid)) {\r\n    if (trk.routeData.courseid !== null) {\r\n      // already have a course so we are trying to change it\r\n      if (trk.routeData.x.length > 1) {\r\n        // drawing started so ask to confirm change\r\n        pendingCourseID = courseid\r\n        confirmCourseChange()\r\n      } else {\r\n        // nothing done yet so just change course\r\n        if (trk.routeData.resultid !== null) {\r\n          setScoreCourseDisplay(trk.routeData.resultid, false)\r\n        }\r\n        setCourseDisplay(trk.routeData.courseid, false)\r\n        initialiseCourse(courseid)\r\n      }\r\n    } else {\r\n      // first time course has been selected\r\n      initialiseCourse(courseid)\r\n    }\r\n  }\r\n}\r\n\r\nexport function setName(resultid) {\r\n  // callback from select box when we have results\r\n  if (!isNaN(resultid)) {\r\n    const res = getFullResultforResultID(resultid)\r\n    if (res.hasValidTrack) {\r\n      const msg =\r\n        t(\"If you draw a new route it will overwrite the old route for this runner.\") +\r\n        \" \" +\r\n        t(\"GPS routes are saved separately and will not be overwritten.\")\r\n      showWarningDialog(t(\"Route already drawn\"), msg)\r\n    }\r\n    // remove old course from display just in case we missed it somewhere else\r\n    if (trk.routeData.resultid !== null) {\r\n      setScoreCourseDisplay(trk.routeData.resultid, false)\r\n    }\r\n    trk.routeData.resultid = res.resultid\r\n    trk.routeData.name = res.name\r\n    trk.routeData.splits = res.splits\r\n    // set up individual course if this is a score event\r\n    if (isScoreCourse) {\r\n      setScoreCourseDisplay(res.resultid, true)\r\n      controlx = res.scorex\r\n      controly = res.scorey\r\n      trk.routeData.x.length = 0\r\n      trk.routeData.y.length = 0\r\n      trk.routeData.x[0] = controlx[0]\r\n      trk.routeData.y[0] = controly[0]\r\n      trk.routeData.controlx = controlx\r\n      trk.routeData.controly = controly\r\n      nextControl = 1\r\n      redraw()\r\n    } else {\r\n      nextControl = getNextValidControl(0)\r\n      previousValidControlIndex = 0\r\n    }\r\n    alignMapToAngle(0)\r\n    startDrawing()\r\n  }\r\n}\r\n\r\nexport function setNameAndTime() {\r\n  // callback for an entered name when no results available\r\n  const nameEntry = document.getElementById(\"rg2-name-entry\")\r\n  const name = nameEntry.value.trim()\r\n  if (name) {\r\n    nameEntry.classList.add(\"is-valid\")\r\n  } else {\r\n    nameEntry.classList.remove(\"is-valid\")\r\n  }\r\n  const timeEntry = document.getElementById(\"rg2-time-entry\")\r\n  let time = timeEntry.value.trim()\r\n  // matches something like 0:00 to 999:59\r\n  if (time.match(/\\d+[:.][0-5]\\d$/)) {\r\n    timeEntry.classList.add(\"is-valid\")\r\n  } else {\r\n    timeEntry.classList.remove(\"is-valid\")\r\n    time = null\r\n  }\r\n  if (name && time && trk.routeData.courseid !== null) {\r\n    time = time.replace(\".\", \":\")\r\n    trk.routeData.name = name\r\n    trk.routeData.resultid = 0\r\n    trk.routeData.totaltime = time\r\n    trk.routeData.startsecs = 0\r\n    trk.routeData.time[0] = getSecsFromHHMMSS(time)\r\n    trk.routeData.totalsecs = getSecsFromHHMMSS(time)\r\n    nextControl = 1\r\n    const distanceSoFar = getCourseLegLengths(trk.routeData.courseid)\r\n    const length = distanceSoFar[distanceSoFar.length - 1]\r\n    // generate pro rata splits\r\n    let splits = []\r\n    for (let i = 0; i < distanceSoFar.length; i = i + 1) {\r\n      splits[i] = parseInt((distanceSoFar[i] / length) * trk.routeData.totalsecs, 10)\r\n    }\r\n    trk.routeData.splits = splits\r\n    previousValidControlIndex = 0\r\n    redraw()\r\n    startDrawing()\r\n  }\r\n}\r\n\r\nexport function showCourseInProgress() {\r\n  if (trk.routeData.courseid !== null) {\r\n    if (isScoreCourse) {\r\n      setScoreCourseDisplay(trk.routeData.resultid, true)\r\n    } else {\r\n      setCourseDisplay(trk.routeData.courseid, true)\r\n    }\r\n  }\r\n}\r\n\r\nexport function startDrawing() {\r\n  document.getElementById(\"btn-three-seconds\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"btn-reset-drawing\").removeAttribute(\"disabled\", \"\")\r\n  // setting value to null allows you to open the same file again if needed\r\n  // TODO really???\r\n  const file = document.getElementById(\"rg2-load-gps-file\")\r\n  file.removeAttribute(\"disabled\")\r\n  redraw()\r\n}\r\n\r\nexport function undoGPSAdjust() {\r\n  // restore route from before last adjust operation\r\n  trk.baseX = trk.savedBaseX.slice(0)\r\n  trk.baseY = trk.savedBaseY.slice(0)\r\n  trk.routeData.x = trk.savedBaseX.slice(0)\r\n  trk.routeData.y = trk.savedBaseY.slice(0)\r\n  trk.handles.undo()\r\n  const btn = document.getElementById(\"btn-undo-gps-adjust\")\r\n  btn.setAttribute(\"disabled\", \"\")\r\n  redraw()\r\n}\r\n\r\nexport function undoLastPoint() {\r\n  // remove last point if we have one\r\n  const points = trk.routeData.x.length\r\n  if (points > 1) {\r\n    // are we undoing from previous control?\r\n    if (\r\n      controlx[previousValidControlIndex] === trk.routeData.x[points - 1] &&\r\n      controly[previousValidControlIndex] === trk.routeData.y[points - 1]\r\n    ) {\r\n      // are we undoing from the finish?\r\n      if (nextControl === controlx.length) {\r\n        document.getElementById(\"btn-save-route\").setAttribute(\"disabled\", \"\")\r\n      }\r\n      nextControl = previousValidControlIndex\r\n      previousValidControlIndex = getPreviousValidControl(nextControl)\r\n      alignMapToAngle(nextControl - 1)\r\n    }\r\n    trk.routeData.x.pop()\r\n    trk.routeData.y.pop()\r\n  }\r\n  // note that array length has changed so can't use points\r\n  if (trk.routeData.x.length > 1) {\r\n    document.getElementById(\"btn-undo\").removeAttribute(\"disabled\")\r\n  } else {\r\n    document.getElementById(\"btn-undo\").setAttribute(\"disabled\", \"\")\r\n  }\r\n  redraw()\r\n}\r\n\r\nexport function waitThreeSeconds() {\r\n  // insert a new point in the same place as the last point\r\n  addRouteDataPoint(trk.routeData.x[trk.routeData.x.length - 1], trk.routeData.y[trk.routeData.y.length - 1])\r\n  redraw()\r\n}\r\n","import { Worldfile } from \"./worldfile\"\r\n\r\nexport class Event {\r\n  constructor(data) {\r\n    this.kartatid = data.id\r\n    this.mapid = data.mapid\r\n    this.format = data.format\r\n    this.name = data.name\r\n    this.date = data.date\r\n    this.club = data.club\r\n    this.rawtype = data.type\r\n    switch (data.type) {\r\n      case \"I\":\r\n        this.type = \"International event\"\r\n        break\r\n      case \"N\":\r\n        this.type = \"National event\"\r\n        break\r\n      case \"R\":\r\n        this.type = \"Regional event\"\r\n        break\r\n      case \"L\":\r\n        this.type = \"Local event\"\r\n        break\r\n      case \"T\":\r\n        this.type = \"Training event\"\r\n        break\r\n      default:\r\n        this.type = \"Unknown\"\r\n        break\r\n    }\r\n    this.comment = data.comment\r\n    this.locked = data.locked\r\n    this.courses = 0\r\n    if (data.suffix === undefined) {\r\n      this.mapfilename = this.mapid + \".\" + \"jpg\"\r\n    } else {\r\n      this.mapfilename = this.mapid + \".\" + data.suffix\r\n    }\r\n    this.worldfile = new Worldfile(data)\r\n  }\r\n}\r\n","import { getApi } from \"./api\"\r\nimport { resetAnimation } from \"./animation\"\r\nimport { loadNewMap, getMapSize, redraw } from \"./canvas\"\r\nimport { config } from \"./config\"\r\nimport { controls, deleteAllCourses, getExcludedText, saveCourses } from \"./courses\"\r\nimport { initialiseDrawing } from \"./draw\"\r\nimport { Event } from \"./event\"\r\nimport { getHashID, setEventHash } from \"./hash\"\r\nimport { decode } from \"html-entities\"\r\nimport { eventListLoaded } from \"./manager\"\r\nimport { deleteResultsForEvent, getCommentsForEvent, getResultsStats, saveResults, saveRoutes } from \"./results\"\r\nimport { createEventMenu } from \"./rg2ui\"\r\nimport { t } from \"./translate\"\r\nimport { getDistanceBetweenPoints, getLatLonDistance } from \"./utils\"\r\n\r\nlet events = []\r\nlet activeEventID = null\r\nlet eventRequestInProgress = false\r\n\r\nfunction configureUIForNewEvent(kartatid) {\r\n  const events = document.querySelectorAll(\"#rg2-event-table tr\")\r\n  // highlight active event in event list\r\n  for (let row of events) {\r\n    if (parseInt(row.dataset.kartatid, 10) === kartatid) {\r\n      row.classList.add(\"table-success\")\r\n    } else {\r\n      row.classList.remove(\"table-success\")\r\n    }\r\n  }\r\n  const btnSplitsbrowser = document.getElementById(\"btn-splitsbrowser\")\r\n  if (rg2Config.enable_splitsbrowser && eventHasResults()) {\r\n    btnSplitsbrowser.classList.remove(\"d-none\")\r\n  } else {\r\n    btnSplitsbrowser.classList.add(\"d-none\")\r\n  }\r\n  document.getElementById(\"btn-toggle-controls\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"btn-runners\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"btn-measure\").removeAttribute(\"disabled\")\r\n}\r\n\r\nfunction doGetEvent(kartatid) {\r\n  setActiveEventIDByKartatID(null)\r\n  const params = { type: \"event\", id: kartatid }\r\n  getApi(params, handleEventResponse, \"Event request failed\")\r\n}\r\n\r\nexport function doGetEvents() {\r\n  const params = { type: \"events\" }\r\n  getApi(params, handleEventsResponse, \"Events request failed\")\r\n}\r\n\r\nexport function eventIsLocked() {\r\n  if (activeEventID === null) {\r\n    return false\r\n  }\r\n  return events[activeEventID].locked\r\n}\r\n\r\nexport function eventLoadFailed() {\r\n  eventRequestInProgress = false\r\n}\r\n\r\nexport function formatEvents() {\r\n  let html = \"<table class='table table-striped table-hover table-sm'><tbody id='rg2-event-table'>\"\r\n  for (let i = events.length - 1; i >= 0; i -= 1) {\r\n    let title = t(events[i].type, \"\") + \": \" + events[i].date\r\n    if (events[i].comment !== \"\") {\r\n      title += \": \" + events[i].comment\r\n    }\r\n    let comment = \"\"\r\n    if (events[i].comment !== \"\") {\r\n      comment = `<i class='bi-info-circle' id='info-${i}'></i>`\r\n    }\r\n    let georef = \"\"\r\n    if (events[i].worldfile.valid) {\r\n      georef = `<i class='bi-globe' id='info-${i}'></i>`\r\n    }\r\n    let lock = \"\"\r\n    if (events[i].locked) {\r\n      lock = `<i class='bi-lock-fill' id='info-${i}'></i>`\r\n    }\r\n    html += `<tr data-kartatid=\"${events[i].kartatid}\"><td class=\"event-date\">${events[i].date}</td><td title='${title}'>`\r\n    html += `${events[i].name} ${lock} ${georef} ${comment}</td ></tr >`\r\n  }\r\n  html += `</tbody></table>`\r\n  return html\r\n}\r\n\r\nfunction getActiveEventDate() {\r\n  if (activeEventID !== null) {\r\n    return events[activeEventID].date\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function getActiveEventID() {\r\n  return activeEventID\r\n}\r\n\r\nexport function getActiveKartatID() {\r\n  if (activeEventID !== null) {\r\n    return events[activeEventID].kartatid\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport function getActiveEventName() {\r\n  if (activeEventID !== null) {\r\n    return events[activeEventID].name\r\n  }\r\n  return \"Routegadget 2\"\r\n}\r\n\r\nexport function getActiveMapID() {\r\n  if (activeEventID !== null) {\r\n    return events[activeEventID].mapid\r\n  }\r\n  return null\r\n}\r\n\r\nexport function getEventIDForKartatID(kartatid) {\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].kartatid === kartatid) {\r\n      return i\r\n    }\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport function eventHasResults() {\r\n  if (activeEventID !== null) {\r\n    return (\r\n      events[activeEventID].format === config.FORMAT_NORMAL ||\r\n      events[activeEventID].format === config.FORMAT_SCORE_EVENT\r\n    )\r\n  }\r\n  return true\r\n}\r\n\r\nexport function getEventInfoForKartatID(kartatid) {\r\n  kartatid = kartatid || getKartatEventID()\r\n  const realid = getEventIDForKartatID(kartatid)\r\n  let info = events[realid]\r\n  info.id = realid\r\n  info.controls = controls.getControlCount()\r\n  info.exclude = getExcludedText()\r\n  return info\r\n}\r\n\r\nexport function getEventStats() {\r\n  // check there is an event to report on\r\n  if (activeEventID === null) {\r\n    return \"\"\r\n  }\r\n  const id = getKartatEventID()\r\n  const eventinfo = getEventInfoForKartatID(parseInt(id, 10))\r\n  let stats = `<div class='fs-4 fw-bolder pb-3'>${t(\"Event statistics\")}</div>`\r\n  stats += `<table class='table table-sm table-striped-columns table-bordered'><tbody>`\r\n  stats += `<tr><td>${t(\"Event\")}</td><td>${eventinfo.name}:${eventinfo.date}</td></tr>`\r\n  if (eventinfo.comment) {\r\n    stats += `<tr><td>${t(\"Comments\")}</td><td>${eventinfo.comment}</td></tr>`\r\n  }\r\n  stats += getResultsStats(eventinfo.controls, eventinfo.worldfile.valid)\r\n  stats += `</tbody></table>`\r\n  stats += `<hr class=\"border border-primary opacity-75\" />`\r\n  stats += getCommentsForEvent()\r\n  // #177 not pretty but gets round problems of double encoding\r\n  stats = stats.replace(/&amp;/g, \"&\")\r\n  return stats\r\n}\r\n\r\nexport function getKartatEventID() {\r\n  if (activeEventID === null) {\r\n    return null\r\n  }\r\n  return events[activeEventID].kartatid\r\n}\r\n\r\nexport function getLengthUnits() {\r\n  if (activeEventID === null || !mapIsGeoreferenced()) {\r\n    return \"px\"\r\n  }\r\n  return \"m\"\r\n}\r\n\r\nexport function getMapFileName(kartatid) {\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].kartatid === kartatid) {\r\n      return events[i].mapfilename\r\n    }\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function getMetresPerPixel() {\r\n  if (activeEventID === null || !mapIsGeoreferenced()) {\r\n    return undefined\r\n  }\r\n  const size = getMapSize()\r\n  const pixels = getDistanceBetweenPoints(0, 0, size.width, size.height)\r\n  const w = events[activeEventID].worldfile\r\n  const lon1 = w.C\r\n  const lat1 = w.F\r\n  const lon2 = w.A * size.width + w.B * size.height + w.C\r\n  const lat2 = w.D * size.width + w.E * size.height + w.F\r\n  return getLatLonDistance(lat1, lon1, lat2, lon2) / pixels\r\n}\r\n\r\nexport function getWorldFile() {\r\n  if (activeEventID === null) {\r\n    return null\r\n  }\r\n  return events[activeEventID].worldfile\r\n}\r\n\r\nfunction handleEventResponse(response, kartatid) {\r\n  eventRequestInProgress = false\r\n  setEventHash(kartatid)\r\n  setActiveEventIDByKartatID(kartatid)\r\n  setEventTitleBar()\r\n  saveCourses(response.courses)\r\n  saveResults(response.results)\r\n  saveRoutes(response.routes)\r\n  initialiseDrawing()\r\n  configureUIForNewEvent(kartatid)\r\n}\r\n\r\nfunction handleEventsResponse(response) {\r\n  events.length = 0\r\n  activeEventID = null\r\n  for (const event of response.events) {\r\n    events.push(new Event(event))\r\n  }\r\n  createEventMenu()\r\n  // load requested event if set\r\n  // input is kartat ID so need to find internal ID first\r\n  const kartatid = getHashID()\r\n  if (kartatid) {\r\n    loadEventByKartatID(kartatid)\r\n  }\r\n  if (config.managing()) {\r\n    eventListLoaded(events)\r\n  }\r\n}\r\n\r\nexport function isScoreEvent() {\r\n  if (activeEventID !== null) {\r\n    return (\r\n      events[activeEventID].format === config.FORMAT_SCORE_EVENT ||\r\n      events[activeEventID].format === config.FORMAT_SCORE_EVENT_NO_RESULTS\r\n    )\r\n  }\r\n  return false\r\n}\r\n\r\nexport function isValidKartatID(id) {\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].kartatid === id) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function loadEventByKartatID(kartatid) {\r\n  // prevent double loading if user double clicks on event or we get a garbage event id from a hash\r\n  if (eventRequestInProgress || !isValidKartatID(kartatid)) {\r\n    return\r\n  }\r\n  eventRequestInProgress = true\r\n  // clear animation first to avoid redraw problems as things get deleted\r\n  resetAnimation()\r\n  deleteResultsForEvent()\r\n  deleteAllCourses()\r\n  loadNewMap(rg2Config.maps_url + getMapFileName(kartatid))\r\n  document.getElementById(\"rg2-load-progress-label\").textContent = t(\"Loading event\", \"\")\r\n  document.getElementById(\"rg2-load-progress\").classList.remove(\"d-none\")\r\n  doGetEvent(kartatid)\r\n  redraw()\r\n}\r\n\r\nexport function mapIDIsInUse(mapID) {\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].mapid === mapID) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function mapIsGeoreferenced() {\r\n  if (activeEventID === null) {\r\n    return false\r\n  }\r\n  return events[activeEventID].worldfile.valid\r\n}\r\n\r\nexport function setActiveEventIDByKartatID(kartatid) {\r\n  activeEventID = null\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].kartatid === kartatid) {\r\n      activeEventID = i\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nexport function setEventTitleBar() {\r\n  let title = \"\"\r\n  title = getActiveEventDate() + \" \" + decode(getActiveEventName())\r\n  document.title = title\r\n  if (mapIsGeoreferenced()) {\r\n    title = \"<i class='bi-globe'>&nbsp;</i>\" + title\r\n  }\r\n  if (eventIsLocked()) {\r\n    title = \"<i class='bi-lock-fill'>&nbsp;</i>\" + title\r\n  }\r\n  document.getElementById(\"rg2-event-title\").innerHTML = title\r\n}\r\n","import { getAngle, getDistanceBetweenPoints } from \"./utils\"\r\nimport { getMetresPerPixel } from \"./events\"\r\nimport { getOverprintDetails } from \"./config\"\r\nimport { ctx } from \"./canvas\"\r\nimport { controls } from \"./courses\"\r\n\r\nexport class Course {\r\n  constructor(data, isScoreCourse) {\r\n    this.name = data.name\r\n    this.trackcount = 0\r\n    this.display = false\r\n    this.courseid = data.courseid\r\n    this.codes = data.codes\r\n    this.setExcluded(data)\r\n    this.filterTo = this.codes.length\r\n    this.filterFrom = 0\r\n    this.x = data.xpos\r\n    this.y = data.ypos\r\n    this.isScoreCourse = isScoreCourse\r\n    this.resultcount = 0\r\n    // save angle to next control to simplify later calculations\r\n    this.angle = []\r\n    // save angle to show control code text\r\n    this.textAngle = []\r\n    this.setAngles()\r\n    this.length = this.setLength()\r\n  }\r\n\r\n  drawCourse(intensity) {\r\n    if (this.display) {\r\n      const opt = getOverprintDetails()\r\n      ctx.globalAlpha = intensity\r\n      controls.drawStart(this.x[0], this.y[0], \"\", this.angle[0], opt)\r\n      // don't join up controls for score events\r\n      if (!this.isScoreCourse) {\r\n        const filter = { from: this.filterFrom, to: this.filterTo }\r\n        this.drawLinesBetweenControls({ x: this.x, y: this.y }, this.angle, opt, filter)\r\n      }\r\n      if (this.isScoreCourse) {\r\n        for (let i = 1; i < this.x.length; i += 1) {\r\n          if (this.codes[i].indexOf(\"F\") === 0 || this.codes[i].indexOf(\"M\") === 0) {\r\n            controls.drawFinish(this.x[i], this.y[i], \"\", opt)\r\n          } else {\r\n            controls.drawSingleControl(this.x[i], this.y[i], this.codes[i], this.textAngle[i], opt)\r\n          }\r\n        }\r\n      } else {\r\n        // don't want to draw an extra circle round the start or finish\r\n        const from = Math.max(this.filterFrom, 1)\r\n        const to = Math.min(this.filterTo + 1, this.x.length - 1)\r\n        for (let i = from; i < to; i += 1) {\r\n          controls.drawSingleControl(this.x[i], this.y[i], i, this.textAngle[i], opt)\r\n        }\r\n        controls.drawFinish(this.x[this.x.length - 1], this.y[this.y.length - 1], \"\", opt)\r\n      }\r\n    }\r\n  }\r\n\r\n  drawLinesBetweenControls(pt, angle, opt, filter) {\r\n    let dist\r\n    for (let i = filter.from; i < filter.to; i += 1) {\r\n      if (i === 0) {\r\n        dist = opt.startTriangleLength\r\n      } else {\r\n        dist = opt.controlRadius\r\n      }\r\n      const c1x = pt.x[i] + dist * Math.cos(angle[i])\r\n      const c1y = pt.y[i] + dist * Math.sin(angle[i])\r\n      //Assume the last control in the array is a finish\r\n      if (i === this.x.length - 2) {\r\n        dist = opt.finishOuterRadius\r\n      } else {\r\n        dist = opt.controlRadius\r\n      }\r\n      const c2x = pt.x[i + 1] - dist * Math.cos(angle[i])\r\n      const c2y = pt.y[i + 1] - dist * Math.sin(angle[i])\r\n      ctx.beginPath()\r\n      ctx.moveTo(c1x, c1y)\r\n      ctx.lineTo(c2x, c2y)\r\n      ctx.stroke()\r\n    }\r\n  }\r\n\r\n  getLegLengths() {\r\n    // used for events with no results to allow pro rata splits\r\n    let distanceSoFar = []\r\n    if (this.isScoreCourse) {\r\n      // arbitrary for now...\r\n      distanceSoFar[1] = 1\r\n      return distanceSoFar\r\n    }\r\n    distanceSoFar[0] = 0\r\n    for (let i = 1; i < this.x.length; i += 1) {\r\n      distanceSoFar[i] = parseInt(\r\n        distanceSoFar[i - 1] + getDistanceBetweenPoints(this.x[i], this.y[i], this.x[i - 1], this.y[i - 1]),\r\n        0\r\n      )\r\n    }\r\n    return distanceSoFar\r\n  }\r\n\r\n  incrementTracksCount() {\r\n    this.trackcount += 1\r\n  }\r\n\r\n  setAngles() {\r\n    for (let i = 0; i < this.x.length - 1; i += 1) {\r\n      if (this.isScoreCourse) {\r\n        // align score event start triangle and controls upwards\r\n        this.angle[i] = Math.PI * 1.5\r\n        this.textAngle[i] = Math.PI * 0.25\r\n      } else {\r\n        // angle of line to next control\r\n        this.angle[i] = getAngle(this.x[i], this.y[i], this.x[i + 1], this.y[i + 1])\r\n        // create bisector of angle to position number\r\n        const c1x = Math.sin(this.angle[i - 1])\r\n        const c1y = Math.cos(this.angle[i - 1])\r\n        const c2x = Math.sin(this.angle[i]) + c1x\r\n        const c2y = Math.cos(this.angle[i]) + c1y\r\n        const c3x = c2x / 2\r\n        const c3y = c2y / 2\r\n        this.textAngle[i] = getAngle(c3x, c3y, c1x, c1y)\r\n      }\r\n    }\r\n    // angle for finish aligns to north\r\n    this.angle[this.x.length - 1] = Math.PI * 1.5\r\n    this.textAngle[this.x.length - 1] = Math.PI * 1.5\r\n  }\r\n\r\n  setDisplay(display) {\r\n    this.display = display\r\n  }\r\n\r\n  setExcluded(data) {\r\n    this.excludeType = data.excludeType\r\n    this.exclude = data.codes.map((control, i) => {\r\n      if (data.exclude.findIndex((ex) => ex === i) > -1) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    })\r\n    this.allowed = data.codes.map((control, i) => {\r\n      if (data.exclude.findIndex((ex) => ex === i) > -1) {\r\n        return data.allowed[data.exclude.findIndex((ex) => ex === i)]\r\n      } else {\r\n        return 0\r\n      }\r\n    })\r\n  }\r\n\r\n  setLength() {\r\n    let length = 0\r\n    const metresPerPixel = getMetresPerPixel()\r\n    if (metresPerPixel === undefined || this.isScoreCourse) {\r\n      return undefined\r\n    }\r\n    for (let i = 1; i < this.x.length; i += 1) {\r\n      length += getDistanceBetweenPoints(this.x[i], this.y[i], this.x[i - 1], this.y[i - 1])\r\n    }\r\n    if (length === 0) {\r\n      return undefined\r\n    } else {\r\n      return ((length * metresPerPixel) / 1000).toFixed(1)\r\n    }\r\n  }\r\n}\r\n","import { redraw } from \"./canvas\"\r\nimport { config } from \"./config\"\r\nimport { Controls } from \"./controls\"\r\nimport { Course } from \"./course\"\r\nimport { setDrawingCourse } from \"./draw\"\r\nimport { isScoreEvent } from \"./events\"\r\nimport { decode } from \"html-entities\"\r\nimport { anyTracksForCourseDisplayed, countResultsByCourseID } from \"./results\"\r\nimport { t } from \"./translate\"\r\nimport { generateOption } from \"./utils\"\r\nimport \"toolcool-range-slider\"\r\n\r\n// indexed by the provided courseid which omits 0 and hence a sparse array\r\n// careful when iterating or getting length!\r\nlet courses = []\r\nexport let controls = undefined\r\nlet totaltracks = 0\r\nlet numberOfCourses = 0\r\nlet highestControlNumber = 0\r\n\r\nfunction addCourse(data) {\r\n  courses[data.courseid] = new Course(data, isScoreEvent())\r\n  numberOfCourses += 1\r\n  // allow for courses with no defined controls\r\n  // careful here: != catches null and undefined, but !== just catches undefined\r\n  if (courses[data.courseid].codes !== undefined) {\r\n    if (courses[data.courseid].codes.length > highestControlNumber) {\r\n      // the codes includes Start and Finish: we don't need F so subtract 1 to get controls\r\n      highestControlNumber = courses[data.courseid].codes.length - 1\r\n    }\r\n  }\r\n}\r\n\r\nexport function allCoursesDisplayed() {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      if (!courses[i].display) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function createCourseDropdown() {\r\n  let dropdown = document.getElementById(\"rg2-select-course\")\r\n  dropdown.innerHTML = \"\"\r\n  dropdown.options.add(generateOption(null, t(\"Select course\", \"\")))\r\n  for (let i = 0; i < courses.length; i = i + 1) {\r\n    if (courses[i] !== undefined) {\r\n      dropdown.options.add(generateOption(i, decode(courses[i].name)))\r\n    }\r\n  }\r\n  dropdown.addEventListener(\"change\", (e) => {\r\n    setDrawingCourse(parseInt(e.target.value, 10))\r\n  })\r\n}\r\n\r\nexport function createCourseMenu() {\r\n  const el = document.getElementById(\"rg2-course-table\")\r\n  el.innerHTML = formatCourses()\r\n  const filterTable = document.getElementById(\"rg2-course-filter-table\")\r\n  filterTable.innerHTML = formatCourseFilters()\r\n  const filters = document.querySelectorAll(\"[data-course-filter]\")\r\n  filters.forEach((filter) => {\r\n    filter.addEventListener(\"change\", filterChanged)\r\n  })\r\n}\r\n\r\nexport function deleteAllCourses() {\r\n  courses.length = 0\r\n  totaltracks = 0\r\n  numberOfCourses = 0\r\n  highestControlNumber = 0\r\n}\r\n\r\nexport function drawCourses(intensity) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      courses[i].drawCourse(intensity)\r\n    }\r\n  }\r\n}\r\n\r\nexport function drawLinesBetweenControls(pt, angle, courseid, opt, filter) {\r\n  courses[courseid].drawLinesBetweenControls(pt, angle, opt, filter)\r\n}\r\n\r\nfunction filterChanged(e) {\r\n  const courseid = parseInt(e.target.dataset.courseFilter, 10)\r\n  courses[courseid].filterFrom = e.detail.value1\r\n  courses[courseid].filterTo = e.detail.value2\r\n  redraw()\r\n}\r\n\r\nfunction formatCourseDetails() {\r\n  let details = { html: \"\", res: 0, coursecount: 0 }\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      details.coursecount = details.coursecount + 1\r\n      details.html += [\r\n        `<tr><td>${courses[i].name}</td >`,\r\n        `<td><input class='showcourse' data-courseid=${i} type='checkbox' name='course'></input></td>`,\r\n        `<td class='text-center'>${courses[i].resultcount}</td><td class='text-center'>${courses[i].trackcount}</td><td>`\r\n      ].join(\"\")\r\n      details.res += courses[i].resultcount\r\n      if (courses[i].trackcount > 0) {\r\n        details.html += `<input data-courseid=${courses[i].courseid} class='allcoursetracks' type=checkbox name=track></input></td>`\r\n        details.html += `<td><input data-courseid=${courses[i].courseid} class='allcoursetracksreplay' type=checkbox name=replay></input>`\r\n      } else {\r\n        details.html += `</td><td>`\r\n      }\r\n      details.html += `</td></tr>`\r\n    }\r\n  }\r\n  return details\r\n}\r\n\r\nfunction formatCourseFilters() {\r\n  let html = \"\"\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      // only filter for normal events with at least one control as well as start and finish\r\n      if (!courses[i].isScoreCourse && courses[i].codes.length > 2) {\r\n        html += [\r\n          `<div id='course-filter-${courses[i].courseid}' data-display=\"false\" data-course=\"${courses[i].courseid}\" class=\"row\">`,\r\n          `<div class=\"col-3\">${courses[i].name}</div>`,\r\n          `<div class=\"col-9 pt-2\">`,\r\n          `  <tc-range-slider step=\"1\" min=\"0\" max=\"${courses[i].codes.length}\" value1=\"0\"`,\r\n          `value2=\"${courses[i].codes.length}\" round=\"0\" data-course-filter=\"${courses[i].courseid}>\"`,\r\n          `</tc-range-slider></div></div>`\r\n        ].join(\"\")\r\n      }\r\n    }\r\n  }\r\n  return html\r\n}\r\n\r\nfunction formatCourses() {\r\n  let html = [\r\n    `<table class='table table-striped table-hover table-sm'><thead>`,\r\n    `<tr><th>${t(\"Course\")}</th><th><i class='bi-eye-fill'></i></th><th>${t(\"Runners\")}</th>`,\r\n    `<th>${t(\"Routes\")}</th><th><i class='bi-pencil'></i></th><th><i class='bi-play-fill'></i></th></tr>`,\r\n    `</thead><tbody class=\"table-group-divider\">`\r\n  ].join(\"\")\r\n  const details = formatCourseDetails()\r\n  // add bottom row for all courses checkboxes\r\n  html +=\r\n    details.html +\r\n    `</tbody><tfoot class=\"table-group-divider\"><tr class='allitemsrow'><td>${t(\"All\")}</td>\r\n    <td><input class='showallcourses' data-id=\"all\" type=checkbox name=course></input></td>\r\n    <td class='text-center'>${details.res}</td><td class='text-center'>${totaltracks}</td><td>`\r\n\r\n  if (totaltracks > 0) {\r\n    html += `<input data-id=\"all\" class='alltracks' type=checkbox name=track></input>`\r\n  }\r\n  html += \"</td><td></td></tr></tfoot></table>\"\r\n  return html\r\n}\r\n\r\nexport function getCourses() {\r\n  return courses\r\n}\r\n\r\nexport function getCourseDetails(courseid) {\r\n  return courses[courseid]\r\n}\r\n\r\nexport function getCourseDetailsByName(coursename) {\r\n  // courses is a sparse array so need to handle empty entries\r\n  return courses.find((course) => course ? course.name === coursename: false)\r\n}\r\n\r\nexport function getCourseLegLengths(courseid) {\r\n  return courses[courseid].getLegLengths()\r\n}\r\n\r\nexport function getCourseName(courseid) {\r\n  return courses[courseid].name\r\n}\r\n\r\nexport function getCoursesForEvent() {\r\n  let list = []\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      let course = {}\r\n      course.id = courses[i].courseid\r\n      course.name = courses[i].name\r\n      course.results = courses[i].resultcount\r\n      list.push(course)\r\n    }\r\n  }\r\n  return list\r\n}\r\n\r\nexport function getCoursesOnDisplay() {\r\n  let displayed = []\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      if (courses[i].display) {\r\n        displayed.push(i)\r\n      }\r\n    }\r\n  }\r\n  return displayed\r\n}\r\n\r\nexport function getExcludedText() {\r\n  // recreates excluded_* text file contents\r\n  // courseid|type|control,time|...\r\n  let text = \"\"\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      if (courses[i].excludeType !== config.EXCLUDED_NONE) {\r\n        text = text + courses[i].courseid + \"|\" + courses[i].excludeType\r\n        text =\r\n          text +\r\n          courses[i].exclude.reduce((accum, exclude, index) => {\r\n            return exclude ? accum + \"|\" + index + \",\" + courses[i].allowed[index] : accum\r\n          }, \"\")\r\n        text = text + \"\\n\"\r\n      }\r\n    }\r\n  }\r\n  return text\r\n}\r\n\r\nexport function getFilterDetails(courseid) {\r\n  let filter = {}\r\n  filter.filterFrom = courses[courseid].filterFrom\r\n  filter.filterTo = courses[courseid].filterTo\r\n  return filter\r\n}\r\n\r\nexport function getHighestControlNumber() {\r\n  return highestControlNumber\r\n}\r\n\r\nexport function getNumberOfControlsOnCourse(courseid) {\r\n  // codes list includes \"S\" and \"F\", so allow for them\r\n  return courses[courseid].codes.length - 2\r\n}\r\n\r\nexport function getnumberOfCourses() {\r\n  return numberOfCourses\r\n}\r\n\r\nexport function incrementTracksCount(courseid) {\r\n  courses[courseid].incrementTracksCount()\r\n  totaltracks += 1\r\n}\r\n\r\nexport function initialiseCourses() {\r\n  controls = new Controls()\r\n}\r\n\r\nexport function isValidCourseId(courseid) {\r\n  // detects the unused entries in the courses array\r\n  // index 0 never used: some others not used if you only set up certain courses for a set of results\r\n  return courseid in courses\r\n}\r\n\r\nexport function saveCourses(data) {\r\n  deleteAllCourses()\r\n  controls.deleteAllControls()\r\n  document.getElementById(\"rg2-load-progress-label\").innerHTML = t(\"Saving courses\")\r\n  for (const course of data) {\r\n    addCourse(course)\r\n  }\r\n  controls.generateControlList()\r\n}\r\n\r\nexport function setAllCoursesDisplay(display) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      courses[i].setDisplay(display)\r\n    }\r\n  }\r\n}\r\n\r\nexport function setAllFilters() {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      setFilter(i)\r\n    }\r\n  }\r\n}\r\n\r\nexport function setCourseDisplay(courseid, display) {\r\n  if (courses[courseid] !== undefined) {\r\n    courses[courseid].setDisplay(display)\r\n    setFilter(courseid)\r\n  }\r\n}\r\n\r\nexport function setFilter(courseid) {\r\n  // may come in as string or integer\r\n  courseid = parseInt(courseid, 10)\r\n  // assumes display properties set on courses and results before this call\r\n  const display = courses[courseid].display || anyTracksForCourseDisplayed(courseid)\r\n  document.querySelectorAll(\"[data-display]\").forEach((div) => {\r\n    if (parseInt(div.dataset.course, 10) === courseid) {\r\n      div.dataset.display = display\r\n    }\r\n  })\r\n}\r\n\r\nexport function setResultsCount() {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      courses[i].resultcount = countResultsByCourseID(i)\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateScoreCourse(courseid, codes, x, y) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      if (courses[i].courseid === courseid) {\r\n        courses[i].codes = codes\r\n        courses[i].x = x\r\n        courses[i].y = y\r\n        courses[i].setAngles()\r\n        break\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { alignMap, ctx, getCentreBottom, redraw } from \"./canvas\"\r\nimport { options, config } from \"./config\"\r\nimport { getCourseDetailsByName } from \"./courses\"\r\nimport { getLengthUnits } from \"./events\"\r\nimport interact from \"interactjs\"\r\nimport { getDisplayedTrackDetails, setResultColour } from \"./results\"\r\nimport { resizePanels } from \"./rg2ui\"\r\nimport { Runner } from \"./runner\"\r\nimport { t } from \"./translate\"\r\nimport { formatSecsAsHHMMSS, getNextTrackColour } from \"./utils\"\r\nlet runners = []\r\nlet course = {}\r\n// possible time increment values in milliseconds when timer expires\r\nconst timeDeltas = [100, 200, 500, 1000, 2000, 3000, 5000, 7500, 10000, 15000, 20000, 50000, 100000]\r\n// value in milliseconds\r\nconst timerInterval = 100\r\nconst alignmentTimerInterval = 50\r\nconst alignmentLoopCount = 20\r\nlet mapIsAligned = false\r\nlet units = \"px\"\r\nlet timeDelta = 3000\r\nlet timer = null\r\nlet alignmentTimer = null\r\nlet alignments = []\r\n// current time of animation\r\nlet animationSecs = 0\r\n// animation time in millisecs to avoid rounding problems at very slow speed\r\n// animationSecs is always int(milliSecs/1000)\r\nlet milliSecs = 0\r\nlet realTime = false\r\nlet earliestStartSecs = 0\r\nlet latestFinishSecs = 0\r\nlet tailLength = 60\r\nlet tailStartTimeSecs = 0\r\nlet useFullTails = false\r\n// control to start from if this option selected\r\nlet massStartControl = 0\r\n// run each leg as a mass start if true\r\nlet massStartByControl = false\r\nlet displayNames = false\r\nlet displayInitials = true\r\nlet startSecs = 0\r\nlet slowestTimeSecs = 0\r\nlet animationPanel = null\r\n// animation control panel location\r\n// const position = { x: 0, y: 0 }\r\nlet clockSlider = undefined\r\n\r\nconst playIcon = `<i title=${t(\"Run\", \"\")} class=\"bi-play-circle-fill\"></i>`\r\nconst startIcon = `<i title=${t(\"Start\", \"\")} class=\"bi-triangle\"></i>`\r\nconst pauseIcon = `<i title=${t(\"Pause\", \"\")} class=\"bi-pause-btn\"></i>`\r\nconst waitIcon = `<i title=${t(\"Wait\", \"\")} class=\"bi-hourglass-split\"></i>`\r\nconst trackNames = document.getElementById(\"rg2-track-names\")\r\nconst trackNamesBody = document.querySelector(\"#rg2-track-names .card-body\")\r\nconst btnRunners = document.getElementById(\"btn-runners\")\r\nconst btnStartStop = document.getElementById(\"btn-start-stop\")\r\ndocument.querySelector(\"#rg2-track-names .card-title\").innerHTML = t(\"Runners\")\r\ndocument.getElementById(\"btn-close-track-names\").addEventListener(\"click\", () => {\r\n  trackNames.classList.add(\"d-none\")\r\n})\r\nbtnRunners.addEventListener(\"click\", () => {\r\n  trackNames.classList.toggle(\"d-none\")\r\n})\r\nconst replayByControl = document.getElementById(\"rg2-replay-by-control\")\r\nreplayByControl.classList.add(\"d-none\")\r\n//  allow dialog to be moved\r\nlet namesPosition = { x: 0, y: 0 }\r\ninteract(trackNames).draggable({\r\n  inertia: true,\r\n  listeners: {\r\n    move(e) {\r\n      namesPosition.x += e.dx\r\n      namesPosition.y += e.dy\r\n      e.target.style.transform = `translate(${namesPosition.x}px, ${namesPosition.y}px)`\r\n    }\r\n  },\r\n  modifiers: [\r\n    interact.modifiers.restrictRect({\r\n      restriction: \"#rg2-container\"\r\n    })\r\n  ]\r\n})\r\n\r\n// TODO: enabling this interferes with clock slider\r\n// let panelPosition = { x: 0, y: 0 }\r\n// interact(document.getElementById(\"rg2-animation-controls\")).draggable({\r\n//   inertia: true,\r\n//   listeners: {\r\n//     move(e) {\r\n//       panelPosition.x += e.dx\r\n//       panelPosition.y += e.dy\r\n//       e.target.style.transform = `translate(${panelPosition.x}px, ${panelPosition.y}px)`\r\n//     }\r\n//   },\r\n//   modifiers: [\r\n//     interact.modifiers.restrictRect({\r\n//       restriction: \"#rg2-container\"\r\n//     })\r\n//   ]\r\n// })\r\n\r\n// update flag prevents multiple rapid updates to slider which can cause recursion problems\r\n// needs to be set to false if called in a loop, and calling function then needs to call updateAnimationDetails\r\nexport function addRunner(runner, update = true) {\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    if (runners[i].resultid === runner.resultid) {\r\n      // runner already exists so ignore\r\n      return\r\n    }\r\n  }\r\n  // if this is the first runner to be added then get course details\r\n  // needed fro replay by control to allow alignment of map. Don't orry that not all\r\n  // runners are on same course. Just assume first runner added is the relevant course\r\n  if (runners.length === 0) {\r\n    course = getCourseDetailsByName(runner.coursename)\r\n  }\r\n  if (runner.userColour !== null) {\r\n    runner.trackColour = runner.userColour\r\n  } else {\r\n    runner.trackColour = getNextTrackColour()\r\n  }\r\n  runners.push(runner)\r\n  if (update) {\r\n    updateAnimationDetails()\r\n  }\r\n}\r\n\r\nfunction alignMapToAngle(control) {\r\n  mapIsAligned = false\r\n  alignments = []\r\n  const x = course.x[control]\r\n  const y = course.y[control]\r\n  if (course.angle.length >= control) {\r\n    // Set up array of transformations to move control to centre bottom of screen and rotate map\r\n    // so next control is straight up.\r\n    const to = getCentreBottom()\r\n    let angle = (ctx.displayAngle - course.angle[control] - Math.PI / 2) % (Math.PI * 2)\r\n    if (angle < -1 * Math.PI) {\r\n      angle = angle + 2 * Math.PI\r\n    }\r\n    for (let i = 1; i <= alignmentLoopCount; i = i + 1) {\r\n      let values = {}\r\n\r\n      // translations to move current control to centre bottom\r\n      values.x = to.x - ((to.x - x) * i) / alignmentLoopCount\r\n      values.y = to.y - ((to.y - y) * i) / alignmentLoopCount\r\n\r\n      // Rotation to get from current display angle to angle with next control straight up.\r\n      // Course angles are based on horizontal as 0: need to reset to north.\r\n      // Angle parameter is absolute angle to draw map.\r\n      values.angle = (ctx.displayAngle - (angle * i) / alignmentLoopCount) % (Math.PI * 2)\r\n      alignments.push(values)\r\n    }\r\n\r\n    alignmentTimer = setInterval(() => {\r\n      incrementAlignmentTime()\r\n    }, alignmentTimerInterval)\r\n  } else {\r\n    // just set to north and keep going\r\n    alignMap(0, x, y, true)\r\n    alignmentTimer = null\r\n  }\r\n}\r\n\r\nexport function incrementAlignmentTime() {\r\n  if (alignments.length === 0) {\r\n    clearInterval(alignmentTimer)\r\n    alignmentTimer = null\r\n    mapIsAligned = true\r\n    btnStartStop.innerHTML = playIcon\r\n  } else {\r\n    const data = alignments.shift()\r\n    alignMap(data.angle, data.x, data.y)\r\n  }\r\n  redraw()\r\n}\r\n\r\nexport function animateRunners(courseresults, doAnimate) {\r\n  for (let i = 0; i < courseresults.length; i += 1) {\r\n    if (doAnimate) {\r\n      addRunner(new Runner(courseresults[i]), false)\r\n    } else {\r\n      removeRunner(courseresults[i], false)\r\n    }\r\n  }\r\n  updateAnimationDetails()\r\n}\r\n\r\nfunction calculateAnimationRange() {\r\n  // in theory start time will be less than 24:00\r\n  // TODO: races over midnight: a few other things to sort out before we get to that\r\n  earliestStartSecs = 86400\r\n  latestFinishSecs = 0\r\n  slowestTimeSecs = 0\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    if (runners[i].starttime < earliestStartSecs) {\r\n      earliestStartSecs = runners[i].starttime\r\n    }\r\n    if (runners[i].starttime + runners[i].x.length > latestFinishSecs) {\r\n      latestFinishSecs = runners[i].starttime + runners[i].x.length\r\n    }\r\n    if (runners[i].x.length > slowestTimeSecs) {\r\n      slowestTimeSecs = runners[i].x.length\r\n    }\r\n  }\r\n}\r\n\r\n// see if all runners have reached stop control and reset if they have\r\nfunction checkForStopControl(currentTime) {\r\n  // avoid problems when changing event with replay by control in progress\r\n  if (runners.length === 0) {\r\n    return\r\n  }\r\n\r\n  let allAtControl = true\r\n  // work out if everybody has got to the next control\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    const legTime = runners[i].splits[massStartControl + 1] - runners[i].splits[massStartControl]\r\n    if (legTime > currentTime) {\r\n      allAtControl = false\r\n      break\r\n    }\r\n  }\r\n  if (allAtControl) {\r\n    //move on to next control\r\n    massStartControl += 1\r\n    mapIsAligned = false\r\n    setByControlLabel(massStartControl)\r\n    setNextControlDetails()\r\n  }\r\n}\r\n\r\n// slider callback\r\nfunction clockSliderMoved(time) {\r\n  // setting attribute elsewhere triggers synchronous callback via dispatchEvent so best to filter out non-changes here\r\n  if (time !== animationSecs) {\r\n    setAnimationTime(time)\r\n  }\r\n}\r\n\r\nfunction createSpeedDropdown() {\r\n  let dropdown = document.getElementById(\"rg2-replay-speed-list\")\r\n  let html = \"\"\r\n  for (let i = 0; i < timeDeltas.length; i = i + 1) {\r\n    html += `<li class=\"dropdown-item\" data-speed=\"${timeDeltas[i]}\">${\"x\" + timeDeltas[i] / 100}</li>`\r\n  }\r\n  dropdown.innerHTML = html\r\n  document.getElementById(\"rg2-replay-speed-select\").addEventListener(\"hidden.bs.dropdown\", (e) => {\r\n    // only need to deal with close caused by a click on a new value\r\n    if (e.clickEvent) {\r\n      setReplaySpeed(parseInt(e.clickEvent.target.dataset.speed, 10))\r\n    }\r\n  })\r\n}\r\n\r\nexport function createByControlDropdown() {\r\n  let dropdown = document.getElementById(\"rg2-replay-start-control-list\")\r\n  let html = \"\"\r\n  // find shortest set of splits being animated\r\n  let minSplitsLength = 9999\r\n  const controls = runners.reduce((minLength, r) => {\r\n    return Math.min(r.splits.length, minLength)\r\n  }, minSplitsLength)\r\n  // count includes the finish split which we need to ignore\r\n  for (let i = 0; i < controls - 1; i = i + 1) {\r\n    const control = i === 0 ? `<div>${startIcon}</div>` : i\r\n    html += `<li class=\"dropdown-item\" data-control=\"${i}\">${control}</li>`\r\n  }\r\n  dropdown.innerHTML = html\r\n  document.getElementById(\"rg2-replay-start-control-select\").addEventListener(\"hidden.bs.dropdown\", (e) => {\r\n    // only need to deal with close caused by a click on a new value\r\n    if (e.clickEvent) {\r\n      massStartControl = parseInt(e.clickEvent.target.dataset.control)\r\n      if (isNaN(massStartControl)) {\r\n        massStartControl = 0\r\n      }\r\n      setByControlLabel(massStartControl)\r\n      setNextControlDetails()\r\n    }\r\n  })\r\n}\r\n\r\nexport function createTailsDropdown() {\r\n  let dropdown = document.getElementById(\"rg2-tails-length-list\")\r\n  let html = \"\"\r\n  const tails = [\"0:00\", \"0:30\", \"1:00\", \"1:30\", \"2:00\", \"3:00\", t(\"Full tails\", \"\")]\r\n  const secs = [0, 30, 60, 90, 120, 180, \"Full\"]\r\n  for (let i = 0; i < tails.length; i = i + 1) {\r\n    html += `<li class=\"dropdown-item\" data-length=\"${secs[i]}\">${tails[i]}</li>`\r\n  }\r\n  dropdown.innerHTML = html\r\n  document.getElementById(\"rg2-tails-length-select\").addEventListener(\"hidden.bs.dropdown\", (e) => {\r\n    // only need to deal with close caused by a click on a new value\r\n    if (e.clickEvent) {\r\n      setTailsLength(e.clickEvent.target.dataset.length)\r\n    }\r\n  })\r\n}\r\n\r\nexport function drawAnimation() {\r\n  if (runners.length === 0) {\r\n    return\r\n  }\r\n  if (clockSlider) {\r\n    if (clockSlider.value !== animationSecs) {\r\n      clockSlider.value = animationSecs\r\n    }\r\n    const clock = document.getElementById(\"rg2-clock\")\r\n    clock.innerText = formatSecsAsHHMMSS(animationSecs)\r\n  }\r\n  let time = 0\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    const runner = runners[i]\r\n    let timeOffset = 0\r\n    if (realTime) {\r\n      timeOffset = runner.starttime\r\n    } else {\r\n      if (massStartControl === 0 || runner.splits.length < massStartControl) {\r\n        // no offset since we are starting from the start\r\n        timeOffset = 0\r\n      } else {\r\n        // offset needs to move forward (hence negative) to time at control\r\n        timeOffset = -1 * runner.splits[massStartControl]\r\n      }\r\n    }\r\n    ctx.strokeStyle = runner.trackColour\r\n    ctx.globalAlpha = options.perCentRouteIntensity / 100\r\n    ctx.lineWidth = options.routeWidth\r\n    //ctx.lineCap = \"round\"\r\n    ctx.beginPath()\r\n    ctx.moveTo(runner.x[tailStartTimeSecs - timeOffset], runner.y[tailStartTimeSecs - timeOffset])\r\n\r\n    // t runs as real time seconds or 0-based seconds depending on realTime\r\n    // runner.x[] is always indexed in 0-based time so needs to be adjusted for starttime offset\r\n    for (let t = tailStartTimeSecs; t < animationSecs; t += 1) {\r\n      if (t > timeOffset && t - timeOffset < runner.nextStopTime) {\r\n        ctx.lineTo(runner.x[t - timeOffset], runner.y[t - timeOffset])\r\n      }\r\n    }\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    time = animationSecs\r\n    if (time - timeOffset < runner.nextStopTime) {\r\n      time = time - timeOffset\r\n    } else {\r\n      time = runner.nextStopTime\r\n    }\r\n    ctx.arc(runner.x[time], runner.y[time], config.RUNNER_DOT_RADIUS, 0, 2 * Math.PI, false)\r\n    ctx.globalAlpha = config.FULL_INTENSITY\r\n    ctx.strokeStyle = config.BLACK\r\n    ctx.fillStyle = runner.trackColour\r\n    ctx.fill()\r\n    ctx.lineWidth = config.RUNNER_DOT_RADIUS / 4\r\n    ctx.stroke()\r\n    drawName(runner, time)\r\n  }\r\n  showDistanceRun(time)\r\n  if (massStartByControl) {\r\n    checkForStopControl(animationSecs)\r\n  }\r\n}\r\n\r\nfunction drawName(runner, time) {\r\n  let text = \"\"\r\n  if (displayNames || displayInitials) {\r\n    // make sure we have a valid position to display\r\n    if (time < runner.x.length && time >= 0) {\r\n      ctx.fillStyle = \"black\"\r\n      ctx.strokeStyle = \"white\"\r\n      ctx.font = options.replayFontSize + \"pt Arial\"\r\n      ctx.globalAlpha = config.FULL_INTENSITY\r\n      ctx.textAlign = \"left\"\r\n      if (displayInitials) {\r\n        text = runner.initials\r\n      } else {\r\n        text = runner.name\r\n      }\r\n      ctx.save()\r\n      // centre map on runner location\r\n      ctx.translate(runner.x[time], runner.y[time])\r\n      // rotate map so that text stays horizontal\r\n      ctx.rotate(ctx.displayAngle)\r\n      // no real science: offsets just look OK\r\n      ctx.lineWidth = options.replayFontSize / 8\r\n      ctx.strokeText(text, 12, 6)\r\n      ctx.fillText(text, 12, 6)\r\n      ctx.restore()\r\n    }\r\n  }\r\n}\r\n\r\nfunction getDistanceAtTime(idx, time) {\r\n  const cumDist = runners[idx].cumulativeDistance\r\n  let dist = time > cumDist.length - 1 ? cumDist[cumDist.length - 1] : cumDist[time]\r\n  if (dist === undefined) {\r\n    dist = 0\r\n  }\r\n  return dist\r\n}\r\n\r\nfunction getTrackNames(time) {\r\n  let tracks = []\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    let info = {}\r\n    info.trackColour = runners[i].trackColour\r\n    info.course = runners[i].coursename\r\n    info.name = runners[i].name\r\n    info.resultid = runners[i].resultid\r\n    info.rawid = runners[i].rawid\r\n    if (realTime) {\r\n      info.distance = getDistanceAtTime(i, animationSecs - runners[i].starttime)\r\n    } else {\r\n      info.distance = getDistanceAtTime(i, time)\r\n    }\r\n    info.distance += units\r\n    tracks.push(info)\r\n  }\r\n  // get all tracks displayed so we can add them if they are not animated as well\r\n  let extraTracks = getDisplayedTrackDetails()\r\n  for (let i = 0; i < extraTracks.length; i += 1) {\r\n    // add tracks not already in tracks list\r\n    if (\r\n      tracks.findIndex((track) => {\r\n        return track.resultid === extraTracks[i].resultid\r\n      }) === -1\r\n    ) {\r\n      let info = {}\r\n      info.trackColour = extraTracks[i].trackColour\r\n      info.course = extraTracks[i].course\r\n      info.name = extraTracks[i].name\r\n      info.resultid = extraTracks[i].resultid\r\n      info.rawid = extraTracks[i].rawid\r\n      info.distance = \"\"\r\n      tracks.push(info)\r\n    }\r\n  }\r\n  return tracks\r\n}\r\n\r\nfunction getTrackNamesHTML(tracks) {\r\n  if (tracks.length === 0) {\r\n    return \"\"\r\n  }\r\n  let html = \"\"\r\n  let oldCourse = \"\"\r\n  for (let i = 0; i < tracks.length; i += 1) {\r\n    if (oldCourse !== tracks[i].course) {\r\n      html += `<div></div><div><strong>${tracks[i].course}</strong></div><div></div>`\r\n      oldCourse = tracks[i].course\r\n    }\r\n    html += `<input type=\"color\" class=\"form-control form-control-color\" data-rawid=\"${tracks[i].rawid}\"`\r\n    html += ` value = \"${tracks[i].trackColour}\" ><div>${tracks[i].name}</div><div class=\"runner-distance text-end\"`\r\n    html += ` data-resultid=\"${tracks[i].resultid}\">${tracks[i].distance}</div>`\r\n  }\r\n  return html\r\n}\r\n\r\nexport function incrementAnimationTime() {\r\n  // only increment time if we haven't got to the end already\r\n  if (realTime) {\r\n    if (animationSecs < latestFinishSecs) {\r\n      milliSecs = Math.min(milliSecs + timeDelta, latestFinishSecs * 1000)\r\n    }\r\n  } else {\r\n    if (animationSecs < slowestTimeSecs) {\r\n      milliSecs = Math.min(milliSecs + timeDelta, slowestTimeSecs * 1000)\r\n    }\r\n  }\r\n  animationSecs = parseInt(milliSecs / 1000, 10)\r\n  // find earliest time we need to worry about when drawing screen\r\n  if (useFullTails) {\r\n    tailStartTimeSecs = startSecs + 1\r\n  } else {\r\n    tailStartTimeSecs = Math.max(animationSecs - tailLength, startSecs + 1)\r\n  }\r\n  redraw()\r\n}\r\n\r\nexport function initialiseAnimationPanel() {\r\n  if (animationPanel) {\r\n    return\r\n  }\r\n  animationPanel = document.getElementById(\"rg2-animation-controls\")\r\n  const clock = document.getElementById(\"rg2-clock\")\r\n  clock.innerText = \"00:00:00\"\r\n\r\n  initialiseClockSlider(0, 0, 0)\r\n\r\n  createSpeedDropdown()\r\n  setReplaySpeed(timeDelta)\r\n\r\n  btnStartStop.addEventListener(\"click\", () => {\r\n    toggleAnimation()\r\n  })\r\n\r\n  const btnMassStart = document.getElementById(\"btn-mass-start\")\r\n  btnMassStart.addEventListener(\"click\", () => {\r\n    replayByControl.classList.add(\"d-none\")\r\n    setReplayMassStart()\r\n  })\r\n\r\n  const btnRealTime = document.getElementById(\"btn-real-time\")\r\n  btnRealTime.setAttribute(\"title\", t(\"Real time\", \"\"))\r\n  btnRealTime.addEventListener(\"click\", () => {\r\n    replayByControl.classList.add(\"d-none\")\r\n    setReplayRealTime()\r\n  })\r\n\r\n  const btnByControl = document.getElementById(\"btn-by-control\")\r\n  btnByControl.addEventListener(\"click\", () => {\r\n    setReplayByControl()\r\n    createByControlDropdown()\r\n    replayByControl.classList.remove(\"d-none\")\r\n  })\r\n\r\n  createTailsDropdown()\r\n\r\n  let options = document.querySelectorAll(\"[data-toggle-names]\")\r\n  for (let opt of options) {\r\n    opt.innerHTML = t(opt.dataset.toggleNames)\r\n    opt.addEventListener(\"click\", (e) => {\r\n      toggleNameDisplay(e.currentTarget.dataset.toggleNames)\r\n    })\r\n  }\r\n  document.getElementById(\"rg2-toggle-names-value\").setAttribute(\"title\", t(\"Show names\", \"\"))\r\n}\r\n\r\nfunction initialiseClockSlider(min, max, val) {\r\n  // avoid unnecessary reinitialisation\r\n  if (clockSlider && clockSlider.min === min && clockSlider.max === max && clockSlider.value === val) {\r\n    return\r\n  }\r\n  if (clockSlider) {\r\n    clockSlider.remove()\r\n  }\r\n  const clockSliderContainer = document.getElementById(\"rg2-clock-slider-container\")\r\n  const slider = document.createElement(\"tc-range-slider\")\r\n  slider.setAttribute(\"id\", \"rg2-clock-slider\")\r\n  slider.setAttribute(\"min\", min)\r\n  slider.setAttribute(\"max\", max)\r\n  slider.setAttribute(\"value\", val)\r\n  slider.setAttribute(\"step\", 1)\r\n  clockSliderContainer.append(slider)\r\n  clockSlider = document.getElementById(\"rg2-clock-slider\")\r\n  clockSlider.addEventListener(\"change\", (e) => {\r\n    clockSliderMoved(e.target.value)\r\n  })\r\n}\r\n\r\nexport function removeRunner(resultid) {\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    if (runners[i].resultid === resultid) {\r\n      // delete 1 runner at position i\r\n      runners.splice(i, 1)\r\n    }\r\n    // if this was the last runner then delete course details\r\n    if (runners.length === 0) {\r\n      course = {}\r\n    }\r\n  }\r\n  updateAnimationDetails()\r\n}\r\n\r\n// called before a new event is loaded\r\nexport function resetAnimation() {\r\n  runners.length = 0\r\n  course = {}\r\n  timeDelta = 3000\r\n  animationSecs = 0\r\n  milliSecs = 0\r\n  realTime = false\r\n  earliestStartSecs = 0\r\n  latestFinishSecs = 0\r\n  tailLength = 60\r\n  tailStartTimeSecs = 0\r\n  useFullTails = false\r\n  massStartControl = 0\r\n  massStartByControl = false\r\n  displayNames = false\r\n  displayInitials = true\r\n  startSecs = 0\r\n  slowestTimeSecs = 0\r\n  clearInterval(timer)\r\n  timer = null\r\n  updateAnimationDetails()\r\n  btnStartStop.innerHTML = playIcon\r\n  trackNames.classList.add(\"d-none\")\r\n}\r\n\r\n// needed if you run replay by control and then switch back to something else\r\nfunction resetNextStopTime() {\r\n  runners.forEach((r) => (r.nextStopTime = config.VERY_HIGH_TIME_IN_SECS))\r\n}\r\n\r\nexport function resultIsBeingAnimated(resultid) {\r\n  // is given result in the array of animated runners?\r\n  return runners.findIndex((runner) => runner.resultid === resultid) > -1\r\n}\r\n\r\nfunction setAnimationTime(time) {\r\n  units = getLengthUnits()\r\n  // if we got a non-0 time it was from the slider so use it\r\n  // otherwise reset to base time\r\n  let max = 0\r\n  if (realTime) {\r\n    if (time > 0) {\r\n      animationSecs = time\r\n    } else {\r\n      animationSecs = earliestStartSecs\r\n    }\r\n    max = latestFinishSecs\r\n    startSecs = earliestStartSecs\r\n  } else {\r\n    if (time > 0) {\r\n      animationSecs = time\r\n    } else {\r\n      animationSecs = 0\r\n    }\r\n    max = slowestTimeSecs\r\n    startSecs = 0\r\n  }\r\n  milliSecs = animationSecs * 1000\r\n  if (time === 0) {\r\n    initialiseClockSlider(startSecs, max, animationSecs)\r\n  }\r\n  redraw()\r\n}\r\n\r\nfunction setByControlLabel(control) {\r\n  document.getElementById(\"rg2-replay-start-control\").innerHTML = control === 0 ? startIcon : control\r\n}\r\n\r\nfunction setNextControlDetails() {\r\n  let minSplitsLength = 9999\r\n  // not all runners have the same number of controls\r\n  // since they may be on different courses or a score course\r\n  minSplitsLength = runners.reduce((minLength, r) => {\r\n    return Math.min(r.splits.length, minLength)\r\n  }, minSplitsLength)\r\n  // splits array contains entries for S, controls and F\r\n  // stop replaying once we have got to F\r\n  if (massStartControl > minSplitsLength) {\r\n    massStartControl = 0\r\n  }\r\n  // find time at next control\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    // splits includes a start time so index to control is + 1\r\n    // also need to allow for runners on different courses so not\r\n    // all runners have same number of controls\r\n    if (massStartControl + 1 < runners[i].splits.length) {\r\n      runners[i].nextStopTime = runners[i].splits[massStartControl + 1]\r\n    } else {\r\n      runners[i].nextStopTime = config.VERY_HIGH_TIME_IN_SECS\r\n    }\r\n  }\r\n  setAnimationTime(0)\r\n  // stop animation and wait for next leg\r\n  stopAnimation()\r\n  redraw()\r\n}\r\n\r\n// callback when user selects replay by control\r\nfunction setReplayByControl() {\r\n  // disable slider since moving it during replay by control is open to interpretation\r\n  document.getElementById(\"rg2-clock-slider\").setAttribute(\"disabled\", \"\")\r\n  realTime = false\r\n  // default to 0 (start) until user selects another control\r\n  massStartControl = 0\r\n  massStartByControl = true\r\n  mapIsAligned = false\r\n  setByControlLabel(massStartControl)\r\n  setNextControlDetails()\r\n}\r\n\r\nfunction setReplayMassStart() {\r\n  realTime = false\r\n  massStartByControl = false\r\n  massStartControl = 0\r\n  resetNextStopTime()\r\n  setAnimationTime(0)\r\n  clockSlider.removeAttribute(\"disabled\")\r\n}\r\n\r\nfunction setReplayRealTime() {\r\n  realTime = true\r\n  massStartByControl = false\r\n  massStartControl = 0\r\n  resetNextStopTime()\r\n  setAnimationTime(0)\r\n  clockSlider.removeAttribute(\"disabled\")\r\n}\r\n\r\nfunction setReplaySpeed(speed) {\r\n  if (isNaN(speed)) {\r\n    speed = 1000\r\n  }\r\n  timeDelta = speed\r\n  document.getElementById(\"rg2-replay-speed\").innerText = \"x\" + speed / 100\r\n}\r\n\r\nfunction setRunnerColor(rawid, trackColour) {\r\n  // set colour for runners already selected\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    if (runners[i].rawid === rawid) {\r\n      runners[i].userColour = trackColour\r\n      runners[i].trackColour = trackColour\r\n    }\r\n  }\r\n  // and save colour for next time runner is selected\r\n  setResultColour(rawid, trackColour)\r\n}\r\n\r\nfunction setTailsLength(value) {\r\n  if (value === \"Full\") {\r\n    useFullTails = true\r\n  } else {\r\n    tailLength = parseInt(value, 10)\r\n    useFullTails = false\r\n  }\r\n  calculateAnimationRange()\r\n  redraw()\r\n}\r\n\r\nfunction showDistanceRun(time) {\r\n  const names = getTrackNames(time)\r\n  if (names.length === 0) {\r\n    return\r\n  }\r\n  const runners = document.querySelectorAll(\".track-names .runner-distance\")\r\n  if (runners) {\r\n    runners.forEach((runner) => {\r\n      const resultid = parseInt(runner.dataset.resultid)\r\n      const idx = names.findIndex((name) => {\r\n        return name.resultid === resultid\r\n      })\r\n      if (idx > -1) {\r\n        runner.innerText = names[idx].distance\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction startAnimation() {\r\n  if (timer === null) {\r\n    timer = setInterval(() => {\r\n      incrementAnimationTime()\r\n    }, timerInterval)\r\n  }\r\n  btnStartStop.innerHTML = pauseIcon\r\n}\r\n\r\nfunction stopAnimation() {\r\n  clearInterval(timer)\r\n  timer = null\r\n  btnStartStop.innerHTML = playIcon\r\n}\r\n\r\nfunction toggleAnimation() {\r\n  if (timer === null) {\r\n    // only align replay by control for now\r\n    // may also decide to make this user-configurable\r\n    if (massStartByControl) {\r\n      // if timer is running then we are doing alignment already\r\n      if (!mapIsAligned && alignmentTimer === null) {\r\n        alignMapToAngle(massStartControl)\r\n        btnStartStop.innerHTML = waitIcon\r\n      }\r\n    } else {\r\n      mapIsAligned = true\r\n    }\r\n\r\n    if (mapIsAligned) {\r\n      startAnimation()\r\n    }\r\n  } else {\r\n    stopAnimation()\r\n  }\r\n}\r\n\r\nfunction toggleNameDisplay(value) {\r\n  document.getElementById(\"rg2-toggle-names-value\").setAttribute(\"title\", t(value, \"\"))\r\n  switch (value) {\r\n    case \"Show names\":\r\n      displayNames = true\r\n      displayInitials = false\r\n      break\r\n    case \"Show initials\":\r\n      displayNames = false\r\n      displayInitials = true\r\n      break\r\n    default:\r\n      displayNames = false\r\n      displayInitials = false\r\n      break\r\n  }\r\n  redraw()\r\n}\r\n\r\nfunction updateAnimationDetails() {\r\n  initialiseAnimationPanel()\r\n  updateTrackNames()\r\n  if (runners.length > 0) {\r\n    animationPanel.classList.remove(\"d-none\")\r\n  } else {\r\n    animationPanel.classList.add(\"d-none\")\r\n  }\r\n  resizePanels()\r\n  calculateAnimationRange()\r\n  setAnimationTime(0)\r\n}\r\n\r\nexport function updateTrackNames() {\r\n  const names = getTrackNames(animationSecs)\r\n  if (names.length > 0) {\r\n    trackNamesBody.innerHTML = getTrackNamesHTML(names)\r\n    const colorSelects = document.querySelectorAll(\".track-names input\")\r\n    colorSelects.forEach((color) => {\r\n      color.addEventListener(\"input\", (e) => {\r\n        setRunnerColor(parseInt(e.target.dataset.rawid, 10), e.target.value)\r\n        redraw()\r\n      })\r\n    })\r\n    trackNames.classList.remove(\"d-none\")\r\n  } else {\r\n    trackNamesBody.innerHTML = \"\"\r\n    trackNames.classList.add(\"d-none\")\r\n  }\r\n  return names.length\r\n}\r\n","import { getDistanceBetweenPoints } from \"./utils\"\r\nimport { redraw } from \"./canvas\"\r\nimport interact from \"interactjs\"\r\nimport { t } from \"./translate\"\r\nimport { getActiveEventID, getMetresPerPixel } from \"./events\"\r\n\r\nexport class Overlay {\r\n  constructor(ctx) {\r\n    this.ctx = ctx\r\n    this.measuring = false\r\n    this.dragging = false\r\n    this.colours = [\"#ff00ff\", \"#0000ff\", \"#00ff00\", \"#ff0000\", \"#00ffff\"]\r\n    this.colourIndex = 0\r\n    // array of completed overlays\r\n    this.overlays = []\r\n    // overlay being drawn or not yet started\r\n    this.currentOverlay = this.initialiseOverlay()\r\n    this.units = \"px\"\r\n    this.metresPerPixel = 1\r\n    // empirical settings\r\n    this.dotSize = 5\r\n    this.lineWidth = 3\r\n    this.measureDialog = document.getElementById(\"rg2-measure-dialog\")\r\n    document.getElementById(\"btn-measure\").addEventListener(\"click\", () => {\r\n      if (getActiveEventID() === null) {\r\n        return\r\n      }\r\n      document.getElementById(\"rg2-map-canvas\").style.cursor = \"crosshair\"\r\n      this.measureDialog.classList.remove(\"d-none\")\r\n      this.measuring = true\r\n      this.createMeasureDialog()\r\n      redraw()\r\n    })\r\n\r\n    document.getElementById(\"btn-close-measure-dialog\").addEventListener(\"click\", () => {\r\n      this.measuring = false\r\n      this.measureDialog.classList.add(\"d-none\")\r\n      document.getElementById(\"rg2-map-canvas\").style.cursor = \"auto\"\r\n      redraw()\r\n    })\r\n\r\n    document.getElementById(\"btn-measure\").addEventListener(\"click\", () => {\r\n      document.getElementById(\"rg2-map-canvas\").style.cursor = \"crosshair\"\r\n      this.measureDialog.classList.remove(\"d-none\")\r\n      this.measuring = true\r\n      this.createMeasureDialog()\r\n      redraw()\r\n    })\r\n\r\n    //  allow dialog to be moved\r\n    let position = { x: 0, y: 0 }\r\n    interact(this.measureDialog).draggable({\r\n      inertia: true,\r\n      listeners: {\r\n        move(e) {\r\n          position.x += e.dx\r\n          position.y += e.dy\r\n          e.target.style.transform = `translate(${position.x}px, ${position.y}px)`\r\n        }\r\n      },\r\n      modifiers: [\r\n        interact.modifiers.restrictRect({\r\n          restriction: \"#rg2-container\"\r\n        })\r\n      ]\r\n    })\r\n    this.createMeasureDialog()\r\n  }\r\n\r\n  calculateLength(x, y) {\r\n    if (x.length < 2) {\r\n      return 0\r\n    }\r\n    let length = 0\r\n    for (let i = 1; i < x.length; i += 1) {\r\n      length = length + getDistanceBetweenPoints(x[i - 1], y[i - 1], x[i], y[i])\r\n    }\r\n    return length\r\n  }\r\n\r\n  closeEnough(x1, y1, x2, y2) {\r\n    const range = 10\r\n    if (Math.abs(x1 - x2) < range) {\r\n      if (Math.abs(y1 - y2) < range) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  createMeasureDialog() {\r\n    this.metresPerPixel = getMetresPerPixel()\r\n    if (this.metresPerPixel === undefined) {\r\n      this.metresPerPixel = 1\r\n      this.units = \"px\"\r\n    } else {\r\n      this.units = \"m\"\r\n    }\r\n    let details = \"\"\r\n    for (let i = 0; i < this.overlays.length; i += 1) {\r\n      details = details + this.formatOverlay(this.overlays[i], true)\r\n    }\r\n    details = details + this.formatOverlay(this.currentOverlay, false)\r\n    // show \"delete all\" if at least two exist\r\n    if (this.overlays.length > 1) {\r\n      details += `<div>${t(\"All\")}</div><div></div><div></div>`\r\n      details += `<div><i class='delete-all-overlays bi-trash'></i></div>`\r\n    }\r\n    document.querySelector(\".rg2-overlay-table\").innerHTML = details\r\n    let deleteOverlay = document.getElementsByClassName(\"delete-overlay\")\r\n    for (let ol of deleteOverlay) {\r\n      ol.addEventListener(\"click\", (e) => {\r\n        this.deleteOverlay(parseInt(e.target.id, 10))\r\n      })\r\n    }\r\n    let deleteAllOverlays = document.getElementsByClassName(\"delete-all-overlays\")\r\n    for (let ol of deleteAllOverlays) {\r\n      ol.addEventListener(\"click\", (e) => {\r\n        this.deleteAllOverlays(parseInt(e.target.id, 10))\r\n      })\r\n    }\r\n    let endOverlay = document.getElementsByClassName(\"end-overlay\")\r\n    for (let ol of endOverlay) {\r\n      ol.addEventListener(\"click\", (e) => {\r\n        this.endOverlay(parseInt(e.target.id, 10))\r\n      })\r\n    }\r\n  }\r\n\r\n  deleteAllOverlays() {\r\n    this.overlays.length = 0\r\n    this.currentOverlay = this.initialiseOverlay()\r\n    this.updateOverlays()\r\n    this.createMeasureDialog()\r\n    redraw()\r\n  }\r\n\r\n  deleteOverlay(idx) {\r\n    this.overlays.splice(idx, 1)\r\n    this.updateOverlays()\r\n    this.createMeasureDialog()\r\n    redraw()\r\n  }\r\n\r\n  dragEnded() {\r\n    //console.log(\"Drag ended\")\r\n    this.dragging = false\r\n  }\r\n\r\n  drawSingleOverlay(ol, finished) {\r\n    this.ctx.strokeStyle = ol.colour\r\n    this.ctx.fillStyle = ol.colour\r\n    // draw lines\r\n    this.ctx.beginPath()\r\n    this.ctx.moveTo(ol.x[0], ol.y[0])\r\n    for (let i = 1; i < ol.x.length; i += 1) {\r\n      this.ctx.lineTo(ol.x[i], ol.y[i])\r\n    }\r\n    this.ctx.stroke()\r\n    // draw dots\r\n    for (let i = 0; i < ol.x.length; i += 1) {\r\n      this.ctx.beginPath()\r\n      this.ctx.arc(ol.x[i], ol.y[i], this.dotSize, 0, 2 * Math.PI, false)\r\n      if (finished) {\r\n        this.ctx.fill()\r\n      } else {\r\n        this.ctx.stroke()\r\n      }\r\n    }\r\n  }\r\n\r\n  drawOverlays() {\r\n    // only draw if measuring dialog is open\r\n    if (!this.measuring) {\r\n      return\r\n    }\r\n    this.ctx.lineWidth = this.lineWidth\r\n    this.ctx.globalAlpha = 0.6\r\n    // draw completed overlays\r\n    if (this.overlays.length > 0) {\r\n      for (let j = 0; j < this.overlays.length; j += 1) {\r\n        this.drawSingleOverlay(this.overlays[j], true)\r\n      }\r\n    }\r\n    // draw overlay in progress\r\n    if (this.currentOverlay.started) {\r\n      if (this.currentOverlay.x.length === 1) {\r\n        // only one point so draw ring to mark start\r\n        this.ctx.strokeStyle = this.currentOverlay.colour\r\n        this.ctx.fillStyle = this.currentOverlay.colour\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(this.currentOverlay.x[0], this.currentOverlay.y[0], this.dotSize, 0, 2 * Math.PI, false)\r\n        this.ctx.stroke()\r\n      } else {\r\n        this.drawSingleOverlay(this.currentOverlay, false)\r\n      }\r\n    }\r\n  }\r\n\r\n  endOverlay() {\r\n    this.currentOverlay.idx = this.overlays.length\r\n    this.overlays.push(this.currentOverlay)\r\n    this.currentOverlay = this.initialiseOverlay()\r\n    this.createMeasureDialog()\r\n  }\r\n\r\n  formatOverlay(ol, completed) {\r\n    let html = \"\"\r\n    let completedDiv = \"\"\r\n    let startedDiv = \"\"\r\n    if (ol.started) {\r\n      startedDiv = `<div>${parseInt(ol.length, 10)}${this.units}</div>`\r\n    } else {\r\n      startedDiv = `<div></div>`\r\n    }\r\n\r\n    if (completed) {\r\n      completedDiv = `<div><i class='delete-overlay bi-trash' id=\"${ol.idx}\"></i></div>`\r\n    } else {\r\n      if (ol.started) {\r\n        completedDiv = `<div><i class='end-overlay bi-save' id=\"${ol.idx}\"></i></div>`\r\n      } else {\r\n        completedDiv = `<div></div>`\r\n      }\r\n    }\r\n    html += `<div>${ol.id}</div><div class='overlay-bar' style='--overlay-colour:${ol.colour};'></div>`\r\n    html += `${startedDiv}${completedDiv}`\r\n    return html\r\n  }\r\n\r\n  getNextColour() {\r\n    this.colourIndex = (this.colourIndex + 1) % this.colours.length\r\n    return this.colours[this.colourIndex]\r\n  }\r\n\r\n  initialiseOverlay() {\r\n    const ol = {}\r\n    // ids start at A\r\n    ol.id = String.fromCharCode(this.overlays.length + 65)\r\n    ol.colour = this.getNextColour()\r\n    ol.x = []\r\n    ol.y = []\r\n    ol.length = 0\r\n    ol.started = false\r\n    ol.idx = undefined\r\n    return ol\r\n  }\r\n\r\n  mouseDrag(from, to) {\r\n    // return value indicates if we handled the move or not\r\n    if (!this.measuring) {\r\n      return false\r\n    }\r\n    if (!this.dragging) {\r\n      for (let i = 0; i < this.overlays.length; i += 1) {\r\n        for (let j = 0; j < this.overlays[i].x.length; j += 1) {\r\n          if (this.closeEnough(from.x, from.y, this.overlays[i].x[j], this.overlays[i].y[j])) {\r\n            this.dragging = true\r\n            this.dragOverlay = i\r\n            this.dragPoint = j\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.dragging) {\r\n      this.overlays[this.dragOverlay].x[this.dragPoint] = parseInt(to.x, 10)\r\n      this.overlays[this.dragOverlay].y[this.dragPoint] = parseInt(to.y, 10)\r\n      this.overlays[this.dragOverlay].length =\r\n        this.calculateLength(this.overlays[this.dragOverlay].x, this.overlays[this.dragOverlay].y) * this.metresPerPixel\r\n      this.createMeasureDialog()\r\n      //redraw()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  mouseUp(x, y) {\r\n    if (!this.measuring) {\r\n      return\r\n    }\r\n    this.dragging = false\r\n    if (!this.currentOverlay.started) {\r\n      this.startOverlay()\r\n    }\r\n    // double click so  treat as an end to drawing\r\n    if (\r\n      x === this.currentOverlay.x[this.currentOverlay.x.length - 1] &&\r\n      y === this.currentOverlay.y[this.currentOverlay.x.length - 1]\r\n    ) {\r\n      this.endOverlay()\r\n    } else {\r\n      this.currentOverlay.x.push(x)\r\n      this.currentOverlay.y.push(y)\r\n      this.currentOverlay.length =\r\n        this.calculateLength(this.currentOverlay.x, this.currentOverlay.y) * this.metresPerPixel\r\n      this.createMeasureDialog()\r\n      redraw()\r\n    }\r\n  }\r\n\r\n  startOverlay() {\r\n    this.currentOverlay.started = true\r\n    this.createMeasureDialog()\r\n  }\r\n\r\n  updateOverlays() {\r\n    this.colourIndex = 0\r\n    // recolour and reallocate labels starting from A after deletion\r\n    for (let i = 0; i < this.overlays.length; i += 1) {\r\n      this.overlays[i].id = String.fromCharCode(i + 65)\r\n      this.overlays[i].idx = i\r\n      this.overlays[i].colour = this.getNextColour()\r\n    }\r\n    this.currentOverlay.id = String.fromCharCode(this.overlays.length + 65)\r\n    this.currentOverlay.idx = this.overlays.length\r\n    this.currentOverlay.colour = this.getNextColour()\r\n  }\r\n}\r\n","import { drawAnimation } from \"./animation\"\r\nimport { config, options } from \"./config\"\r\nimport { controls, drawCourses } from \"./courses\"\r\nimport { adjustTrack, dragEnded, drawNewTrack, gpsFileLoaded, mouseUp } from \"./draw\"\r\nimport { getActiveEventID } from \"./events\"\r\nimport {\r\n  adjustManagerControls,\r\n  drawManagerControls,\r\n  managerDragEnded,\r\n  managerMapLoadCallback,\r\n  managerMouseUp\r\n} from \"./manager\"\r\nimport { Overlay } from \"./overlay\"\r\nimport { drawTracks } from \"./results\"\r\nimport { getActiveTab } from \"./rg2ui\"\r\nimport { t } from \"./translate\"\r\nimport { getDistanceBetweenPoints } from \"./utils\"\r\n\r\nlet canvas = document.getElementById(\"rg2-map-canvas\")\r\nexport let ctx = canvas.getContext(\"2d\")\r\nctx.displayAngle = 0\r\nlet map = new Image()\r\nlet overlay = new Overlay(ctx)\r\nlet input = {\r\n  dragStart: null,\r\n  // looks odd but this works for initialisation\r\n  dragged: true,\r\n  scaleFactor: 1.1,\r\n  pinched: false\r\n}\r\nlet savedRedraws = 0\r\nlet redrawTimerID = undefined\r\ndocument.getElementById(\"rg2-load-progress\").classList.add(\"d-none\")\r\ndocument.getElementById(\"rg2-map-load-progress\").classList.add(\"d-none\")\r\n\r\nfunction addListeners() {\r\n  canvas.addEventListener(\"touchstart\", handleTouchStart, false)\r\n  canvas.addEventListener(\"touchmove\", handleTouchMove, false)\r\n  canvas.addEventListener(\"touchend\", handleTouchEnd, false)\r\n  canvas.addEventListener(\"DOMMouseScroll\", handleScroll, false)\r\n  canvas.addEventListener(\"wheel\", handleScroll, false)\r\n  canvas.addEventListener(\"mousedown\", handleMouseDown, false)\r\n  canvas.addEventListener(\"mousemove\", handleMouseMove, false)\r\n  canvas.addEventListener(\"mouseup\", handleMouseUp, false)\r\n\r\n  map.addEventListener(\"load\", () => mapLoadedCallback())\r\n  let btn = document.getElementById(\"btn-zoom-in\")\r\n  btn.addEventListener(\"click\", () => zoom(1))\r\n\r\n  btn = document.getElementById(\"btn-zoom-out\")\r\n  btn.addEventListener(\"click\", () => zoom(-1))\r\n\r\n  btn = document.getElementById(\"btn-rotate-left\")\r\n  btn.addEventListener(\"click\", () => rotateMap(-1))\r\n\r\n  btn = document.getElementById(\"btn-rotate-right\")\r\n  btn.addEventListener(\"click\", () => rotateMap(1))\r\n\r\n  btn = document.getElementById(\"btn-reset\")\r\n  btn.addEventListener(\"click\", () => resetMapState())\r\n}\r\n\r\nexport function alignMap(angle, x, y, moveMap = true) {\r\n  // align to an absolute angle: 0 is up/north\r\n  // rotate around defined x, y\r\n  applyMapRotation((ctx.displayAngle - angle) % (Math.PI * 2), x, y, moveMap)\r\n}\r\n\r\nfunction applyMapRotation(angle, x, y, moveMap) {\r\n  // save new absolute angle\r\n  ctx.displayAngle = (ctx.displayAngle - angle) % (Math.PI * 2)\r\n  // rotate around given co-ordinates\r\n  ctx.translate(x, y)\r\n  ctx.rotate(angle)\r\n  if (moveMap) {\r\n    // move map so that given point is centre-bottom of screen\r\n    const pt = getCentreBottom()\r\n    ctx.translate(pt.x - x, pt.y - y)\r\n  } else {\r\n    // put map back where it started\r\n    ctx.translate(-1 * x, -1 * y)\r\n  }\r\n  ctx.save()\r\n  redraw()\r\n}\r\n\r\nexport function getCentreBottom() {\r\n  return ctx.transformedPoint(canvas.width / 2, canvas.height * 0.9)\r\n}\r\n\r\nfunction drawSelectEventText() {\r\n  if (!config.managing() && window.innerWidth >= config.BIG_SCREEN_BREAK_POINT) {\r\n    ctx.font = \"30pt Arial\"\r\n    ctx.textAlign = \"left\"\r\n    ctx.fillStyle = config.BLACK\r\n    ctx.fillText(t(\"Select an event\", \"\"), 20, canvas.height / 2)\r\n  }\r\n}\r\n\r\nexport function getMapSize() {\r\n  return { height: map.height, width: map.width }\r\n}\r\n\r\nfunction handleInputDown(e) {\r\n  input.dragStart = ctx.transformedPoint(input.lastX, input.lastY)\r\n  input.dragged = false\r\n  // need to cache this here since IE and FF don't set it for mousemove events\r\n  input.whichButton = e.which\r\n}\r\n\r\nfunction handleInputMove() {\r\n  if (input.dragStart) {\r\n    const to = ctx.transformedPoint(input.lastX, input.lastY)\r\n    to.x = Math.round(to.x)\r\n    to.y = Math.round(to.y)\r\n    const from = { x: Math.round(input.dragStart.x), y: Math.round(input.dragStart.y) }\r\n    // simple debounce so that very small drags are treated as clicks instead\r\n    if (Math.abs(to.x - from.x) + Math.abs(to.y - from.y) > 5) {\r\n      if (gpsFileLoaded()) {\r\n        adjustTrack(from, to, input.whichButton)\r\n      } else {\r\n        if (getActiveTab() === config.TAB_CREATE) {\r\n          adjustManagerControls(from, to, input.whichButton)\r\n        } else {\r\n          const overlayDragged = overlay.mouseDrag(from, to)\r\n          if (!overlayDragged) {\r\n            ctx.translate(to.x - input.dragStart.x, to.y - input.dragStart.y)\r\n          }\r\n        }\r\n      }\r\n      input.dragged = true\r\n      redraw()\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleInputUp(e) {\r\n  // console.log(\"Up\", e.pageX, e.pageY, e)\r\n  const activeTab = getActiveTab()\r\n  if (!input.dragged) {\r\n    if (activeTab === config.TAB_CREATE) {\r\n      managerMouseUp(Math.round(input.dragStart.x), Math.round(input.dragStart.y))\r\n    } else {\r\n      // pass button that was clicked\r\n      if (activeTab === config.TAB_DRAW) {\r\n        mouseUp(Math.round(input.dragStart.x), Math.round(input.dragStart.y), e.which)\r\n      } else {\r\n        // on results or courses tab\r\n        overlay.mouseUp(Math.round(input.dragStart.x), Math.round(input.dragStart.y))\r\n      }\r\n    }\r\n  } else {\r\n    if (activeTab === config.TAB_CREATE) {\r\n      managerDragEnded()\r\n    } else {\r\n      if (activeTab === config.TAB_DRAW) {\r\n        dragEnded()\r\n      } else {\r\n        // on results or courses tab\r\n        overlay.dragEnded()\r\n      }\r\n    }\r\n  }\r\n  input.dragStart = null\r\n  redraw()\r\n}\r\n\r\nfunction handleMouseDown(e) {\r\n  saveMouseEvent(e)\r\n  handleInputDown(e)\r\n  e.stopPropagation()\r\n  return e.preventDefault()\r\n}\r\n\r\nfunction handleMouseMove(e) {\r\n  saveMouseEvent(e)\r\n  handleInputMove(e)\r\n  e.stopPropagation()\r\n  return e.preventDefault()\r\n}\r\n\r\nfunction handleMouseUp(e) {\r\n  handleInputUp(e)\r\n  e.stopPropagation()\r\n  return e.preventDefault()\r\n}\r\n\r\nfunction handleScroll(e) {\r\n  // console.log(e)\r\n  const delta = e.wheelDelta ? e.wheelDelta / 40 : e.detail ? -e.detail : 0\r\n  if (delta) {\r\n    zoom(delta)\r\n  }\r\n  e.stopPropagation()\r\n  return e.preventDefault()\r\n}\r\n\r\nfunction handleTouchEnd(e) {\r\n  // console.log(\"Touch end \", e)\r\n  handleInputUp(e)\r\n  input.pinched = false\r\n}\r\n\r\nfunction handleTouchMove(e) {\r\n  // console.log(\"Touch move \", e)\r\n  if (e.touches.length > 1) {\r\n    if (!input.pinched) {\r\n      savePinchInfo(e)\r\n    }\r\n  } else {\r\n    input.pinched = false\r\n  }\r\n  if (input.pinched && e.touches.length > 1) {\r\n    input.pinchEnd0 = ctx.transformedPoint(e.touches[0].pageX, e.touches[0].pageY)\r\n    input.pinchEnd1 = ctx.transformedPoint(e.touches[1].pageX, e.touches[1].pageY)\r\n    const oldDistance = getDistanceBetweenPoints(\r\n      input.pinchStart0.x,\r\n      input.pinchStart0.y,\r\n      input.pinchStart1.x,\r\n      input.pinchStart1.y\r\n    )\r\n    const newDistance = getDistanceBetweenPoints(\r\n      input.pinchEnd0.x,\r\n      input.pinchEnd0.y,\r\n      input.pinchEnd1.x,\r\n      input.pinchEnd1.y\r\n    )\r\n    // console.log (\"Pinch distance\", oldDistance / newDistance)\r\n    if (oldDistance / newDistance > 1.1) {\r\n      zoom(-1)\r\n      input.pinchStart0 = input.pinchEnd0\r\n      input.pinchStart1 = input.pinchEnd1\r\n    } else if (oldDistance / newDistance < 0.9) {\r\n      zoom(1)\r\n      input.pinchStart0 = input.pinchEnd0\r\n      input.pinchStart1 = input.pinchEnd1\r\n    }\r\n  } else {\r\n    input.lastX = e.touches[0].pageX\r\n    input.lastY = e.touches[0].pageY\r\n    handleInputMove(e)\r\n  }\r\n}\r\n\r\n// homegrown touch handling: seems no worse than adding some other library in\r\n// pinch zoom is primitive but works\r\nfunction handleTouchStart(e) {\r\n  // console.log(\"Touch start\", e)\r\n  e.preventDefault()\r\n  if (e.touches.length > 1) {\r\n    savePinchInfo(e)\r\n  }\r\n  input.lastX = e.touches[0].pageX\r\n  input.lastY = e.touches[0].pageY\r\n  handleInputDown(e)\r\n}\r\n\r\nexport function initialiseCanvas() {\r\n  addListeners()\r\n  trackTransforms(ctx)\r\n  resizeCanvas()\r\n}\r\n\r\nexport function loadNewMap(mapFile, isBeingCreated = false) {\r\n  document.getElementById(\"rg2-map-load-progress-label\").textContent = t(\"Loading map\", \"\")\r\n  document.getElementById(\"rg2-map-load-progress\").classList.remove(\"d-none\")\r\n  // setting src on an Image automatically triggers a request to load the map\r\n  // if this is a new map being created by the manager then just use the name we got\r\n  // else we are loading an existing map from the server\r\n  // adding date forces reload from server and avoids all sorts of caching problems with images\r\n  map.src = isBeingCreated ? mapFile : mapFile + \"?\" + Date.now()\r\n}\r\n\r\nfunction mapLoadedCallback() {\r\n  document.getElementById(\"rg2-map-load-progress\").classList.add(\"d-none\")\r\n  resetMapState()\r\n  if (config.managing()) {\r\n    managerMapLoadCallback()\r\n  }\r\n}\r\n\r\n// called whenever anything changes enough to need screen redraw\r\nexport function redraw() {\r\n  // timer used to debounce redraw for significant performance improvement\r\n  // if timer not running then schedule a redraw\r\n  if (redrawTimerID === undefined) {\r\n    // console.log(savedRedraws + \" saved redraws\")\r\n    savedRedraws = 0\r\n    redrawTimerID = setTimeout(() => {\r\n      redrawTimerID = undefined\r\n      doRedraw()\r\n    }, 75)\r\n  } else {\r\n    // timer is already running so redraw will happen when timer expires\r\n    savedRedraws = savedRedraws + 1\r\n  }\r\n}\r\n\r\nfunction doRedraw() {\r\n  // console.time(\"redraw\")\r\n  // Clear the entire canvas\r\n  // first save current transformed state\r\n  ctx.save()\r\n  // reset everything back to initial size/state/orientation\r\n  ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n  // fill canvas to erase things: clearRect doesn't work on Android (?) and leaves the old map as background when changing\r\n  ctx.globalAlpha = config.FULL_INTENSITY\r\n  ctx.fillStyle = config.GREY\r\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n  // go back to where we started\r\n  ctx.restore()\r\n  // using non-zero map height to show we have a map loaded\r\n  if (map.height > 0) {\r\n    // set map background white so that dimmed maps do not have grey showing through\r\n    ctx.fillStyle = config.WHITE\r\n    // this might have been reset by the ctx.restore()\r\n    ctx.globalAlpha = config.FULL_INTENSITY\r\n    ctx.fillRect(0, 0, map.width, map.height)\r\n    // set transparency of map\r\n    ctx.globalAlpha = options.perCentMapIntensity / 100\r\n    ctx.drawImage(map, 0, 0)\r\n    const tab = getActiveTab()\r\n    if (tab === config.TAB_DRAW) {\r\n      drawCourses(config.DIM)\r\n      controls.drawControls(false)\r\n      drawTracks()\r\n      drawNewTrack()\r\n    } else {\r\n      if (tab === config.TAB_CREATE) {\r\n        drawManagerControls()\r\n      } else {\r\n        drawCourses(config.DIM)\r\n        drawTracks()\r\n        overlay.drawOverlays()\r\n        controls.drawControls(false)\r\n        drawAnimation()\r\n      }\r\n    }\r\n  } else {\r\n    drawSelectEventText()\r\n  }\r\n  // console.timeEnd(\"redraw\")\r\n}\r\n\r\nfunction resetMapState() {\r\n  // place map in centre of canvas and scale it down to fit\r\n  let mapscale = 1\r\n  const heightscale = canvas.height / map.height\r\n  input.lastX = canvas.width / 2\r\n  input.lastY = canvas.height / 2\r\n  input.zoomSize = 1\r\n  input.dragStart = null\r\n  // looks odd but this works for initialisation\r\n  input.dragged = true\r\n  // don't stretch map: just shrink to fit\r\n  if (heightscale < 1) {\r\n    mapscale = heightscale\r\n  }\r\n  // move map into view on small screens\r\n  // avoid annoying jumps on larger screens\r\n  if (window.innerWidth >= config.BIG_SCREEN_BREAK_POINT) {\r\n    // TODO sort out offsets for control panel\r\n    ctx.setTransform(mapscale, 0, 0, mapscale, document.getElementById(\"rg2-left-info-panel\").offsetWidth + 80, 0)\r\n  } else {\r\n    ctx.setTransform(mapscale, 0, 0, mapscale, 0, 0)\r\n  }\r\n  // don't need to rotate here since the call to setTransform above does that for us\r\n  ctx.displayAngle = 0\r\n  ctx.save()\r\n  redraw()\r\n}\r\n\r\nexport function resizeCanvas() {\r\n  input.scaleFactor = config.DEFAULT_SCALE_FACTOR\r\n  // allow for header\r\n  const headerHeight = document.getElementById(\"rg2-header-container\").offsetHeight\r\n  document.getElementById(\"rg2-container\").style.height = window.innerHeight - headerHeight + \"px\"\r\n  canvas.width = window.innerWidth\r\n  canvas.height = window.innerHeight - headerHeight\r\n  resetMapState()\r\n}\r\n\r\nfunction rotateMap(direction) {\r\n  // rotate a little bit from UI control input\r\n  // direction is -1 for left and 1 for right\r\n  const angle = direction * (Math.PI / 36)\r\n  // rotate around centre of map\r\n  applyMapRotation(angle, map.width / 2, map.height / 2, false)\r\n}\r\n\r\nfunction saveMouseEvent(e) {\r\n  input.lastX = e.pageX - canvas.offsetParent.offsetLeft\r\n  input.lastY = e.pageY - canvas.offsetParent.offsetTop\r\n}\r\n\r\nfunction savePinchInfo(e) {\r\n  input.pinchStart0 = ctx.transformedPoint(e.touches[0].pageX, e.touches[0].pageY)\r\n  input.pinchStart1 = ctx.transformedPoint(e.touches[1].pageX, e.touches[1].pageY)\r\n  input.pinched = true\r\n}\r\n\r\nfunction trackTransforms(oldctx) {\r\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\")\r\n  let xform = svg.createSVGMatrix()\r\n  let savedTransforms = []\r\n  let save = oldctx.save\r\n  oldctx.save = function () {\r\n    savedTransforms.push(xform.translate(0, 0))\r\n    return save.call(oldctx)\r\n  }\r\n  let restore = oldctx.restore\r\n  oldctx.restore = function () {\r\n    xform = savedTransforms.pop()\r\n    return restore.call(oldctx)\r\n  }\r\n  let scale = oldctx.scale\r\n  oldctx.scale = function (sx, sy) {\r\n    xform = xform.scaleNonUniform(sx, sy)\r\n    return scale.call(oldctx, sx, sy)\r\n  }\r\n  let translate = oldctx.translate\r\n  oldctx.translate = function (dx, dy) {\r\n    xform = xform.translate(dx, dy)\r\n    return translate.call(oldctx, dx, dy)\r\n  }\r\n  let setTransform = oldctx.setTransform\r\n  oldctx.setTransform = function (a, b, c, d, e, f) {\r\n    xform.a = a\r\n    xform.b = b\r\n    xform.c = c\r\n    xform.d = d\r\n    xform.e = e\r\n    xform.f = f\r\n    return setTransform.call(oldctx, a, b, c, d, e, f)\r\n  }\r\n  let pt = svg.createSVGPoint()\r\n  oldctx.transformedPoint = function (x, y) {\r\n    // converts x, y screen co-ords to x, y in map image\r\n    pt.x = x\r\n    pt.y = y\r\n    return pt.matrixTransform(xform.inverse())\r\n  }\r\n  let rotate = oldctx.rotate\r\n  oldctx.rotate = function (radians) {\r\n    xform = xform.rotate((radians * 180) / Math.PI)\r\n    return rotate.call(oldctx, radians)\r\n  }\r\n}\r\n\r\nfunction zoom(zoomDirection) {\r\n  if (!config.managing() && getActiveEventID() === null) {\r\n    return\r\n  }\r\n  const factor = Math.pow(input.scaleFactor, zoomDirection)\r\n  const tempZoom = input.zoomSize * factor\r\n  // limit zoom to avoid things disappearing\r\n  // chosen values seem reasonable after some quick tests\r\n  if (tempZoom < 50 && tempZoom > 0.05) {\r\n    input.zoomSize = tempZoom\r\n    const pt = ctx.transformedPoint(input.lastX, input.lastY)\r\n    ctx.translate(pt.x, pt.y)\r\n    ctx.scale(factor, factor)\r\n    ctx.translate(-pt.x, -pt.y)\r\n    ctx.save()\r\n    redraw()\r\n  }\r\n}\r\n","import \"../scss/rg2.scss\"\r\n// eslint-disable-next-line no-unused-vars\r\nimport * as bootstrap from \"bootstrap\"\r\nimport { initialiseCanvas } from \"./canvas\"\r\nimport { config, loadConfigOptions } from \"./config\"\r\nimport { initialiseCourses } from \"./courses\"\r\nimport { doGetEvents, getActiveKartatID, isValidKartatID, loadEventByKartatID } from \"./events\"\r\nimport { parseLocationHash } from \"./hash\"\r\nimport { configureUI } from \"./rg2ui\"\r\nimport { initLanguageOptions } from \"./translate\"\r\nimport { initialiseManager } from \"./manager\"\r\n\r\nif (document.readyState !== \"loading\") {\r\n  rg2init()\r\n} else {\r\n  document.addEventListener(\"DOMContentLoaded\", rg2init)\r\n}\r\n\r\nfunction rg2init() {\r\n  const startup = document.querySelector(\".rg2-startup\")\r\n  startup.addEventListener(\"transitionend\", () => {\r\n    startup.remove()\r\n    // TODO: looks odd but needed to avoid problems with Controls class\r\n    initialiseCourses()\r\n    loadConfigOptions()\r\n    configureUI()\r\n    initLanguageOptions()\r\n    if (config.managing()) {\r\n      initialiseManager(rg2Config.keksi)\r\n    }\r\n    initialiseCanvas()\r\n    window.onpopstate = handleNavigation\r\n    // check if a specific event has been requested\r\n    if (window.location.hash && !config.managing()) {\r\n      parseLocationHash(window.location.hash)\r\n    }\r\n    document.getElementById(\"rg2-event-title\").innerHTML = \"Routegadget 2\"\r\n    doGetEvents()\r\n  })\r\n  startup.style.opacity = 0\r\n}\r\n\r\nfunction handleNavigation() {\r\n  // console.log(\"Pop \" + window.location.hash)\r\n  // strange null popstates get generated when you toggle the left info panel via the rg2 logo\r\n  // so just protect against it for now\r\n  if (window.location.hash === \"\") {\r\n    return\r\n  }\r\n  // don't try to do anything clever in manager\r\n  if (!config.managing()) {\r\n    // find out where we are trying to go\r\n    const requestedKartatID = parseLocationHash(window.location.hash)\r\n    if (isValidKartatID(requestedKartatID)) {\r\n      // prevent double loading of events for cases where we get popstate for a change\r\n      // triggered via RG2 interaction rather than browser navigation\r\n      // ... or something like that: at least this seems to work in FF, Chrome and Edge\r\n      // which is a start\r\n      if (getActiveKartatID() !== requestedKartatID) {\r\n        loadEventByKartatID(requestedKartatID)\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":["rg2Axios","axios","getApi","params","onResponse","errorMsg","response","error","reportJSONFail","postApi","data","handleKeksi","config","showWarningDialog","dictionary","keys","createLanguageDropdown","languages","dropdown","selected","generateOption","i","e","newlang","setNewLanguage","doGetNewLanguage","lang","handleLanguageResponse","getEnglishKey","str","idx","initLanguageOptions","translateAllText","t","element","key","elements","el","extractAttributeZero","nodelist","attribute","defaultValue","formatSecsAsMMSS","secs","minutes","formattedtime","seconds","formatSecsAsHHMMSS","hours","value","text","opt","generateSelectOption","getAngle","x1","y1","x2","y2","angle","getDistanceBetweenPoints","getLatLonDistance","lat1","lon1","lat2","lon2","dLat","dLon","a","getSecsFromHHMM","time","bits","getSecsFromHHMMSS","title","showToast","toast","newToast","toastEl","bootstrap.Toast","extractTextContentZero","modalDialog","createModalDialog","dlg","showCancelButton","modalContainer","cancelButton","modalContent","doIt","dialog","options","bootstrap.Modal","validateValue","selector","isValid","elem","valid","colours","colourIndex","getNextTrackColour","getOverprintDetails","size","getMapSize","scaleFact","circleSize","loadConfigOptions","storedOptions","prop","removeDrawnRouteDetails","route","routes","saveConfigOptions","saveDrawnRouteDetails","setConfigOption","option","Controls","code","x","y","newCode","drawDot","ctx","metrics","xoffset","yoffset","scale","startx","starty","DEGREES_120","courses","getCourses","codes","j","Handle","index","Handles","b","count","from","to","pt","handle","dx","dy","points","RouteData","GPSTrack","offset","worldFile","getWorldFile","split","adjustTrack","redraw","trk","oldtime","oldx","oldy","nexttime","difftime","xpersec","ypersec","latLon","controlXY","scaleX","scaleY","deltaX","deltaY","getControlXY","speedAverage","speedAtControl","range","speedExtract","bestGuess","timestring","speed","mapIsGeoreferenced","trksegs","trkpts","lat","lon","position","file","reader","err","minX","maxX","minY","maxY","mapSize","id","extractItems","items","introText","generateHash","hashID","hashRoutes","hashCourses","hash","getHashCourses","getHashID","getHashRoutes","getHashTab","getIDFromLocationHash","locationHash","parseLocationHash","fields","setLocationHash","setEventHash","newid","setHashCourses","displayedCourses","setHashRoutes","displayedRoutes","CourseParser","worldfile","localWorldfile","rawXML","xml","version","latlng","control","places","coords","lng","courseName","className","latLng","name","course","nodeList","tagName","controlList","type","isGeoref","geopos","mapPosition","controls","Georefs","html","Worldfile","wf","MapData","ResultParserCSV","rawCSV","result","info","nextsplit","nextcode","splits","totaltime","headers","titles","values","found","nc","classifier","rows","newResult","commas","semicolons","ResultParserIOFV2","resultlist","splitlist","finishtime","l","temp","personlist","classlist","ResultParserIOFV3","k","timeInt","ResultParser","fileFormat","parsedResults","User","keksi","nameSelector","passwordSelector","regex","nameValid","passwordValid","input","pattern","user","newMap","georefsystems","mapIndex","format","newEventIsScoreEvent","hasResults","newcontrols","mapping","isEnrichCourseNames","mapLoaded","coursesGeoreferenced","controlsAdjusted","drawingCourses","drawnCourse","results","variants","resultCourses","mapFile","resultsOrCourseFile","resultsFileFormat","encodings","errorCount","encodingIndex","useThisEncoding","backgroundLocked","sortResults","maps","localworldfile","georefmap","unusedMaps","eventSelectDatePicker","eventEditDatePicker","defaultExcludedText","addNewControl","adjustManagerControls","p1","p2","button","checkResultsFileEncoding","errors","testForInvalidCharacters","processResultFile","lowest","readResults","confirmAddMap","doUploadMapFile","confirmCreateEvent","validateData","doCreateEvent","confirmDeleteEvent","doDeleteEvent","confirmDeleteRoute","doDeleteRoute","confirmDeleteUnusedMaps","boxes","checked","box","doDeleteUnusedMaps","confirmUpdateEvent","doUpdateEvent","convertWorldFile","system","proj4","source","dest","xpx","ypx","xsrc","ysrc","p","transformed","updateGeorefMap","copyXYToOldXY","createCourseDropdown","courseidx","enrichCourseName","createResultCourseMapping","displayCourseAllocations","displayInfoDialog","displayUnusedMaps","doAddMap","handleMapAdded","generateNewEventData","handleEventAdded","handleEventDeleted","routeid","handleRouteDeleted","map","handleUnusedMapsDeleted","doGetMaps","handleMapsLoaded","doLogin","handleLoginResponse","exclude","handleEventUpdated","details","formData","handleMapUploaded","drawManagerControls","enableManager","setButtons","getEventLevelDropdown","loadNewMap","Datepicker","setMapName","setCourseName","setEvent","setGeoref","course_name","classes","class_name","enrichCourseNames","eventFinishedLoading","kartatid","event","getEventInfoForKartatID","decode","isScoreEvent","getRouteDeleteDropdown","eventListLoaded","events","getEventEditDropdown","findUnusedMaps","extractVariants","getVariantID","mapIDIsInUse","fitControlsToMap","georefOK","getBoundingBox","setControlLocations","mapResultsToCourses","renumberResults","sortResultItems","getControlCount","courseid","c","getCourseIDForResult","getCourseInfoAsHTML","getCourseName","getMapDropdown","getResultInfoAsHTML","runners","oldcourse","getRoutesForEvent","match","doGetEvents","setActiveEventIDByKartatID","setEventTitleBar","hasZeroTime","initialiseData","initialiseEncodings","initialiseManager","L","initialiseLocationMap","managerDragEnded","managerMapLoadCallback","managerMouseUp","newCourses","processCourseFile","parsedCourses","processMap","readCourses","readGeorefFile","args","defaultGeorefValue","readMapFile","newResults","startDrawingCourses","validateMapUpload","loadResults","toggleMoveAll","toggleResultsRequired","toggleScoreEvent","toggleEnrichCourseNames","toggleSortResults","load","loadEventByKartatID","optionValue","rawtext","checkedState","poly_coords","poly","upload","image","msg","Result","scorecodes","scorex","scorey","startindex","endindex","cumulativeDistance","oldt","deltat","olddist","deltadist","trackOK","incrementTracksCount","rawSplits","nextcontrol","nextx","nexty","dist","previouscontrolindex","filter","drawLinesBetweenControls","stopCount","startIndex","endIndex","fromSplit","toSplit","f","getCourseDetails","currenttime","lastx","lasty","totaldist","moved","colour","red","green","initials","addNext","thisControl","getTimeAndSplitsForID","maxMetresPerSecond","minMetresPerSecond","secondsPerSample","sorted","metresPerPixel","getMetresPerPixel","maxspeed","minspeed","oldDelta","delta","display","addResults","variant","isValidCourseId","setDisplayOrder","setDeletionInfo","setScoreCourseInfo","handleExclusions","sanitiseSplits","addTracks","tracks","resultIndex","allResultsForCourseReplayed","resultIsBeingAnimated","allTracksDisplayed","allTracksForCourseDisplayed","allTracksForCourseReplayed","anyTracksForCourseDisplayed","countResultsByCourseID","createNameDropdown","setName","createResultMenu","formatResultListAsAccordion","setResultsSearch","setDisplayedRunnerCounts","setResultCheckboxes","row","displayStatsDialog","deleteResultsForEvent","displayScoreCourse","drawTracks","getFilterDetails","tables","oldCourseID","tracksForThisCourse","prepareResults","res","getBottomRows","getCourseHeader","getNameHTML","showTrack","showReplay","formatTotalRunningTime","generateScoreCourses","updateScoreCourse","getAllResultsForCourse","list","getAllResultsForVariant","getAllRunnersForCourse","getAllRunnersWithTrackForCourse","getCommentsForEvent","hasComments","getCourseForResult","check","getDeletionInfo","getDisplayedTrackDetails","getFullResultforResultID","resultid","getFullResultForRawID","rawid","namehtml","getRawDisplayOrder","getResultsInfo","getResultsStats","validWorldFile","resultsinfo","coursearray","getCoursesForEvent","digits","getActiveMapID","getTracksOnDisplay","currentCourseID","adjustedCourseIDs","excluded","pos","prevTime","sortByCourseIDThenResultID","oldID","canCombine","resetSpeedColours","resultIDExists","previousValidSplit","nextSplitInvalid","expectedSplits","getNumberOfControlsOnCourse","saveResults","getnumberOfCourses","setResultsCount","saveRoutes","createCourseMenu","eventIsLocked","getActiveTab","tab","target","eventid","getKartatEventID","deletionInfo","r","displayedRows","setResultColour","trackColour","searchBox","resultTable","setScoreCourseDisplay","baseresult","setTrackDisplayByCourse","updateTrackNames","setTrackDisplayByResult","Runner","lastPointIndex","ind","itemsx","itemsy","itemstime","timeatprevitem","timeatitem","fromx","fromy","fromdist","item","tox","toy","diffx","diffy","diffdist","difft","ModuleRegistry","ClientSideRowModelModule","tabs","content","isScoreOrRelay","byLegPos","byRacePos","splitsChart","legChart","activeLeg","maxIterationIndex","iterationIndex","adjustSplits","newExclude","calculateLostTimeForIteration","iter","loss","calculatePerformanceForIteration","times","refTimes","averages","getAverages","ratios","nonZeroRatios","ratio","sum","weight","calculateSplitsforIteration","decrementIterations","setIterations","displayControlDetails","stacks","leg","losses","stack","displayStats","handleTabActivation","drawLegChart","getBackgroundColor","context","getBackgroundLossColor","predicted","labels","refTime","worst","timeMax","Chart","label","legChartElement","generateLegChart","generateLegPositions","sortLegTimes","prevPos","generateSplitsChart","skipped","val","array","getLegPosInfo","legPos","averageLegPos","lossMax","splitsChartElem","prepareStats","generateSplitsTable","columnDefs","renderSplits","rowData","setResultIndex","getStandardDeviation","gridOptions","height","wrapper","table","createGrid","generateSummary","packRow","isNumberOverZero","generateTableByLegPos","names","behind","timeComparator","perfComparator","generateTableByRacePos","rawData","perCent","total","adjustedCount","median","best","average","getMean","getPerfValue","mean","sq","getStatsHeader","active","getStatsLayout","getTimeValue","incrementIterations","initialise","initialiseCourse","rg2Exception","legTimes","raceTimes","n","iterateLostTime","loadStats","eventHasResults","splitinfo","t1","t2","infoPanelControl","rightInfoPanelEl","rightInfoPanelTitle","rightInfoPanel","bootstrap.Offcanvas","leftInfoPanelEl","leftInfoPanelTitle","leftInfoPanelBody","leftInfoPanel","resizePanels","MAX_OFFSET","MIN_OFFSET","animationPanelDisplayed","configureDrawDialog","setNameAndTime","comments","waitThreeSeconds","undo","undoLastPoint","save","saveRoute","reset","resetDrawing","adjustOffset","adjust","undoGPSAdjust","autofit","autofitGPSTrack","saveGPS","saveGPSRoute","readGPS","configureSettingsDialog","configureSettingsCheckbox","configureSettingsSlider","slider","gpsSpeedChanged","getMinSpeedLabel","getMaxSpeedLabel","units","configureStatsDialog","configureUI","resizeCanvas","getScrollPosAttrName","initialiseInfoPanelDialog","displayInfoPanelDialog","tabActivated","initialiseButtons","createEventMenu","eventList","formatEvents","eventTable","displayAboutDialog","eventStats","getEventStats","displaySettingsDialog","getInfoPanelBodyHTML","body","getInfoPanelHeaderHTML","hidden","disabled","minSpeedLabel","maxSpeedLabel","btn","normalTabs","managerTabs","resetDrawDialog","headerHeight","footerHeight","show","setCourseDisplay","showCourse","showAllCourses","allCoursesDisplayed","setFilter","getCoursesOnDisplay","setAllCoursesDisplay","setAllFilters","track","deleteRoute","allCourseTracks","allTracks","addRunner","removeRunner","allCourseTracksReplay","allCourseReplay","courseresults","animateRunners","replay","showCourseInProgress","scrollPos","routeToDelete","pendingCourseID","controlx","controly","angles","nextControl","previousValidControlIndex","isScoreCourse","addNewPoint","closeEnough","addRouteDataPoint","alignMapToAngle","getNextValidControl","adjustBetweenTwoLockedPoints","previousHandle","nextHandle","scaleRotateAroundSingleLockedPoint","earliest","latest","dragTrack","alignMap","confirmCourseChange","doChangeCourse","doCancelChangeCourse","doDrawingReset","initialiseDrawing","doSaveRoute","setDeltas","handleRouteSaved","dragEnded","drawCircle","radius","drawNewTrack","drawRoute","getPreviousValidControl","gpsFileLoaded","routeSaved","mouseUp","rotatePoint","p3","fromTime","toTime","setDrawingCourse","startDrawing","nameEntry","timeEntry","distanceSoFar","getCourseLegLengths","length","Event$1","activeEventID","eventRequestInProgress","configureUIForNewEvent","btnSplitsbrowser","doGetEvent","handleEventResponse","handleEventsResponse","comment","georef","lock","getActiveEventDate","getActiveEventID","getActiveKartatID","getActiveEventName","getEventIDForKartatID","realid","getExcludedText","eventinfo","stats","getLengthUnits","getMapFileName","pixels","w","saveCourses","Event","isValidKartatID","resetAnimation","deleteAllCourses","mapID","Course","intensity","c1x","c1y","c2x","c2y","c3x","c3y","ex","totaltracks","numberOfCourses","highestControlNumber","addCourse","formatCourses","filterTable","formatCourseFilters","filterChanged","drawCourses","formatCourseDetails","getCourseDetailsByName","coursename","displayed","accum","initialiseCourses","div","timeDeltas","timerInterval","alignmentTimerInterval","alignmentLoopCount","mapIsAligned","timeDelta","timer","alignmentTimer","alignments","animationSecs","milliSecs","realTime","earliestStartSecs","latestFinishSecs","tailLength","tailStartTimeSecs","useFullTails","massStartControl","massStartByControl","displayNames","displayInitials","startSecs","slowestTimeSecs","animationPanel","clockSlider","playIcon","startIcon","pauseIcon","waitIcon","trackNames","trackNamesBody","btnRunners","btnStartStop","replayByControl","namesPosition","interact","runner","update","updateAnimationDetails","getCentreBottom","incrementAlignmentTime","doAnimate","calculateAnimationRange","checkForStopControl","currentTime","allAtControl","setByControlLabel","setNextControlDetails","clockSliderMoved","setAnimationTime","createSpeedDropdown","setReplaySpeed","createByControlDropdown","minLength","createTailsDropdown","tails","setTailsLength","drawAnimation","clock","timeOffset","drawName","showDistanceRun","getDistanceAtTime","cumDist","getTrackNames","extraTracks","getTrackNamesHTML","oldCourse","incrementAnimationTime","initialiseAnimationPanel","initialiseClockSlider","toggleAnimation","setReplayMassStart","btnRealTime","setReplayRealTime","setReplayByControl","toggleNameDisplay","min","max","clockSliderContainer","resetNextStopTime","minSplitsLength","stopAnimation","setRunnerColor","startAnimation","color","Overlay","deleteOverlay","ol","deleteAllOverlays","endOverlay","finished","completed","completedDiv","startedDiv","canvas","overlay","redrawTimerID","addListeners","handleTouchStart","handleTouchMove","handleTouchEnd","handleScroll","handleMouseDown","handleMouseMove","handleMouseUp","mapLoadedCallback","zoom","rotateMap","resetMapState","moveMap","applyMapRotation","drawSelectEventText","handleInputDown","handleInputMove","handleInputUp","activeTab","saveMouseEvent","savePinchInfo","oldDistance","newDistance","initialiseCanvas","trackTransforms","isBeingCreated","doRedraw","mapscale","heightscale","direction","oldctx","svg","xform","savedTransforms","restore","sx","sy","translate","setTransform","d","rotate","radians","zoomDirection","factor","tempZoom","rg2init","startup","handleNavigation","requestedKartatID"],"mappings":"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"}