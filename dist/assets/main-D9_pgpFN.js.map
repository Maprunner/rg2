{"version":3,"mappings":"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","names":["rg2Axios","axios","getApi","params","onResponse","errorMsg","response","error","reportJSONFail","postApi","data","handleKeksi","config","showWarningDialog","dictionary","keys","createLanguageDropdown","languages","dropdown","selected","generateOption","i","e","newlang","setNewLanguage","doGetNewLanguage","lang","handleLanguageResponse","getEnglishKey","str","idx","initLanguageOptions","translateAllText","t","element","key","elements","el","extractAttributeZero","nodelist","attribute","defaultValue","formatSecsAsMMSS","secs","minutes","formattedtime","seconds","formatSecsAsHHMMSS","hours","value","text","opt","generateSelectOption","getAngle","x1","y1","x2","y2","angle","getDistanceBetweenPoints","getLatLonDistance","lat1","lon1","lat2","lon2","dLat","dLon","a","getSecsFromHHMM","time","bits","getSecsFromHHMMSS","title","showToast","toast","newToast","toastEl","bootstrap.Toast","extractTextContentZero","modalDialog","createModalDialog","dlg","showCancelButton","modalContainer","cancelButton","modalContent","doIt","dialog","options","bootstrap.Modal","validateValue","selector","isValid","elem","valid","colours","colourIndex","getNextTrackColour","getOverprintDetails","size","getMapSize","scaleFact","circleSize","loadConfigOptions","storedOptions","prop","removeDrawnRouteDetails","route","routes","saveConfigOptions","saveDrawnRouteDetails","setConfigOption","option","Controls","code","x","y","newCode","drawDot","ctx","metrics","xoffset","yoffset","scale","startx","starty","DEGREES_120","courses","getCourses","codes","j","Handle","index","Handles","b","count","from","to","pt","handle","dx","dy","points","RouteData","GPSTrack","offset","worldFile","getWorldFile","split","adjustTrack","redraw","trk","oldtime","oldx","oldy","nexttime","difftime","xpersec","ypersec","latLon","controlXY","scaleX","scaleY","deltaX","deltaY","getControlXY","speedAverage","speedAtControl","range","speedExtract","bestGuess","timestring","speed","mapIsGeoreferenced","trksegs","trkpts","lat","lon","position","file","reader","err","minX","maxX","minY","maxY","mapSize","id","extractItems","items","introText","generateHash","hashID","hashRoutes","hashCourses","hash","getHashCourses","getHashID","getHashRoutes","getHashTab","getIDFromLocationHash","locationHash","parseLocationHash","fields","setLocationHash","setEventHash","newid","setHashCourses","displayedCourses","setHashRoutes","displayedRoutes","Result","isScoreEvent","scorecodes","scorex","scorey","decode","startindex","endindex","cumulativeDistance","oldt","deltat","olddist","deltadist","trackOK","incrementTracksCount","rawSplits","course","nextcontrol","nextx","nexty","dist","previouscontrolindex","controls","filter","drawLinesBetweenControls","stopCount","startIndex","endIndex","fromSplit","toSplit","f","getCourseDetails","totaltime","currenttime","lastx","lasty","totaldist","moved","colour","red","green","name","initials","addNext","thisControl","info","getTimeAndSplitsForID","maxMetresPerSecond","minMetresPerSecond","secondsPerSample","sorted","metresPerPixel","getMetresPerPixel","maxspeed","minspeed","oldDelta","delta","display","results","addResults","variant","isValidCourseId","result","setDisplayOrder","setDeletionInfo","setScoreCourseInfo","handleExclusions","sanitiseSplits","addTracks","tracks","resultIndex","allResultsForCourseReplayed","courseid","resultIsBeingAnimated","allTracksDisplayed","allTracksForCourseDisplayed","allTracksForCourseReplayed","anyTracksForCourseDisplayed","countResultsByCourseID","getEventInfoForKartatID","createNameDropdown","setName","createResultMenu","html","formatResultListAsAccordion","setResultsSearch","setDisplayedRunnerCounts","setResultCheckboxes","rows","row","displayStatsDialog","deleteResultsForEvent","displayScoreCourse","drawTracks","getFilterDetails","headers","tables","oldCourseID","tracksForThisCourse","prepareResults","res","getBottomRows","getCourseHeader","getNameHTML","showTrack","showReplay","formatTotalRunningTime","generateScoreCourses","updateScoreCourse","getAllResultsForCourse","list","getAllResultsForVariant","getAllRunnersForCourse","runners","getAllRunnersWithTrackForCourse","getCommentsForEvent","hasComments","getCourseForResult","check","getDeletionInfo","getDisplayedTrackDetails","getCourseName","getFullResultforResultID","resultid","getFullResultForRawID","rawid","namehtml","getRawDisplayOrder","getResultsInfo","getResultsStats","validWorldFile","resultsinfo","coursearray","getCoursesForEvent","wf","digits","getActiveMapID","getRoutesForEvent","getTracksOnDisplay","currentCourseID","adjustedCourseIDs","excluded","pos","prevTime","sortByCourseIDThenResultID","oldID","canCombine","resetSpeedColours","resultIDExists","previousValidSplit","nextSplitInvalid","expectedSplits","getNumberOfControlsOnCourse","saveResults","getnumberOfCourses","setResultsCount","saveRoutes","createCourseMenu","eventIsLocked","getActiveTab","tab","target","eventid","getKartatEventID","deletionInfo","r","displayedRows","setResultColour","trackColour","searchBox","resultTable","setScoreCourseDisplay","baseresult","setTrackDisplayByCourse","updateTrackNames","setTrackDisplayByResult","Runner","lastPointIndex","control","ind","itemsx","itemsy","itemstime","timeatprevitem","timeatitem","fromx","fromy","fromdist","item","tox","toy","diffx","diffy","diffdist","difft","tabs","content","isScoreOrRelay","byLegPos","byRacePos","splitsChart","legChart","activeLeg","maxIterationIndex","iterationIndex","startTab","activeTab","Chart","adjustSplits","newExclude","calculateLostTimeForIteration","iter","loss","k","calculatePerformanceForIteration","times","refTimes","averages","getAverages","ratios","nonZeroRatios","ratio","sum","weight","calculateSplitsforIteration","splits","changeControlNumberDown","drawLegChart","changeControlNumberUp","changeCourse","direction","prepareStats","changeName","displayControlDetails","stacks","leg","losses","stack","displayStats","handleTabActivation","nameBack","nameForward","courseBack","courseForward","getBackgroundColor","context","getBackgroundLossColor","getBackgroundGainColor","getBackgroundPredictedColor","predicted","actual","actuals","gains","labels","refTime","worst","scaleBase","timeMax","label","legChartElement","generateLegChart","generateLegPositions","sortLegTimes","prevPos","generateSplitsChart","skipped","val","array","getLegPosInfo","legPos","pred","averageLegPos","best","gain","lossGainMax","splitsChartElem","event","generateSplitsTable","columnDefs","renderSplits","rowData","setResultIndex","getStandardDeviation","gridOptions","height","wrapper","table","generateSummary","packRow","nameButtons","courseButtons","isNumberOverZero","titles","generateTableByLegPos","names","behind","timeComparator","perfComparator","generateTableByRacePos","rawData","perCent","total","adjustedCount","median","average","getMean","getPerfValue","p","values","mean","sq","getStatsHeader","active","getStatsLayout","statsTitleRow","getTimeValue","_a","importUtils","createGrid","ModuleRegistry","__vitePreload","ClientSideRowModelModule","n","initialise","initialiseCourse","rg2Exception","legTimes","raceTimes","iterateLostTime","p1","p2","bootstrap.Offcanvas","splitinfo","classes","msg","showStats","eventHasResults","t1","t2","infoPanelControl","rightInfoPanelEl","rightInfoPanelTitle","rightInfoPanel","leftInfoPanelEl","leftInfoPanelTitle","leftInfoPanelBody","leftInfoPanel","resizePanels","MAX_OFFSET","MIN_OFFSET","animationPanelDisplayed","configureDrawDialog","setNameAndTime","comments","waitThreeSeconds","undo","undoLastPoint","save","saveRoute","reset","resetDrawing","input","adjustOffset","adjust","undoGPSAdjust","autofit","autofitGPSTrack","saveGPS","saveGPSRoute","readGPS","configureSettingsDialog","configureSettingsCheckbox","configureSettingsSlider","slider","gpsSpeedChanged","getMinSpeedLabel","getMaxSpeedLabel","units","configureUI","resizeCanvas","getScrollPosAttrName","initialiseInfoPanelDialog","displayInfoPanelDialog","tabActivated","initialiseButtons","createEventMenu","eventList","formatEvents","eventTable","kartatid","loadEventByKartatID","displayAboutDialog","eventStats","getEventStats","displaySettingsDialog","getInfoPanelBodyHTML","body","getInfoPanelHeaderHTML","hidden","disabled","minSpeedLabel","maxSpeedLabel","normalTabs","managerTabs","resetDrawDialog","createCourseDropdown","headerHeight","footerHeight","show","setCourseDisplay","showCourse","showAllCourses","allCoursesDisplayed","setFilter","getCoursesOnDisplay","setAllCoursesDisplay","setAllFilters","track","deleteRoute","confirmDeleteRoute","allCourseTracks","allTracks","addRunner","removeRunner","allCourseTracksReplay","allCourseReplay","courseresults","animateRunners","replay","showCourseInProgress","scrollPos","alignmentTimerInterval","alignmentLoopCount","alignmentTimer","alignments","mapIsAligned","routeToDelete","pendingCourseID","controlx","controly","angles","nextControl","previousValidControlIndex","isScoreCourse","addNewPoint","closeEnough","addRouteDataPoint","alignMapToAngle","getNextValidControl","resetMapState","adjustBetweenTwoLockedPoints","previousHandle","nextHandle","scaleRotateAroundSingleLockedPoint","button","earliest","latest","dragTrack","getCentreBottom","getCentreTop","mapDistance","screenDistance","controlAngle","incrementAlignmentTime","alignMap","confirmCourseChange","doChangeCourse","doCancelChangeCourse","doDeleteRoute","doDrawingReset","handleRouteDeleted","initialiseDrawing","doSaveRoute","setDeltas","handleRouteSaved","dragEnded","drawCircle","radius","drawNewTrack","drawRoute","getPreviousValidControl","gpsFileLoaded","doGetEvents","routeSaved","mouseUp","rotatePoint","p3","fromTime","toTime","setDrawingCourse","startDrawing","nameEntry","timeEntry","distanceSoFar","getCourseLegLengths","length","Worldfile","lng","Event$1","events","activeEventID","eventRequestInProgress","configureUIForNewEvent","btnSplitsbrowser","doGetEvent","setActiveEventIDByKartatID","handleEventResponse","handleEventsResponse","comment","georef","lock","getActiveEventDate","getActiveEventID","getActiveKartatID","getActiveEventName","getEventIDForKartatID","realid","getExcludedText","eventinfo","stats","getLengthUnits","getMapFileName","pixels","w","setEventTitleBar","saveCourses","Event","isValidKartatID","resetAnimation","deleteAllCourses","loadNewMap","mapIDIsInUse","mapID","Course","intensity","c1x","c1y","c2x","c2y","c3x","c3y","ex","totaltracks","numberOfCourses","highestControlNumber","addCourse","formatCourses","filterTable","formatCourseFilters","filterChanged","drawCourses","formatCourseDetails","details","getCourseDetailsByName","coursename","displayed","accum","exclude","initialiseCourses","div","timeDeltas","timerInterval","timeDelta","timer","animationSecs","milliSecs","realTime","earliestStartSecs","latestFinishSecs","tailLength","tailStartTimeSecs","massStartControl","massStartByControl","displayNames","displayInitials","startSecs","slowestTimeSecs","animationPanel","clockSlider","playIcon","startIcon","pauseIcon","waitIcon","trackNames","trackNamesBody","btnRunners","btnStartStop","replayByControl","namesPosition","interact","runner","update","updateAnimationDetails","doAnimate","calculateAnimationRange","checkForStopControl","currentTime","allAtControl","setByControlLabel","setNextControlDetails","clockSliderMoved","setAnimationTime","createSpeedDropdown","setReplaySpeed","createByControlDropdown","handleReplayStartDropdown","minLength","createTailsDropdown","tails","setTailsLength","drawAnimation","clock","timeOffset","tailEnd","tailStart","drawName","showDistanceRun","getDistanceAtTime","cumDist","getTrackNames","extraTracks","getTrackNamesHTML","oldCourse","incrementAnimationTime","initialiseAnimationPanel","initialiseClockSlider","toggleAnimation","setReplayMassStart","btnRealTime","setReplayRealTime","setReplayByControl","toggleNameDisplay","min","max","clockSliderContainer","resetNextStopTime","minSplitsLength","stopAnimation","setRunnerColor","startAnimation","color","Overlay","deleteOverlay","ol","deleteAllOverlays","endOverlay","finished","completed","completedDiv","startedDiv","canvas","map","overlay","redrawTimerID","addListeners","handleTouchStart","handleTouchMove","handleTouchEnd","handleScroll","handleMouseDown","handleMouseMove","handleMouseUp","mapLoadedCallback","btn","zoom","rotateMap","moveMap","applyMapRotation","drawDefaultText","controlsHeight","handleInputDown","handleInputMove","handleInputUp","saveMouseEvent","savePinchInfo","oldDistance","newDistance","initialiseCanvas","trackTransforms","mapFile","isBeingCreated","doRedraw","mapscale","heightscale","oldctx","svg","xform","savedTransforms","restore","sx","sy","translate","setTransform","c","d","rotate","radians","zoomDirection","factor","tempZoom","filename","rg2init","startup","module","finishInit","handleNavigation","requestedKartatID","Georefs","MapData","User","keksi","nameSelector","passwordSelector","regex","nameValid","passwordValid","pattern"],"ignoreList":[],"sources":["../../src/js/api.js","../../src/js/translate.js","../../src/js/utils.js","../../src/js/config.js","../../src/js/controls.js","../../src/js/handles.js","../../src/js/gpstrack.js","../../src/js/hash.js","../../src/js/result.js","../../src/js/results.js","../../src/js/runner.js","../../src/js/stats.js","../../src/js/rg2ui.js","../../src/js/draw.js","../../src/js/worldfile.js","../../src/js/event.js","../../src/js/events.js","../../src/js/course.js","../../src/js/courses.js","../../src/js/animation.js","../../src/js/overlay.js","../../src/js/canvas.js","../../src/js/main.js","../../src/js/georefs.js","../../src/js/mapdata.js","../../src/js/user.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { showWarningDialog } from \"./utils\"\r\n\r\nconst rg2Axios = axios.create({\r\n  baseURL: rg2Config.api_url\r\n})\r\n\r\nexport function getApi(params, onResponse, errorMsg) {\r\n  params.t = new Date().getTime()\r\n  document.getElementById(\"rg2-container\").style.cursor = \"wait\"\r\n  rg2Axios({\r\n    method: \"get\",\r\n    url: \"\",\r\n    params: params\r\n  })\r\n    .then((response) => {\r\n      // handlers that need kartatid (unhelpfully called id in the API) send it as a parameter: otherwise it will go as undefined which is OK\r\n      onResponse(response.data.data, params.id)\r\n    })\r\n    .catch(function (error) {\r\n      reportJSONFail(errorMsg + \": \" + error)\r\n    })\r\n    .finally(function () {\r\n      document.getElementById(\"rg2-container\").style.cursor = \"auto\"\r\n    })\r\n}\r\n\r\nexport function postApi(data, params, onResponse, errorMsg, handleKeksi = () => {}) {\r\n  let config = { method: \"post\" }\r\n  config.data = data\r\n  if (params.headers) {\r\n    config.headers = params.headers\r\n    delete params.headers\r\n  }\r\n  params.t = new Date().getTime()\r\n  config.params = params\r\n  document.getElementById(\"rg2-container\").style.cursor = \"wait\"\r\n  rg2Axios(config)\r\n    .then((response) => {\r\n      if (response.data.keksi) {\r\n        handleKeksi(response.data.keksi)\r\n      }\r\n      onResponse(response.data)\r\n    })\r\n    .catch(function (error) {\r\n      reportJSONFail(errorMsg + \": \" + error)\r\n    })\r\n    .finally(function () {\r\n      document.getElementById(\"rg2-container\").style.cursor = \"auto\"\r\n    })\r\n}\r\n\r\nfunction reportJSONFail(error) {\r\n  document.getElementById(\"rg2-load-progress\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-map-load-progress\").classList.add(\"d-none\")\r\n  showWarningDialog(\"Configuration error\", error)\r\n}\r\n","import { getApi } from \"./api\"\r\nimport { generateOption } from \"./utils\"\r\n\r\n// use English until we load something else\r\nlet dictionary = {}\r\ndictionary.code = \"en\"\r\nlet keys = []\r\n\r\nexport function createLanguageDropdown(languages) {\r\n  let dropdown = document.getElementById(\"rg2-select-language\")\r\n  dropdown.innerHTML = \"\"\r\n  let selected = dictionary.code === \"en\"\r\n  dropdown.options.add(generateOption(\"en\", \"en: English\", selected))\r\n  for (let i = 0; i < languages.length; i = i + 1) {\r\n    selected = dictionary.code === languages[i].code\r\n    dropdown.options.add(generateOption(languages[i].code, languages[i].code + \": \" + languages[i].language, selected))\r\n  }\r\n  dropdown.addEventListener(\"change\", (e) => {\r\n    const newlang = e.target.value\r\n    if (newlang !== dictionary.code) {\r\n      if (newlang === \"en\") {\r\n        setNewLanguage(\"en\")\r\n      } else {\r\n        doGetNewLanguage(newlang)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction doGetNewLanguage(lang) {\r\n  const params = { type: \"lang\", lang: lang }\r\n  getApi(params, handleLanguageResponse, \"Language request failed\")\r\n}\r\n\r\nfunction getEnglishKey(str) {\r\n  // builds an array of everything that has been translated\r\n  // and allocates a key for use in data-rg2t attribute\r\n  const idx = keys.indexOf(str)\r\n  if (idx > -1) {\r\n    return idx\r\n  } else {\r\n    keys.push(str)\r\n    return keys.length - 1\r\n  }\r\n}\r\n\r\nfunction handleLanguageResponse(response) {\r\n  setNewLanguage(response.lang)\r\n}\r\n\r\nexport function initLanguageOptions() {\r\n  // set available languages and set start language if requested\r\n  if (rg2Config.start_language !== \"en\") {\r\n    doGetNewLanguage(rg2Config.start_language)\r\n  }\r\n}\r\n\r\nexport function setNewLanguage(lang) {\r\n  if (lang === \"en\") {\r\n    dictionary = { code: \"en\" }\r\n  } else {\r\n    dictionary = lang\r\n  }\r\n  translateAllText()\r\n}\r\n\r\nexport function t(str, element = \"span\") {\r\n  const key = getEnglishKey(str)\r\n  // eslint-disable-next-line no-prototype-builtins\r\n  if (dictionary.hasOwnProperty(str)) {\r\n    str = dictionary[str]\r\n  }\r\n  // passing an empty element returns an unformatted string\r\n  if (element === \"\") {\r\n    return str\r\n  }\r\n  // otherwise add a wrapper with data attribute to allow translation\r\n  return `<${element} data-rg2t='${key}'>${str}</${element}>`\r\n}\r\n\r\nfunction translateAllText() {\r\n  // translates every element that has a data-rg2t attribute\r\n  const elements = document.querySelectorAll(\"[data-rg2t]\")\r\n  for (let el of elements) {\r\n    const key = parseInt(el.dataset.rg2t, 10)\r\n    el.innerText = t(keys[key], \"\")\r\n  }\r\n}\r\n","import * as bootstrap from \"bootstrap\"\r\nimport { t } from \"./translate\"\r\n\r\nexport function extractAttributeZero(nodelist, attribute, defaultValue) {\r\n  if (nodelist.length > 0) {\r\n    return nodelist[0].getAttribute(attribute).trim()\r\n  }\r\n  return defaultValue\r\n}\r\n\r\n// converts seconds to MM:SS\r\nexport function formatSecsAsMMSS(secs) {\r\n  const minutes = Math.floor(secs / 60)\r\n  let formattedtime = minutes\r\n  const seconds = secs - minutes * 60\r\n  if (seconds < 10) {\r\n    formattedtime += \":0\" + seconds\r\n  } else {\r\n    formattedtime += \":\" + seconds\r\n  }\r\n  return formattedtime\r\n}\r\n\r\n// returns seconds as hh:mm:ss\r\nexport function formatSecsAsHHMMSS(secs) {\r\n  let formattedtime\r\n  const hours = Math.floor(secs / 3600)\r\n  if (hours < 10) {\r\n    formattedtime = \"0\" + hours + \":\"\r\n  } else {\r\n    formattedtime = hours + \":\"\r\n  }\r\n  secs = secs - hours * 3600\r\n  const minutes = Math.floor(secs / 60)\r\n  if (minutes < 10) {\r\n    formattedtime += \"0\" + minutes\r\n  } else {\r\n    formattedtime += minutes\r\n  }\r\n  secs = secs - minutes * 60\r\n  if (secs < 10) {\r\n    formattedtime += \":0\" + secs\r\n  } else {\r\n    formattedtime += \":\" + secs\r\n  }\r\n  return formattedtime\r\n}\r\n\r\nexport function generateOption(value, text, selected = false) {\r\n  let opt = document.createElement(\"option\")\r\n  opt.value = value\r\n  opt.text = text\r\n  if (selected) {\r\n    opt.selected = true\r\n  }\r\n  return opt\r\n}\r\n\r\nexport function generateSelectOption(value, text, selected = false) {\r\n  // returns an option line for a Bootstrap select dropdown\r\n  // <option value=\"0\" selected>Not georeferenced</option>\r\n  return `<option value=\"${value}\"${selected ? \" selected\" : \"\"}>${text}</option>`\r\n}\r\n\r\nexport function getAngle(x1, y1, x2, y2) {\r\n  let angle = Math.atan2(y2 - y1, x2 - x1)\r\n  if (angle < 0) {\r\n    angle = angle + 2 * Math.PI\r\n  }\r\n  return angle\r\n}\r\n\r\nexport function getDistanceBetweenPoints(x1, y1, x2, y2) {\r\n  // Pythagoras\r\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n}\r\n\r\nexport function getLatLonDistance(lat1, lon1, lat2, lon2) {\r\n  // Haversine formula (http://www.codecodex.com/wiki/Calculate_distance_between_two_points_on_a_globe)\r\n  const dLat = (lat2 - lat1).toRad()\r\n  const dLon = (lon2 - lon1).toRad()\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) * Math.sin(dLon / 2) * Math.sin(dLon / 2)\r\n  // multiply by IUUG earth mean radius (http://en.wikipedia.org/wiki/Earth_radius) in metres\r\n  return 6371009 * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\r\n}\r\n\r\nexport function getSecsFromHHMM(time) {\r\n  if (!time) {\r\n    return 0\r\n  }\r\n  let secs = 0\r\n  const bits = time.split(\":\")\r\n  secs = parseInt(bits[0], 10) * 3600 + parseInt(bits[1], 10) * 60\r\n  if (isNaN(secs)) {\r\n    return 0\r\n  }\r\n  return secs\r\n}\r\n\r\n// converts MM:SS or HH:MM:SS to seconds based on number of :\r\nexport function getSecsFromHHMMSS(time) {\r\n  if (!time) {\r\n    return 0\r\n  }\r\n  let secs = 0\r\n  // force format to use : if it came in with .\r\n  let bits = time.replace(/\\./g, \":\").split(\":\")\r\n  if (bits.length === 2) {\r\n    secs = parseInt(bits[0], 10) * 60 + parseInt(bits[1], 10)\r\n  } else {\r\n    if (bits.length === 3) {\r\n      secs = parseInt(bits[0], 10) * 3600 + parseInt(bits[1], 10) * 60 + parseInt(bits[2], 10)\r\n    }\r\n  }\r\n  if (isNaN(secs)) {\r\n    return 0\r\n  }\r\n  return secs\r\n}\r\n\r\nexport const showWarningDialog = (title, text) => {\r\n  showToast(title, text)\r\n}\r\n\r\nconst toast = document.getElementById(\"rg2-toast-container\")\r\nexport const showToast = (title, text) => {\r\n  const newToast = document.createElement(\"div\")\r\n  newToast.classList.add(\"toast\")\r\n  newToast.setAttribute(\"data-bs-autohide\", \"false\")\r\n  newToast.innerHTML = `<div class=\"toast-header\">\r\n      <strong class=\"me-auto\">${title}</strong>\r\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\r\n    </div>\r\n    <div class=\"toast-body\">\r\n      ${text}\r\n    </div>`\r\n  toast.appendChild(newToast)\r\n  const toastElList = document.querySelectorAll(\".toast\")\r\n  // eslint-disable-next-line no-unused-vars\r\n  const toastList = [...toastElList].map((toastEl) => {\r\n    const newToast = new bootstrap.Toast(toastEl, {})\r\n    toastEl.addEventListener(\"hidden.bs.toast\", () => {\r\n      if (toastEl.parentNode) {\r\n        toastEl.parentNode.removeChild(toastEl)\r\n      }\r\n    })\r\n    newToast.show()\r\n  })\r\n}\r\n\r\nexport function extractTextContentZero(nodelist, defaultValue) {\r\n  if (nodelist.length > 0) {\r\n    return nodelist[0].textContent.trim()\r\n  }\r\n  return defaultValue\r\n}\r\n\r\nlet modalDialog = undefined\r\nexport function createModalDialog(dlg, showCancelButton = true) {\r\n  if (modalDialog) {\r\n    modalDialog.dispose()\r\n  }\r\n  const modalContainer = document.getElementById(\"rg2-modal-container\")\r\n  modalContainer.innerHTML = \"\"\r\n  const cancelButton = showCancelButton\r\n    ? `<button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">${t(\"Cancel\")}</button>`\r\n    : \"\"\r\n  const modalContent = `<div class=\"modal fade\" id=\"rg2-modal-dialog\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\"\r\n    tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">${dlg.title}</h1>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          ${dlg.body}\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button id=\"rg2-do-modal-action\" type=\"button\" class=\"btn btn-primary\">${t(dlg.doText)}</button>\r\n          ${cancelButton}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div > `\r\n  modalContainer.innerHTML = modalContent\r\n  // create null cancel function if we din't get anything\r\n  if (typeof dlg.onCancel !== \"function\") {\r\n    dlg.onCancel = () => {}\r\n  }\r\n  let doIt = false\r\n  const dialog = document.getElementById(\"rg2-modal-dialog\")\r\n  document.getElementById(\"rg2-do-modal-action\").addEventListener(\"click\", () => {\r\n    doIt = true\r\n    modalDialog.hide()\r\n  })\r\n  const options = { keyboard: true }\r\n  modalDialog = new bootstrap.Modal(dialog, options)\r\n  dialog.addEventListener(\"hidden.bs.modal\", () => {\r\n    if (doIt) {\r\n      dlg.onDo()\r\n    } else {\r\n      dlg.onCancel()\r\n    }\r\n  })\r\n  modalDialog.show()\r\n}\r\n\r\nexport function validateValue(selector, isValid) {\r\n  const elem = document.getElementById(selector)\r\n  const valid = isValid(elem.value)\r\n  if (valid) {\r\n    elem.classList.add(\"is-valid\")\r\n    elem.classList.remove(\"is-invalid\")\r\n  } else {\r\n    elem.classList.add(\"is-invalid\")\r\n    elem.classList.remove(\"is-valid\")\r\n  }\r\n  return valid\r\n}\r\n\r\nNumber.prototype.toRad = function () {\r\n  return (this * Math.PI) / 180\r\n}\r\n\r\n// used to generate track colours\r\nconst colours = [\r\n  \"#ff0000\",\r\n  \"#00ff00\",\r\n  \"#0000ff\",\r\n  \"#800000\",\r\n  \"#008000\",\r\n  \"#000080\",\r\n  \"#ffff00\",\r\n  \"#ff00ff\",\r\n  \"#00ffff\",\r\n  \"#808000\",\r\n  \"#800080\",\r\n  \"#008080\"\r\n]\r\nlet colourIndex = 0\r\n\r\nexport function getNextTrackColour() {\r\n  colourIndex = (colourIndex + 1) % colours.length\r\n  return colours[colourIndex]\r\n}\r\n","import { showWarningDialog } from \"./utils\"\r\nimport { getMapSize } from \"./canvas\"\r\n\r\nexport const config = {\r\n  // version gets set automatically by grunt file during build process\r\n  RG2VERSION: '2.1',\r\n  DEFAULT_SCALE_FACTOR: 1.1,\r\n  TAB_EVENTS: \"event-tab\",\r\n  TAB_COURSES: \"course-tab\",\r\n  TAB_RESULTS: \"result-tab\",\r\n  TAB_DRAW: \"draw-tab\",\r\n  TAB_LOGIN: \"manage-login-tab\",\r\n  TAB_CREATE: \"manage-create-tab\",\r\n  TAB_EDIT: \"manage-edit-tab\",\r\n  TAB_MAP: \"manage-map-tab\",\r\n  TAB_DELETE_MAP: \"manage-delete-map-tab\",\r\n  INVALID_MAP_ID: 9999,\r\n  // translated when output so leave as English here\r\n  DEFAULT_NEW_COMMENT: \"Type your comment\",\r\n  // added to resultid when saving a GPS track\r\n  GPS_RESULT_OFFSET: 50000,\r\n  MASS_START_REPLAY: 1,\r\n  REAL_TIME_REPLAY: 2,\r\n  // dropdown selection value\r\n  MASS_START_BY_CONTROL: 99999,\r\n  VERY_HIGH_TIME_IN_SECS: 99999,\r\n  // screen sizes for different layouts\r\n  BIG_SCREEN_BREAK_POINT: 800,\r\n  SMALL_SCREEN_BREAK_POINT: 500,\r\n  MAX_ZOOM: 50,\r\n  MIN_ZOOM: 0.05,\r\n  PURPLE: \"#b300ff\",\r\n  RED: \"#ff0000\",\r\n  GREEN: \"#00ff00\",\r\n  BLUE: \"#0000ff\",\r\n  DARK_GREEN: \"rgb(34, 139, 34)\",\r\n  DARK_GREEN_30: \"rgba(34, 139, 34, 0.3)\",\r\n  GREY: \"#e0e0e0\",\r\n  RED_30: \"rgba(255,0,0,0.3)\",\r\n  GREEN_30: \"rgba(0,255,0,0.3)\",\r\n  BLUE_30: \"rgba(0,0,255,0.3)\",\r\n  PURPLE_30: \"rgba(180,0,255,0.3)\",\r\n  WHITE: \"#ffffff\",\r\n  BLACK: \"#000000\",\r\n  RUNNER_DOT_RADIUS: 6,\r\n  HANDLE_DOT_RADIUS: 7,\r\n  HANDLE_COLOUR: \"#ff0000\",\r\n  // parameters for call to draw courses\r\n  DIM: 0.75,\r\n  FULL_INTENSITY: 1.0,\r\n  TIME_NOT_FOUND: 9999,\r\n  // values for eventt.which\r\n  RIGHT_CLICK: 3,\r\n  DO_NOT_SAVE_COURSE: 9999,\r\n  // values of event format\r\n  FORMAT_NORMAL: 1,\r\n  FORMAT_NORMAL_NO_RESULTS: 2,\r\n  FORMAT_SCORE_EVENT: 3,\r\n  FORMAT_SCORE_EVENT_NO_RESULTS: 4,\r\n  DISPLAY_ALL_COURSES: 99999,\r\n  EXCLUDED_NONE: 0,\r\n  EXCLUDED_ZERO_SPLITS: 1,\r\n  EXCLUDED_REAL_SPLITS: 2,\r\n  //number of drawn routes that can be saved for possible later deletion\r\n  MAX_DRAWN_ROUTES: 10,\r\n  // array of available languages: not great to do it like this but it helps for routegadget.co.uk set-up\r\n  languages: [\r\n    { language: \"Čeština\", code: \"cz\" },\r\n    { language: \"Deutsch\", code: \"de\" },\r\n    { language: \"Suomi\", code: \"fi\" },\r\n    { language: \"Français\", code: \"fr\" },\r\n    { language: \"Italiano\", code: \"it\" },\r\n    { language: \"日本語\", code: \"ja\" },\r\n    { language: \"Norsk\", code: \"no\" },\r\n    { language: \"Português - Brasil\", code: \"pt\" },\r\n    { language: \"Русский\", code: \"ru\" }\r\n  ],\r\n  // Size of map upload in MB that triggers the warning dialog\r\n  FILE_SIZE_WARNING: 2,\r\n  // Size of map upload in pixels that triggers the warning dialog\r\n  // emprically this is easily enough for an A3 sensible map\r\n  PIXEL_SIZE_WARNING: 4000,\r\n  CLASS_NOW_ON: 1,\r\n  CLASS_NOW_OFF: 0,\r\n  managing: () => {\r\n    // presence of keksi in config means we are managing\r\n    // until we find a better way\r\n    return rg2Config.keksi !== undefined\r\n  }\r\n}\r\n\r\nexport const options = {\r\n  // initialised to default values: overwritten from storage later\r\n  perCentMapIntensity: 100,\r\n  perCentRouteIntensity: 100,\r\n  replayFontSize: 12,\r\n  courseWidth: 3,\r\n  routeWidth: 4,\r\n  circleSize: 20,\r\n  snap: true,\r\n  showThreeSeconds: false,\r\n  showGPSSpeed: false,\r\n  // align map with next control at top when drawing route\r\n  alignMap: false,\r\n  // speeds in min/km\r\n  maxSpeed: 5,\r\n  minSpeed: 15,\r\n  // array of up to MAX_DRAWN_ROUTES entries with details to allow deletion\r\n  drawnRoutes: []\r\n}\r\n\r\nexport function getOverprintDetails() {\r\n  let opt = {}\r\n  // attempt to scale overprint depending on map image size\r\n  // this avoids very small/large circles, or at least makes things a bit more sensible\r\n  const size = getMapSize()\r\n  // Empirically derived  so open to suggestions. This is based on a nominal 20px circle\r\n  // as default. The square root stops things getting too big too quickly.\r\n  // 1500px is a typical map image maximum size.\r\n  let scaleFact = Math.pow(Math.min(size.height, size.width) / 1500, 0.5)\r\n  // don't get too carried away, although these would be strange map files\r\n  scaleFact = Math.min(scaleFact, 5)\r\n  scaleFact = Math.max(scaleFact, 0.5)\r\n  const circleSize = Math.round(options.circleSize * scaleFact)\r\n  // ratios based on IOF ISOM overprint specification\r\n  opt.controlRadius = circleSize\r\n  opt.finishInnerRadius = circleSize * (5 / 6)\r\n  opt.finishOuterRadius = circleSize * (7 / 6)\r\n  opt.startTriangleLength = circleSize * (7 / 6)\r\n  opt.overprintWidth = options.courseWidth\r\n  opt.font = circleSize + \"pt Arial\"\r\n  return opt\r\n}\r\n\r\nexport function loadConfigOptions() {\r\n  try {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (window.hasOwnProperty(\"localStorage\") && window.localStorage !== null) {\r\n      if (localStorage.getItem(\"rg2-options\") !== null) {\r\n        const storedOptions = JSON.parse(localStorage.getItem(\"rg2-options\"))\r\n        // overwrite the options array with saved options from local storage\r\n        // need to do this to allow for new options that people don't yet have\r\n        for (let prop in storedOptions) {\r\n          // eslint-disable-next-line no-prototype-builtins\r\n          if (storedOptions.hasOwnProperty(prop)) {\r\n            options[prop] = storedOptions[prop]\r\n          }\r\n        }\r\n        // best to keep these at default?\r\n        options.circleSize = 20\r\n        if (options.perCentMapIntensity === 0) {\r\n          showWarningDialog(\r\n            \"Warning\",\r\n            \"Your saved settings have 0% map intensity so the map is invisible. You can adjust this on the configuration menu\"\r\n          )\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // storage not supported so just continue\r\n  }\r\n}\r\n\r\nexport function removeDrawnRouteDetails(route) {\r\n  let routes = []\r\n  for (let i = 0; i < options.drawnRoutes.length; i += 1) {\r\n    if (options.drawnRoutes[i].id !== route.id || options.drawnRoutes[i].eventid !== route.eventid) {\r\n      routes.push(options.drawnRoutes[i])\r\n    }\r\n  }\r\n  options.drawnRoutes = routes\r\n  saveConfigOptions()\r\n}\r\n\r\nexport function saveConfigOptions() {\r\n  try {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (window.hasOwnProperty(\"localStorage\") && window.localStorage !== null) {\r\n      localStorage.setItem(\"rg2-options\", JSON.stringify(options))\r\n    }\r\n  } catch (e) {\r\n    // storage not supported so just return\r\n    return\r\n  }\r\n}\r\n\r\nexport function saveDrawnRouteDetails(route) {\r\n  // this allows for deletion later\r\n  let routes = options.drawnRoutes\r\n  if (routes.length >= config.MAX_DRAWN_ROUTES) {\r\n    // array is full so delete oldest (=first) entry\r\n    routes.shift()\r\n  }\r\n  routes.push(route)\r\n  options.drawnRoutes = routes\r\n  saveConfigOptions()\r\n}\r\n\r\nexport function setConfigOption(option, value) {\r\n  options[option] = value\r\n  saveConfigOptions()\r\n}\r\n","import { ctx } from \"./canvas\"\r\nimport { config, getOverprintDetails } from \"./config\"\r\nimport { getCourses } from \"./courses\"\r\n\r\nexport class Controls {\r\n  constructor() {\r\n    this.controls = []\r\n    this.displayControls = false\r\n  }\r\n\r\n  addControl(code, x, y) {\r\n    let newCode = true\r\n    for (let i = 0; i < this.controls.length; i += 1) {\r\n      if (this.controls[i].code === code) {\r\n        newCode = false\r\n        break\r\n      }\r\n    }\r\n    if (newCode) {\r\n      this.controls.push({ code: code, x: x, y: y })\r\n    }\r\n  }\r\n\r\n  deleteAllControls() {\r\n    this.controls.length = 0\r\n  }\r\n\r\n  displayAllControls() {\r\n    this.displayControls = true\r\n  }\r\n\r\n  drawControls(drawDot) {\r\n    if (this.displayControls) {\r\n      const opt = getOverprintDetails()\r\n      for (let i = 0; i < this.controls.length; i += 1) {\r\n        // Assume things starting with 'F' or 'M' are Finish or Mal\r\n        if (this.controls[i].code.indexOf(\"F\") === 0 || this.controls[i].code.indexOf(\"M\") === 0) {\r\n          this.drawFinish(this.controls[i].x, this.controls[i].y, this.controls[i].code, opt)\r\n        } else {\r\n          // Assume things starting with 'S' are a Start\r\n          if (this.controls[i].code.indexOf(\"S\") === 0) {\r\n            this.drawStart(this.controls[i].x, this.controls[i].y, this.controls[i].code, 1.5 * Math.PI, opt)\r\n          } else {\r\n            // Else it's a normal control\r\n            this.drawSingleControl(this.controls[i].x, this.controls[i].y, this.controls[i].code, Math.PI * 0.25, opt)\r\n            if (drawDot) {\r\n              ctx.fillRect(this.controls[i].x - 1, this.controls[i].y - 1, 3, 3)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawFinish(x, y, code, opt) {\r\n    //Draw the white halo around the finish control\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.lineWidth = opt.overprintWidth + 2\r\n    ctx.beginPath()\r\n    ctx.arc(x, y, opt.finishInnerRadius, 0, 2 * Math.PI, false)\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.arc(x, y, opt.finishOuterRadius, 0, 2 * Math.PI, false)\r\n    ctx.stroke()\r\n    //Draw the white halo around the finish code\r\n    ctx.beginPath()\r\n    ctx.font = opt.font\r\n    ctx.textAlign = \"left\"\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.miterLimit = 2\r\n    ctx.lineJoin = \"circle\"\r\n    ctx.lineWidth = 1.5\r\n    ctx.strokeText(code, x + opt.controlRadius * 1.5, y + opt.controlRadius)\r\n    ctx.stroke()\r\n    //Draw the purple finish control\r\n    ctx.beginPath()\r\n    ctx.fillStyle = config.PURPLE\r\n    ctx.strokeStyle = config.PURPLE\r\n    ctx.lineWidth = opt.overprintWidth\r\n    ctx.arc(x, y, opt.finishInnerRadius, 0, 2 * Math.PI, false)\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.arc(x, y, opt.finishOuterRadius, 0, 2 * Math.PI, false)\r\n    ctx.fillText(code, x + opt.controlRadius * 1.5, y + opt.controlRadius)\r\n    ctx.stroke()\r\n  }\r\n\r\n  drawSingleControl(x, y, code, angle, opt) {\r\n    //Draw the white halo around the controls\r\n    ctx.beginPath()\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.lineWidth = opt.overprintWidth + 2\r\n    ctx.arc(x, y, opt.controlRadius, 0, 2 * Math.PI, false)\r\n    ctx.stroke()\r\n    //Draw the white halo around the control code\r\n    ctx.beginPath()\r\n    ctx.textAlign = \"center\"\r\n    ctx.font = opt.font\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.miterLimit = 2\r\n    ctx.lineJoin = \"circle\"\r\n    ctx.lineWidth = 1.5\r\n    ctx.textBaseline = \"middle\"\r\n    const metrics = ctx.measureText(code)\r\n    // offset to left if left of centre, to right if right of centre\r\n    let xoffset\r\n    if (angle < Math.PI) {\r\n      xoffset = metrics.width / 2\r\n    } else {\r\n      xoffset = (-1 * metrics.width) / 2\r\n    }\r\n    // control radius is also the control code text height\r\n    // offset up if above half way, down if below half way\r\n    let yoffset\r\n    if (angle >= Math.PI / 2 && angle <= Math.PI * 1.5) {\r\n      yoffset = (-1 * opt.controlRadius) / 2\r\n    } else {\r\n      yoffset = opt.controlRadius / 2\r\n    }\r\n    // empirically looks OK with this scale\r\n    const scale = 1.3\r\n    ctx.strokeText(\r\n      code,\r\n      x + opt.controlRadius * scale * Math.sin(angle) + xoffset,\r\n      y + opt.controlRadius * scale * Math.cos(angle) + yoffset\r\n    )\r\n    //Draw the purple control\r\n    ctx.beginPath()\r\n    ctx.font = opt.font\r\n    ctx.fillStyle = config.PURPLE\r\n    ctx.strokeStyle = config.PURPLE\r\n    ctx.lineWidth = opt.overprintWidth\r\n    ctx.arc(x, y, opt.controlRadius, 0, 2 * Math.PI, false)\r\n    ctx.fillText(\r\n      code,\r\n      x + opt.controlRadius * scale * Math.sin(angle) + xoffset,\r\n      y + opt.controlRadius * scale * Math.cos(angle) + yoffset\r\n    )\r\n    ctx.stroke()\r\n  }\r\n\r\n  drawStart(startx, starty, code, angle, opt) {\r\n    //Draw the white halo around the start triangle\r\n    let x = []\r\n    let y = []\r\n    const DEGREES_120 = (2 * Math.PI) / 3\r\n    angle = angle + Math.PI / 2\r\n    ctx.lineCap = \"round\"\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.lineWidth = opt.overprintWidth + 2\r\n    ctx.beginPath()\r\n    x[0] = startx + opt.startTriangleLength * Math.sin(angle)\r\n    y[0] = starty - opt.startTriangleLength * Math.cos(angle)\r\n    ctx.moveTo(x[0], y[0])\r\n    x[1] = startx + opt.startTriangleLength * Math.sin(angle + DEGREES_120)\r\n    y[1] = starty - opt.startTriangleLength * Math.cos(angle + DEGREES_120)\r\n    ctx.lineTo(x[1], y[1])\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[1], y[1])\r\n    x[2] = startx + opt.startTriangleLength * Math.sin(angle - DEGREES_120)\r\n    y[2] = starty - opt.startTriangleLength * Math.cos(angle - DEGREES_120)\r\n    ctx.lineTo(x[2], y[2])\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[2], y[2])\r\n    ctx.lineTo(x[0], y[0])\r\n    ctx.stroke()\r\n    //Draw the white halo around the start code\r\n    ctx.beginPath()\r\n    ctx.font = opt.font\r\n    ctx.textAlign = \"left\"\r\n    ctx.strokeStyle = \"white\"\r\n    ctx.miterLimit = 2\r\n    ctx.lineJoin = \"circle\"\r\n    ctx.lineWidth = 1.5\r\n    ctx.strokeText(code, x[0] + opt.controlRadius * 1.25, y[0] + opt.controlRadius * 1.25)\r\n    ctx.stroke()\r\n    //Draw the purple start control\r\n    ctx.strokeStyle = config.PURPLE\r\n    ctx.lineWidth = opt.overprintWidth\r\n    ctx.font = opt.font\r\n    ctx.fillStyle = config.PURPLE\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[0], y[0])\r\n    ctx.lineTo(x[1], y[1])\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[1], y[1])\r\n    ctx.lineTo(x[2], y[2])\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    ctx.moveTo(x[2], y[2])\r\n    ctx.lineTo(x[0], y[0])\r\n    ctx.fillText(code, x[0] + opt.controlRadius * 1.25, y[0] + opt.controlRadius * 1.25)\r\n    ctx.stroke()\r\n  }\r\n\r\n  generateControlList() {\r\n    this.controls.length = 0\r\n    const courses = getCourses()\r\n    for (let i = 0; i < courses.length; i += 1) {\r\n      if (courses[i] !== undefined) {\r\n        const codes = courses[i].codes\r\n        const x = courses[i].x\r\n        const y = courses[i].y\r\n        // for all controls on course\r\n        if (codes !== undefined) {\r\n          for (let j = 0; j < codes.length; j += 1) {\r\n            this.addControl(codes[j], x[j], y[j])\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getControlCount() {\r\n    return this.controls.length\r\n  }\r\n\r\n  toggleControlDisplay() {\r\n    this.displayControls = !this.displayControls\r\n  }\r\n}\r\n","import { getDistanceBetweenPoints } from \"./utils\"\r\nimport { config } from \"./config\"\r\nimport { ctx } from \"./canvas\"\r\nclass Handle {\r\n  constructor(x, y, time, index) {\r\n    // current position of handles\r\n    this.x = x\r\n    this.y = y\r\n    // positions before start of adjustment\r\n    this.basex = x\r\n    this.basey = y\r\n    // saved positions to allow undo\r\n    this.undox = x\r\n    this.undoy = y\r\n    this.locked = false\r\n    // not really a time: instead an index into the GPX data\r\n    // this is \"time\" for 1s intervals, but not if in a different recording mode\r\n    this.time = time\r\n    this.index = index\r\n  }\r\n}\r\nexport class Handles {\r\n  constructor() {\r\n    // array of handles used to adjust GPS tracks\r\n    // maintained in time order which means they are also in order along the GPS track\r\n    this.handles = []\r\n  }\r\n\r\n  addHandle(x, y, time) {\r\n    this.handles.push(new Handle(x, y, time, this.handles.length))\r\n    this.handles.sort(function (a, b) {\r\n      return a.time - b.time\r\n    })\r\n    this.renumberHandles()\r\n  }\r\n\r\n  deleteHandle(index) {\r\n    if (index === 0 || index === this.handles.length - 1) {\r\n      // can't delete start or finish\r\n      return\r\n    }\r\n    this.handles.splice(index, 1)\r\n    this.renumberHandles()\r\n  }\r\n\r\n  renumberHandles() {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      this.handles[i].index = i\r\n    }\r\n  }\r\n\r\n  lockHandle(index) {\r\n    this.handles[index].locked = true\r\n  }\r\n\r\n  lockHandleByTime(time) {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      if (this.handles[i].time === time) {\r\n        this.handles[i].locked = true\r\n      }\r\n    }\r\n  }\r\n\r\n  unlockHandle(index) {\r\n    this.handles[index].locked = false\r\n  }\r\n\r\n  handlesLocked() {\r\n    let count = 0\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      if (this.handles[i].locked) {\r\n        count += 1\r\n      }\r\n    }\r\n    return count\r\n  }\r\n\r\n  deleteAllHandles() {\r\n    this.handles.length = 0\r\n  }\r\n\r\n  rebaselineXY() {\r\n    // save new locations at end of drag\r\n    this.copyHandleFields(\"\", \"base\")\r\n  }\r\n\r\n  saveForUndo() {\r\n    this.copyHandleFields(\"base\", \"undo\")\r\n  }\r\n\r\n  undo() {\r\n    // undo last move: reset to saved values\r\n    this.copyHandleFields(\"undo\", \"base\")\r\n    this.copyHandleFields(\"undo\", \"\")\r\n  }\r\n\r\n  copyHandleFields(from, to) {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      this.handles[i][to + \"x\"] = this.handles[i][from + \"x\"]\r\n      this.handles[i][to + \"y\"] = this.handles[i][from + \"y\"]\r\n    }\r\n  }\r\n\r\n  getStartHandle() {\r\n    // always the first entry\r\n    return this.handles[0]\r\n  }\r\n\r\n  getFinishHandle() {\r\n    // always the last entry\r\n    return this.handles[this.handles.length - 1]\r\n  }\r\n\r\n  getHandleClicked(pt) {\r\n    // find if the click was on an existing handle: return handle object or undefined\r\n    // basex and basey are handle locations at the start of the drag which is what we are interested in\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      const distance = getDistanceBetweenPoints(pt.x, pt.y, this.handles[i].basex, this.handles[i].basey)\r\n      if (distance <= config.HANDLE_DOT_RADIUS) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  getEarliestLockedHandle() {\r\n    // called to find earliest locked handle: we already know at least one is locked\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      if (this.handles[i].locked) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  getLatestLockedHandle() {\r\n    // called to find latest locked handle: we already know at least one is locked\r\n    for (let i = this.handles.length - 1; i > 0; i -= 1) {\r\n      if (this.handles[i].locked) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  getPreviousLockedHandle(handle) {\r\n    // called to find previous locked handle: we already know we are between locked handles\r\n    for (let i = handle.index - 1; i >= 0; i -= 1) {\r\n      if (this.handles[i].locked) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  getNextLockedHandle(handle) {\r\n    // called to find next locked handle: we already know we are between locked handles\r\n    for (let i = handle.index + 1; i < this.handles.length; i += 1) {\r\n      if (this.handles[i].locked) {\r\n        return this.handles[i]\r\n      }\r\n    }\r\n  }\r\n\r\n  getSingleLockedHandle() {\r\n    // called when we know there is only one locked handle, so we can reuse another function\r\n    return this.getEarliestLockedHandle()\r\n  }\r\n\r\n  dragHandles(dx, dy) {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      this.handles[i].x = this.handles[i].basex + dx\r\n      this.handles[i].y = this.handles[i].basey + dy\r\n    }\r\n  }\r\n\r\n  drawHandles() {\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      ctx.lineWidth = 1\r\n      if (this.handles[i].locked === true) {\r\n        ctx.fillStyle = config.RED_30\r\n        ctx.strokeStyle = config.RED\r\n      } else {\r\n        ctx.fillStyle = config.GREEN_30\r\n        ctx.strokeStyle = config.GREEN\r\n      }\r\n      ctx.beginPath()\r\n      ctx.arc(this.handles[i].x, this.handles[i].y, config.HANDLE_DOT_RADIUS, 0, 2 * Math.PI, false)\r\n      ctx.fill()\r\n      ctx.stroke()\r\n    }\r\n  }\r\n\r\n  alignHandles(points) {\r\n    // move handles back to be on adjusted track\r\n    for (let i = 0; i < this.handles.length; i += 1) {\r\n      this.handles[i].x = points.x[this.handles[i].time]\r\n      this.handles[i].y = points.y[this.handles[i].time]\r\n    }\r\n  }\r\n}\r\n","import { getMapSize, redraw } from \"./canvas\"\r\nimport { adjustTrack, getControlXY } from \"./draw\"\r\nimport { getWorldFile, mapIsGeoreferenced } from \"./events\"\r\nimport { Handles } from \"./handles\"\r\nimport { getDistanceBetweenPoints, getLatLonDistance, showWarningDialog } from \"./utils\"\r\n\r\nexport class RouteData {\r\n  constructor() {\r\n    this.courseid = null\r\n    this.coursename = null\r\n    this.controlsToAdjust = 0\r\n    this.resultid = null\r\n    this.isScoreCourse = false\r\n    this.eventid = null\r\n    this.name = null\r\n    this.comments = null\r\n    this.x = []\r\n    this.y = []\r\n    this.controlx = []\r\n    this.controly = []\r\n    this.time = []\r\n    this.startsecs = 0\r\n    this.totaltime = 0\r\n    this.splits = []\r\n    this.xml = null\r\n  }\r\n}\r\n\r\nexport class GPSTrack {\r\n  constructor() {\r\n    this.lat = []\r\n    this.lon = []\r\n    this.startOffset = 0\r\n    this.baseX = []\r\n    this.baseY = []\r\n    this.handles = new Handles()\r\n    this.savedBaseX = []\r\n    this.savedBaseY = []\r\n    this.fileLoaded = false\r\n    this.fileName = \"\"\r\n    this.fileType = \"\"\r\n    this.routeData = new RouteData()\r\n    this.autofitOffset = null\r\n  }\r\n\r\n  adjustOffset(offset) {\r\n    this.autofitOffset = offset\r\n    this.processGPSFile()\r\n    this.autofitTrack()\r\n  }\r\n\r\n  addStartAndFinishHandles() {\r\n    // add handles at start and finish of route\r\n    this.handles.addHandle(this.baseX[0], this.baseY[0], 0)\r\n    this.handles.addHandle(this.baseX[this.baseX.length - 1], this.baseY[this.baseY.length - 1], this.baseY.length - 1)\r\n  }\r\n\r\n  applyWorldFile() {\r\n    // translate lat/lon to x,y based on world file info: see http://en.wikipedia.org/wiki/World_file\r\n    const worldFile = getWorldFile()\r\n    for (let i = 0; i < this.lat.length; i += 1) {\r\n      this.routeData.x[i] = Math.round(\r\n        (worldFile.E * this.lon[i] - worldFile.B * this.lat[i] + worldFile.xCorrection) / worldFile.AEDB\r\n      )\r\n      this.routeData.y[i] = Math.round(\r\n        (-1 * worldFile.D * this.lon[i] + worldFile.A * this.lat[i] + worldFile.yCorrection) / worldFile.AEDB\r\n      )\r\n    }\r\n  }\r\n\r\n  autofitTrack() {\r\n    // fits a GPS track to the course based on split times at control locations\r\n    // unlock map to allow adjustment\r\n    document.getElementById(\"chk-move-all\").checked = false\r\n    this.handles.deleteAllHandles()\r\n    this.addStartAndFinishHandles()\r\n    if (this.autofitOffset === null) {\r\n      this.autofitOffset = this.getOffset()\r\n      //ui.setAutofitSpinner(this.autofitOffset)\r\n    }\r\n    // adjust for each control in turn\r\n    for (let i = 1; i < this.routeData.controlsToAdjust; i += 1) {\r\n      // don't try to adjust missing controls\r\n      if (this.routeData.splits[i] !== this.routeData.splits[i - 1]) {\r\n        const split = this.routeData.splits[i] + this.autofitOffset\r\n        // move track to control location\r\n        if (split < this.baseX.length && split >= 0) {\r\n          // add handle at control on track\r\n          this.handles.addHandle(this.routeData.x[split], this.routeData.y[split], split)\r\n          // drag handle to correct place on map\r\n          adjustTrack(\r\n            { x: this.routeData.x[split], y: this.routeData.y[split] },\r\n            { x: this.routeData.controlx[i], y: this.routeData.controly[i] }\r\n          )\r\n          // lock handle at control\r\n          this.handles.lockHandleByTime(split)\r\n          // rebaseline everything\r\n          this.baseX = this.routeData.x.slice(0)\r\n          this.baseY = this.routeData.y.slice(0)\r\n          this.handles.rebaselineXY()\r\n        }\r\n      }\r\n    }\r\n    document.getElementById(\"btn-autofit-gps\").setAttribute(\"disabled\", \"\")\r\n    document.getElementById(\"btn-undo-gps-adjust\").setAttribute(\"disabled\", \"\")\r\n    redraw()\r\n  }\r\n\r\n  expandToOneSecondInterval() {\r\n    // convert to one second intervals to make what follows a bit easier since we can index x and y directly\r\n    // time from GPX has already been converted to integer seconds so we don't need to worry about sub-seconds in the expansion\r\n    // gets reset to 3 second intervals on server when saved\r\n    let x = []\r\n    let y = []\r\n    let time = []\r\n    const trk = this.routeData\r\n    let oldtime = trk.time[0]\r\n    let oldx = trk.x[0]\r\n    let oldy = trk.y[0]\r\n    x[0] = oldx\r\n    y[0] = oldy\r\n    time[0] = trk.time[0]\r\n    let nexttime = time[0] + 1\r\n    for (let i = 1; i < trk.x.length; i += 1) {\r\n      const difftime = trk.time[i] - oldtime\r\n      // shouldn't have 0 intervals, but discard them if we do\r\n      if (difftime > 0) {\r\n        const xpersec = (trk.x[i] - oldx) / difftime\r\n        const ypersec = (trk.y[i] - oldy) / difftime\r\n        let secs = 1\r\n        while (secs <= difftime) {\r\n          x.push(oldx + xpersec * secs)\r\n          y.push(oldy + ypersec * secs)\r\n          //\r\n          time.push(nexttime)\r\n          nexttime += 1\r\n          secs += 1\r\n        }\r\n        oldx = trk.x[i]\r\n        oldy = trk.y[i]\r\n        oldtime = nexttime - 1\r\n      }\r\n    }\r\n    this.routeData.x = x.slice(0)\r\n    this.routeData.y = y.slice(0)\r\n    this.routeData.time = time.slice(0)\r\n  }\r\n\r\n  fitTrackInsideCourse() {\r\n    // fit track to within limits of course\r\n    // find bounding box for track\r\n    const latLon = this.getLatLonInfo()\r\n    const controlXY = this.getControlInfo()\r\n\r\n    // scale GPS track to within bounding box of controls: a reasonable start\r\n    let scaleX = (controlXY.maxX - controlXY.minX) / (latLon.maxLon - latLon.minLon)\r\n    let scaleY = (controlXY.maxY - controlXY.minY) / (latLon.maxLat - latLon.minLat)\r\n    // don't want to skew track so scale needs to be equal in each direction\r\n    // so we need to account for differences between a degree of latitude and longitude\r\n    if (scaleX > scaleY) {\r\n      // pix/lat = pix/lon * m/lat * lon/m\r\n      scaleY = (scaleX * latLon.latCorrection) / latLon.lonCorrection\r\n    } else {\r\n      // pix/lon = pix/lat * m/lon * lat/m\r\n      scaleX = (scaleY * latLon.lonCorrection) / latLon.latCorrection\r\n    }\r\n    // extra offset to put start of track at start location\r\n    this.routeData.x[0] = (this.lon[0] - latLon.minLon) * scaleX + controlXY.minX\r\n    this.routeData.y[0] = -1 * (this.lat[0] - latLon.maxLat) * scaleY + controlXY.minY\r\n\r\n    // translate lat/lon to x,y\r\n    const deltaX = controlXY.minX - (this.routeData.x[0] - controlXY.x[0])\r\n    const deltaY = controlXY.minY - (this.routeData.y[0] - controlXY.y[0])\r\n\r\n    for (let i = 0; i < this.lat.length; i += 1) {\r\n      this.routeData.x[i] = (this.lon[i] - latLon.minLon) * scaleX + deltaX\r\n      this.routeData.y[i] = -1 * (this.lat[i] - latLon.maxLat) * scaleY + deltaY\r\n    }\r\n  }\r\n\r\n  getControlInfo() {\r\n    let controlXY = getControlXY()\r\n    controlXY.minX = Math.min.apply(Math, controlXY.x)\r\n    controlXY.maxX = Math.max.apply(Math, controlXY.x)\r\n    controlXY.minY = Math.min.apply(Math, controlXY.y)\r\n    controlXY.maxY = Math.max.apply(Math, controlXY.y)\r\n\r\n    // issue #60: allow for no controls or just a few in a small area\r\n    // 100 is an arbitrary but sensible cut-off\r\n    if (controlXY.maxY - controlXY.minY < 100 || controlXY.maxX - controlXY.minX < 100) {\r\n      controlXY.minX = 0\r\n      controlXY.minY = 0\r\n      const size = getMapSize()\r\n      controlXY.maxX = size.width\r\n      controlXY.maxY = size.height\r\n    }\r\n    //console.log (minControlX, maxControlX, minControlY, maxControlY)\r\n    return controlXY\r\n  }\r\n\r\n  getLatLonInfo() {\r\n    let latLon = {}\r\n    latLon.maxLat = Math.max.apply(Math, this.lat)\r\n    latLon.maxLon = Math.max.apply(Math, this.lon)\r\n    latLon.minLat = Math.min.apply(Math, this.lat)\r\n    latLon.minLon = Math.min.apply(Math, this.lon)\r\n    latLon.lonCorrection =\r\n      getLatLonDistance(latLon.minLat, latLon.maxLon, latLon.minLat, latLon.minLon) / (latLon.maxLon - latLon.minLon)\r\n    latLon.latCorrection =\r\n      getLatLonDistance(latLon.minLat, latLon.minLon, latLon.maxLat, latLon.minLon) / (latLon.maxLat - latLon.minLat)\r\n    return latLon\r\n  }\r\n\r\n  getOffset() {\r\n    // calculates an offset to split times based on lowest average speed summed across all controls\r\n    const speedAverage = this.getSpeedAverage()\r\n    let speedAtControl = []\r\n    // range of seconds either side to check for \"minimum speed\" at control\r\n    const range = 10\r\n    for (let i = 0; i <= 2 * range; i += 1) {\r\n      speedAtControl[i] = 0\r\n    }\r\n    // read through each control\r\n    let speedExtract = 0\r\n    for (let i = 1; i < this.routeData.controlsToAdjust; i += 1) {\r\n      const split = this.routeData.splits[i]\r\n      // ignore missing splits\r\n      if (split !== this.routeData.splits[i - 1]) {\r\n        // avoid edge cases near start and finish\r\n        if (split >= range && split + range < speedAverage.length) {\r\n          speedExtract = speedAverage.slice(split - range, split + range + 1)\r\n        }\r\n        for (let j = 0; j <= 2 * range; j += 1) {\r\n          speedAtControl[j] += speedExtract[j]\r\n        }\r\n      }\r\n    }\r\n    let bestGuess = 0\r\n    for (let i = 1; i < speedAtControl.length; i += 1) {\r\n      if (speedAtControl[i] < speedAtControl[bestGuess]) {\r\n        bestGuess = i\r\n      }\r\n    }\r\n    // convert index in bestGuess into offset in x, y, time\r\n    const offset = bestGuess - range\r\n    return offset\r\n  }\r\n\r\n  getSecsFromTrackpoint(timestring) {\r\n    // input is 2013-12-03T12:34:56Z (or 56.000Z)\r\n    // needs to offset from midnight to allow replays, and alos needs to handle date (and year!) rollover\r\n    const secs = parseInt(Date.parse(timestring) / 1000, 10)\r\n    if (isNaN(secs)) {\r\n      return 0\r\n    }\r\n    return secs - this.startOffset\r\n  }\r\n\r\n  getSpeedAverage() {\r\n    // returns an array showing average speed for each second of the run\r\n    let speed = []\r\n    let speedAverage = []\r\n    speed[0] = 0\r\n    for (let i = 1; i < this.routeData.x.length; i += 1) {\r\n      // stored at second intervals so don't need to divide by time'\r\n      speed[i] = getDistanceBetweenPoints(\r\n        this.routeData.x[i],\r\n        this.routeData.y[i],\r\n        this.routeData.x[i - 1],\r\n        this.routeData.y[i - 1]\r\n      )\r\n    }\r\n    // average over 3 seconds to smooth things out\r\n    for (let i = 1; i < this.routeData.x.length - 1; i += 1) {\r\n      speedAverage[i] = (speed[i - 1] + speed[i] + speed[i + 1]) / 3\r\n    }\r\n    // not really worried about these but set to a sensible value\r\n    speedAverage[0] = speed[0]\r\n    speedAverage[this.routeData.x.length - 1] = speed[this.routeData.x.length - 1]\r\n    return speedAverage\r\n  }\r\n\r\n  getStartOffset(timestring) {\r\n    // needs to be set to midnight for supplied timestring\r\n    // input is 2013-12-03T12:34:56Z (or 56.000Z)\r\n    const secs = parseInt(Date.parse(timestring.substr(0, 11) + \"00:00:00Z\") / 1000, 10)\r\n    if (isNaN(secs)) {\r\n      return 0\r\n    }\r\n    return secs\r\n  }\r\n\r\n  initialiseGPS() {\r\n    this.lat.length = 0\r\n    this.lon.length = 0\r\n    this.startOffset = 0\r\n    this.baseX.length = 0\r\n    this.baseY.length = 0\r\n    this.handles.deleteAllHandles()\r\n    this.savedBaseX.length = 0\r\n    this.savedBaseY.length = 0\r\n    this.fileLoaded = false\r\n    this.routeData.x.length = 0\r\n    this.routeData.y.length = 0\r\n    this.routeData.time.length = 0\r\n  }\r\n\r\n  processGPSFile() {\r\n    this.initialiseGPS()\r\n    if (this.fileType === \"gpx\") {\r\n      this.processGPX()\r\n    } else {\r\n      this.processTCX()\r\n    }\r\n    this.processGPSTrack()\r\n  }\r\n\r\n  processGPSTrack() {\r\n    if (mapIsGeoreferenced()) {\r\n      this.applyWorldFile()\r\n      if (this.trackMatchesMapCoordinates()) {\r\n        // everything OK so lock background to avoid accidental adjustment\r\n        document.getElementById(\"chk-move-all\").checked = true\r\n      } else {\r\n        // warn and fit to track\r\n        showWarningDialog(\r\n          \"GPS file problem\",\r\n          \"Your GPS file does not match the map co-ordinates. Please check you have selected the correct file.\"\r\n        )\r\n        this.fitTrackInsideCourse()\r\n      }\r\n    } else {\r\n      this.fitTrackInsideCourse()\r\n    }\r\n    // finished with lat and lon so they can go just in case\r\n    this.lat.length = 0\r\n    this.lon.length = 0\r\n    this.expandToOneSecondInterval()\r\n    this.baseX = this.routeData.x.slice(0)\r\n    this.baseY = this.routeData.y.slice(0)\r\n    this.addStartAndFinishHandles()\r\n    this.fileLoaded = true\r\n    // need more than a start and finish to autofit\r\n    if (this.routeData.splits.length > 2) {\r\n      document.getElementById(\"btn-autofit-gps\").removeAttribute(\"disabled\")\r\n    }\r\n    document.getElementById(\"btn-save-gps-route\").removeAttribute(\"disabled\")\r\n    redraw()\r\n  }\r\n\r\n  processGPX() {\r\n    const trksegs = this.xml.getElementsByTagName(\"trkseg\")\r\n    for (let i = 0; i < trksegs.length; i += 1) {\r\n      const trkpts = trksegs[i].getElementsByTagName(\"trkpt\")\r\n      this.startOffset = this.getStartOffset(trkpts[0].getElementsByTagName(\"time\")[0].textContent)\r\n      // #319 allow for GPS files with (lat 0, lon 0)\r\n      for (let j = 0; j < trkpts.length; j += 1) {\r\n        const lat = trkpts[j].getAttribute(\"lat\")\r\n        const lon = trkpts[j].getAttribute(\"lon\")\r\n        // getAttribute returns strings\r\n        if (lat !== \"0\" && lon !== \"0\") {\r\n          this.lat.push(lat)\r\n          this.lon.push(lon)\r\n          this.routeData.time.push(this.getSecsFromTrackpoint(trkpts[j].getElementsByTagName(\"time\")[0].textContent))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  processTCX() {\r\n    const trksegs = this.xml.getElementsByTagName(\"Track\")\r\n    for (let i = 0; i < trksegs.length; i += 1) {\r\n      const trkpts = trksegs[i].getElementsByTagName(\"Trackpoint\")\r\n      this.startOffset = this.getStartOffset(trkpts[0].getElementsByTagName(\"Time\")[0].textContent)\r\n      for (let j = 0; j < trkpts.length; j += 1) {\r\n        // allow for <trackpoint> with no position: see #199\r\n        if (trkpts[j].getElementsByTagName(\"Position\").length > 0) {\r\n          const position = trkpts[j].getElementsByTagName(\"Position\")\r\n          // #319 allow for GPS files with (lat 0, lon 0)\r\n          const lat = position[0].getElementsByTagName(\"LatitudeDegrees\")[0].textContent\r\n          const lon = position[0].getElementsByTagName(\"LongitudeDegrees\")[0].textContent\r\n          // textContent returns strings\r\n          if (lat !== \"0\" && lon !== \"0\") {\r\n            this.lat.push(lat)\r\n            this.lon.push(lon)\r\n            this.routeData.time.push(this.getSecsFromTrackpoint(trkpts[j].getElementsByTagName(\"Time\")[0].textContent))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  readGPS(file) {\r\n    //console.log (\"File\" + e.target.files[0].name)\r\n    let reader = new FileReader()\r\n    this.fileName = file.target.files[0].name\r\n\r\n    reader.onerror = function (e) {\r\n      showWarningDialog(\"GPS file problem\", \"Unable to open GPS file. \" + e)\r\n    }\r\n    reader.onload = (text) => {\r\n      try {\r\n        this.fileType = this.fileName.slice(-3).toLowerCase()\r\n        if (this.fileType !== \"gpx\" && this.fileType !== \"tcx\") {\r\n          showWarningDialog(\r\n            \"GPS file problem\",\r\n            \"File type not recognised. Please check you have selected the correct file.\"\r\n          )\r\n          return\r\n        }\r\n        document.getElementById(\"rg2-load-gps-file\").setAttribute(\"disabled\", \"\")\r\n        this.xml = new DOMParser().parseFromString(text.target.result, \"text/xml\")\r\n        this.processGPSFile()\r\n      } catch (err) {\r\n        showWarningDialog(\r\n          \"GPS file problem\",\r\n          \"File is not valid XML. Please check you have selected the correct file. \" + err\r\n        )\r\n        return\r\n      }\r\n    }\r\n    // read the selected file\r\n    reader.readAsText(file.target.files[0])\r\n  }\r\n\r\n  trackMatchesMapCoordinates() {\r\n    // find bounding box for track\r\n    const minX = Math.min.apply(Math, this.routeData.x)\r\n    const maxX = Math.max.apply(Math, this.routeData.x)\r\n    const minY = Math.min.apply(Math, this.routeData.y)\r\n    const maxY = Math.max.apply(Math, this.routeData.y)\r\n    const mapSize = getMapSize()\r\n    // check we are somewhere on the map\r\n    return maxX > 0 && minX < mapSize.width && minY < mapSize.height && maxY > 0\r\n  }\r\n}\r\n","import { config } from \"./config\"\r\nlet id = 0\r\nlet courses = []\r\nlet routes = []\r\n\r\n// expand an array of routes or courses into a comma-separated string\r\nfunction extractItems(items, introText) {\r\n  if (items.length > 0) {\r\n    return introText + items.join(\",\")\r\n  }\r\n  return \"\"\r\n}\r\n\r\nfunction generateHash(hashID, hashRoutes, hashCourses) {\r\n  let hash = 0\r\n  if (id !== 0) {\r\n    hash = \"#\" + hashID + extractItems(hashCourses, \"&course=\") + extractItems(hashRoutes, \"&route=\")\r\n  }\r\n  return hash\r\n}\r\n\r\nexport function getHashCourses() {\r\n  return courses\r\n}\r\n\r\nexport function getHashID() {\r\n  return id\r\n}\r\n\r\nexport function getHashRoutes() {\r\n  return routes\r\n}\r\n\r\nexport function getHashTab() {\r\n  if (routes.length > 0) {\r\n    return config.TAB_RESULTS\r\n  }\r\n  return config.TAB_COURSES\r\n}\r\n\r\nfunction getIDFromLocationHash(locationHash) {\r\n  // id should be numeric and between # and & or end of string whichever comes first\r\n  let id = locationHash.replace(/#([0-9]+)($|&).*/, \"$1\")\r\n  //console.log(\"hash \", locationHash, \"id \", id)\r\n  if (id.length > 0) {\r\n    return parseInt(id, 10)\r\n  }\r\n  return id\r\n}\r\n\r\nexport function parseLocationHash(hash) {\r\n  id = 0\r\n  courses.length = 0\r\n  routes.length = 0\r\n  // input looks like #id&course=a,b,c&result=x,y,z\r\n  let fields = hash.split(\"&\")\r\n  for (let i = 0; i < fields.length; i += 1) {\r\n    fields[i] = fields[i].toLowerCase()\r\n    if (fields[i].search(\"#\") !== -1) {\r\n      // remove # and anything else non-numeric before trying to convert to an integer\r\n      id = parseInt(fields[i].replace(/\\D/g, \"\"), 10)\r\n    }\r\n    if (fields[i].search(\"course=\") !== -1) {\r\n      courses = fields[i].replace(\"course=\", \"\").split(\",\")\r\n    }\r\n    if (fields[i].search(\"route=\") !== -1) {\r\n      routes = fields[i].replace(\"route=\", \"\").split(\",\")\r\n    }\r\n  }\r\n  // convert to integers: NaNs sort themselves out on display so don't check here\r\n  courses = courses.map(Number)\r\n  routes = routes.map(Number)\r\n\r\n  if (isNaN(id)) {\r\n    id = 0\r\n    courses.length = 0\r\n    routes.length = 0\r\n  }\r\n  setLocationHash()\r\n  return id\r\n}\r\n\r\nexport function setEventHash(newid) {\r\n  id = newid\r\n  setLocationHash()\r\n}\r\n\r\nexport function setHashCourses(displayedCourses) {\r\n  courses = displayedCourses\r\n  setLocationHash()\r\n}\r\n\r\nexport function setHashRoutes(displayedRoutes) {\r\n  routes = displayedRoutes\r\n  setLocationHash()\r\n}\r\n\r\nfunction setLocationHash() {\r\n  let hash = \"\"\r\n  if (getIDFromLocationHash(window.location.hash) === id) {\r\n    hash = generateHash(id, routes, courses)\r\n    // console.log(\"Replace\" + hash)\r\n    window.history.replaceState({ hash: hash }, \"\", hash)\r\n  } else {\r\n    courses.length = 0\r\n    routes.length = 0\r\n    hash = generateHash(id, routes, courses)\r\n    // console.log(\"Push \" + hash)\r\n    window.history.pushState({ hash: hash }, \"\", hash)\r\n  }\r\n}\r\n","import { ctx } from \"./canvas\"\r\nimport { config, options, getOverprintDetails } from \"./config\"\r\nimport { controls, getCourseDetails, incrementTracksCount, drawLinesBetweenControls } from \"./courses\"\r\nimport { getMetresPerPixel } from \"./events\"\r\nimport { decode } from \"html-entities\"\r\nimport { getTimeAndSplitsForID } from \"./results\"\r\nimport { getAngle, getDistanceBetweenPoints, getNextTrackColour } from \"./utils\"\r\n\r\nexport class Result {\r\n  constructor(data, isScoreEvent, scorecodes, scorex, scorey) {\r\n    // resultid is the kartat id value\r\n    this.resultid = data.resultid\r\n    this.rawid = this.resultid % config.GPS_RESULT_OFFSET\r\n    this.isScoreEvent = isScoreEvent\r\n    this.name = decode(data.name).trim()\r\n    this.initials = this.getInitials(this.name)\r\n    this.starttime = data.starttime\r\n    this.time = data.time\r\n    if (this.time === \"00\" || this.time === \"0\") {\r\n      this.time = \"\"\r\n    }\r\n    this.timeInSecs = data.secs\r\n    this.position = data.position\r\n    this.status = data.status\r\n    this.canDelete = false\r\n    this.showResult = true\r\n    this.token = 0\r\n    // get round iconv problem in API for now: unescape special characters to get sensible text\r\n    if (data.comments) {\r\n      this.comments = decode(data.comments)\r\n    } else {\r\n      this.comments = \"\"\r\n    }\r\n    this.coursename = data.coursename\r\n    if (this.coursename === \"\") {\r\n      // need to force this to be a string for use elsewhere\r\n      this.coursename = data.courseid.toString()\r\n    }\r\n    this.courseid = data.courseid\r\n    this.variant = data.variant\r\n    this.splits = this.adjustRawSplits(data.splits)\r\n    if (this.isScoreEvent) {\r\n      // save control locations for score course result\r\n      this.scorex = scorex\r\n      this.scorey = scorey\r\n      this.scorecodes = scorecodes\r\n    }\r\n    // colours set when track is displayed\r\n    this.trackColour = null\r\n    this.userColour = null\r\n    this.initialiseTrack(data)\r\n  }\r\n\r\n  addInterpolatedTimes(startindex, endindex, cumulativeDistance) {\r\n    // add interpolated time at each point based on cumulative distance; this assumes uniform speed...\r\n    const oldt = this.xysecs[startindex]\r\n    const deltat = this.xysecs[endindex] - oldt\r\n    const olddist = cumulativeDistance[startindex]\r\n    const deltadist = cumulativeDistance[endindex] - olddist\r\n    for (let i = startindex; i <= endindex; i += 1) {\r\n      this.xysecs[i] = oldt + Math.round(((cumulativeDistance[i] - olddist) * deltat) / deltadist)\r\n    }\r\n  }\r\n\r\n  addTrack(data) {\r\n    this.trackx = data.x.split(\",\").map(function (n) {\r\n      return parseInt(n, 10)\r\n    })\r\n    this.tracky = data.y.split(\",\").map(function (n) {\r\n      return parseInt(n, 10)\r\n    })\r\n    // co-ords sent as differences, so recreate absolute values\r\n    for (let i = 1; i < this.trackx.length; i += 1) {\r\n      this.trackx[i] = this.trackx[i - 1] + this.trackx[i]\r\n      this.tracky[i] = this.tracky[i - 1] + this.tracky[i]\r\n    }\r\n    let trackOK\r\n    if (this.isGPSTrack) {\r\n      trackOK = this.expandGPSTrack()\r\n    } else {\r\n      // handle events that just have a start and finish time\r\n      if (this.splits.length === 2) {\r\n        trackOK = this.expandTrackWithNoSplits()\r\n      } else {\r\n        trackOK = this.expandNormalTrack()\r\n      }\r\n    }\r\n    if (trackOK) {\r\n      incrementTracksCount(this.courseid)\r\n    }\r\n  }\r\n\r\n  adjustRawSplits(rawSplits) {\r\n    // insert a 0 split at the start to make life much easier elsewhere\r\n    rawSplits.splice(0, 0, 0)\r\n    // splits are time in seconds at control, but may have 0 for missing controls\r\n    // make life easier elsewhere by replacing 0 with time at previous valid control\r\n    for (let i = 1; i < rawSplits.length; i += 1) {\r\n      // also allow for negative splits\r\n      if (rawSplits[i] <= 0) {\r\n        rawSplits[i] = rawSplits[i - 1]\r\n      }\r\n    }\r\n    // for some excluded events the finish split is unadjusted (bug in results system?)\r\n    // so safer to copy in running time\r\n    // ...but don't get any slower than we already are (random missing splits or something)\r\n    rawSplits[rawSplits.length - 1] = Math.max(this.timeInSecs, rawSplits[rawSplits.length - 2])\r\n    return rawSplits\r\n  }\r\n\r\n  calculateTotalTrackLength() {\r\n    // read through track to find total distance\r\n    let cumulativeDistance = []\r\n    cumulativeDistance[0] = 0\r\n    let oldx = this.trackx[0]\r\n    let oldy = this.tracky[0]\r\n    for (let i = 1; i < this.trackx.length; i += 1) {\r\n      cumulativeDistance[i] =\r\n        cumulativeDistance[i - 1] + Math.round(getDistanceBetweenPoints(this.trackx[i], this.tracky[i], oldx, oldy))\r\n      oldx = this.trackx[i]\r\n      oldy = this.tracky[i]\r\n    }\r\n    return cumulativeDistance\r\n  }\r\n\r\n  calculateTrackTimes(course) {\r\n    let cumulativeDistance = []\r\n    cumulativeDistance[0] = 0\r\n    let nextcontrol = this.getNextValidControl(0)\r\n    let nextx = course.x[nextcontrol]\r\n    let nexty = course.y[nextcontrol]\r\n    let dist = 0\r\n    let oldx = this.trackx[0]\r\n    let oldy = this.tracky[0]\r\n    let x = 0\r\n    let y = 0\r\n    let previouscontrolindex = 0\r\n    // read through list of controls and copy in split times\r\n    // we are assuming the track starts at the start which is index 0...\r\n    // look at each track point and see if it matches the next control location\r\n    for (let i = 1; i < this.trackx.length; i += 1) {\r\n      // calculate distance while we are looping through\r\n      x = this.trackx[i]\r\n      y = this.tracky[i]\r\n      dist += getDistanceBetweenPoints(x, y, oldx, oldy)\r\n      cumulativeDistance[i] = Math.round(dist)\r\n      oldx = x\r\n      oldy = y\r\n      // track ends at control\r\n      if (nextx === x && nexty === y) {\r\n        this.xysecs[i] = this.splits[nextcontrol]\r\n        this.addInterpolatedTimes(previouscontrolindex, i, cumulativeDistance)\r\n        previouscontrolindex = i\r\n        nextcontrol = this.getNextValidControl(nextcontrol)\r\n        if (nextcontrol === course.x.length) {\r\n          // we have found all the controls\r\n          this.hasValidTrack = true\r\n          break\r\n        }\r\n        nextx = course.x[nextcontrol]\r\n        nexty = course.y[nextcontrol]\r\n      }\r\n    }\r\n  }\r\n\r\n  drawScoreCourse() {\r\n    // draws a score course for an individual runner to show where they went\r\n    // based on drawCourse in course.js\r\n    // could refactor in future...\r\n    // > 1 since we need at least a start and finish to draw something\r\n    if (this.displayScoreCourse && this.scorex.length > 1) {\r\n      const opt = getOverprintDetails()\r\n      ctx.globalAlpha = config.FULL_INTENSITY\r\n      let angle = getAngle(this.scorex[0], this.scorey[0], this.scorex[1], this.scorey[1])\r\n      controls.drawStart(this.scorex[0], this.scorey[0], \"\", angle, opt)\r\n      angle = []\r\n      for (let i = 0; i < this.scorex.length - 1; i += 1) {\r\n        angle[i] = getAngle(this.scorex[i], this.scorey[i], this.scorex[i + 1], this.scorey[i + 1])\r\n      }\r\n      // draw all controls for a score course: too complicated to filter individuals\r\n      const filter = { from: 0, to: this.scorex.length }\r\n      drawLinesBetweenControls({ x: this.scorex, y: this.scorey }, angle, this.courseid, opt, filter)\r\n      for (let i = 1; i < this.scorex.length - 1; i += 1) {\r\n        controls.drawSingleControl(this.scorex[i], this.scorey[i], i, Math.PI * 0.25, opt)\r\n      }\r\n      controls.drawFinish(this.scorex[this.scorex.length - 1], this.scorey[this.scorey.length - 1], \"\", opt)\r\n    }\r\n  }\r\n\r\n  drawTrack(filter) {\r\n    // lots of scope for problems drawing incomplete results so just trap and move on\r\n    try {\r\n      let oldx, oldy, stopCount\r\n      if (this.displayTrack) {\r\n        if (this.isGPSTrack && options.showGPSSpeed && this.speedColour.length === 0) {\r\n          // set speed colours if we haven't done it yet\r\n          this.setSpeedColours()\r\n        }\r\n        let startIndex = 0\r\n        let endIndex = this.xysecs.length\r\n        const fromSplit = this.splits[filter.filterFrom]\r\n        const toSplit = this.splits[filter.filterTo]\r\n        // attempt at loop optimisation since drawing is quite slow...\r\n        for (let f = 0; f < this.xysecs.length; f += 1) {\r\n          if (this.xysecs[f] >= fromSplit) {\r\n            startIndex = f\r\n            break\r\n          }\r\n        }\r\n        for (let f = this.xysecs.length - 1; f >= 0; f -= 1) {\r\n          if (this.xysecs[f] <= toSplit) {\r\n            endIndex = f\r\n            break\r\n          }\r\n        }\r\n        ctx.lineWidth = options.routeWidth\r\n        ctx.strokeStyle = this.trackColour\r\n        ctx.globalAlpha = options.perCentRouteIntensity / 100\r\n        ctx.fillStyle = this.trackColour\r\n        ctx.font = \"10pt Arial\"\r\n        ctx.textAlign = \"left\"\r\n        ctx.beginPath()\r\n        ctx.moveTo(this.trackx[startIndex], this.tracky[startIndex])\r\n        oldx = this.trackx[startIndex]\r\n        oldy = this.tracky[startIndex]\r\n        stopCount = 0\r\n        for (let i = startIndex + 1; i <= endIndex; i += 1) {\r\n          // lines\r\n          ctx.lineTo(this.trackx[i], this.tracky[i])\r\n          if (this.trackx[i] === oldx && this.tracky[i] === oldy) {\r\n            // we haven't moved\r\n            stopCount += 1\r\n          } else {\r\n            // we have started moving again\r\n            if (stopCount > 0) {\r\n              if (!this.isGPSTrack || (this.isGPSTrack && options.showThreeSeconds)) {\r\n                ctx.fillText(\"+\" + 3 * stopCount, oldx + 5, oldy + 5)\r\n              }\r\n              stopCount = 0\r\n            }\r\n          }\r\n          oldx = this.trackx[i]\r\n          oldy = this.tracky[i]\r\n          if (this.isGPSTrack && options.showGPSSpeed) {\r\n            // draw partial track since we need to keep changing colour\r\n            ctx.strokeStyle = this.speedColour[i]\r\n            ctx.stroke()\r\n            ctx.beginPath()\r\n            ctx.moveTo(oldx, oldy)\r\n          }\r\n        }\r\n        ctx.stroke()\r\n      }\r\n    } catch (e) {\r\n      //  console.log(\"Problem drawing track for result ID \" + this.resultid)\r\n      return\r\n    }\r\n  }\r\n\r\n  expandGPSTrack() {\r\n    // in theory we get one point every three seconds\r\n    for (let t = 0; t < this.trackx.length; t += 1) {\r\n      this.xysecs[t] = 3 * t\r\n    }\r\n    // colours now set the first time we try to draw the track: major time saving on initial event load\r\n    this.speedColour.length = 0\r\n    this.hasValidTrack = true\r\n    return this.hasValidTrack\r\n  }\r\n\r\n  expandNormalTrack() {\r\n    // allow for getting two tracks for same result: should have been filtered in API...\r\n    this.xysecs.length = 0\r\n    // add times and distances at each position\r\n    this.xysecs[0] = 0\r\n    // get course details\r\n    let course = {}\r\n    // each person has their own defined score course\r\n    if (this.isScoreEvent) {\r\n      course.x = this.scorex\r\n      course.y = this.scorey\r\n    } else {\r\n      course = getCourseDetails(this.courseid)\r\n    }\r\n    this.calculateTrackTimes(course)\r\n    // treat all score tracks as valid for now\r\n    // may need a complete rethink on score course handling later\r\n    if (this.isScoreEvent) {\r\n      this.hasValidTrack = true\r\n    }\r\n    return this.hasValidTrack\r\n  }\r\n\r\n  expandTrackWithNoSplits() {\r\n    // based on ExpandNormalTrack, but deals with event format 2: no results\r\n    // this means we have a course and a finish time but no split times\r\n    this.xysecs.length = 0\r\n    // only have finish time, which is in [1] at present\r\n    const totaltime = this.splits[1]\r\n    let currenttime = 0\r\n    this.xysecs[0] = 0\r\n    // get course details: can't be a score course since they aren't supported for format 2\r\n    const course = {}\r\n    course.x = getCourseDetails(this.courseid).x\r\n    course.y = getCourseDetails(this.courseid).y\r\n    let nextcontrol = 1\r\n    let nextx = course.x[nextcontrol]\r\n    let nexty = course.y[nextcontrol]\r\n    let lastx = course.x[course.x.length - 1]\r\n    let lasty = course.y[course.y.length - 1]\r\n    // add finish location to track just in case...\r\n    this.trackx.push(lastx)\r\n    this.tracky.push(lasty)\r\n    let previouscontrolindex = 0\r\n    const cumulativeDistance = this.calculateTotalTrackLength()\r\n    const totaldist = cumulativeDistance[cumulativeDistance.length - 1]\r\n    // read through track to generate splits\r\n    let x = 0\r\n    let y = 0\r\n    let moved = false\r\n    for (let i = 1; i < this.trackx.length; i += 1) {\r\n      x = this.trackx[i]\r\n      y = this.tracky[i]\r\n      // cope with routes that have start and finish in same place, and where the first point in a route is a repeat of the start\r\n      if (x !== this.trackx[0] || y !== this.tracky[0]) {\r\n        moved = true\r\n      }\r\n      // track ends at control, as long as we have moved away from the start\r\n      if (nextx === x && nexty === y && moved) {\r\n        currenttime = parseInt((cumulativeDistance[i] / totaldist) * totaltime, 10)\r\n        this.xysecs[i] = currenttime\r\n        this.splits[nextcontrol] = currenttime\r\n        this.addInterpolatedTimes(previouscontrolindex, i, cumulativeDistance)\r\n        previouscontrolindex = i\r\n        nextcontrol += 1\r\n        if (nextcontrol === course.x.length) {\r\n          // we have found all the controls\r\n          this.hasValidTrack = true\r\n          break\r\n        }\r\n        nextx = course.x[nextcontrol]\r\n        nexty = course.y[nextcontrol]\r\n      }\r\n    }\r\n    return this.hasValidTrack\r\n  }\r\n\r\n  getColour(value) {\r\n    // RGB Hex values\r\n    //   Red Or  Yel LGr Gre PaG LBl Bl  DBl\r\n    // R 255 255 255 128 0   0   0   0   0\r\n    // G 0   128 255 255 255 255 255 128 0\r\n    // B 0   0   0   0   0   128 255 255 255\r\n    let colour = \"#\"\r\n    // using range 0 = Red to 1 = Green\r\n    // gets in a value between 0 (slowest) and 1 (fastest) and returns a colour string\r\n    if (value === 0) {\r\n      return \"#0080ff\"\r\n    }\r\n    if (value < 0.5) {\r\n      colour += \"ff\"\r\n    } else {\r\n      const red = parseInt((1 - value) * 255 * 2, 10)\r\n      if (red < 16) {\r\n        colour += \"0\"\r\n      }\r\n      colour += red.toString(16)\r\n    }\r\n    if (value >= 0.5) {\r\n      colour += \"ff\"\r\n    } else {\r\n      const green = 255 - parseInt((0.5 - value) * 255 * 2, 10)\r\n      if (green < 16) {\r\n        colour += \"0\"\r\n      }\r\n      colour += green.toString(16)\r\n    }\r\n    colour += \"00\"\r\n    // console.log(value, colour)\r\n    return colour\r\n  }\r\n\r\n  getInitials(name) {\r\n    // converts name to initials\r\n    if (name === null) {\r\n      return \"??\"\r\n    }\r\n    // replace GPS with * so that we get *SE rather than GSE for initials\r\n    name = name.replace(/GPS/g, \"*\")\r\n    let initials = \"\"\r\n    let addNext = true\r\n    for (let i = 0; i < name.length; i += 1) {\r\n      if (addNext) {\r\n        initials += name.substr(i, 1)\r\n        addNext = false\r\n      }\r\n      if (name.charAt(i) === \" \") {\r\n        addNext = true\r\n      }\r\n    }\r\n    return initials\r\n  }\r\n\r\n  getNextValidControl(thisControl) {\r\n    // look through splits to find next control which has a split time\r\n    // to allow drawing for missed controls where the split time is 0\r\n    for (let i = thisControl + 1; i < this.splits.length; i += 1) {\r\n      if (this.splits[i] !== this.splits[i - 1]) {\r\n        return i\r\n      }\r\n    }\r\n    // implies we have no finish time which is unlikely but anyway...\r\n    return this.splits.length\r\n  }\r\n\r\n  initialiseTrack(data) {\r\n    this.legpos = []\r\n    this.racepos = []\r\n    // set true if track includes all expected controls in correct order or is a GPS track\r\n    this.hasValidTrack = false\r\n    this.displayTrack = false\r\n    this.displayScoreCourse = false\r\n    // raw track data\r\n    this.trackx = []\r\n    this.tracky = []\r\n    this.speedColour = []\r\n    // interpolated times\r\n    this.xysecs = []\r\n    // GPS track ids are normal resultid + GPS_RESULT_OFFSET\r\n    if (this.resultid >= config.GPS_RESULT_OFFSET) {\r\n      this.isGPSTrack = true\r\n      // don't get time or splits so need to copy them in from original result\r\n      const info = getTimeAndSplitsForID(this.rawid)\r\n      this.time = info.time\r\n      this.splits = info.splits\r\n      // allow for events with no results where there won't be a non-GPS result\r\n      if (this.time === config.TIME_NOT_FOUND) {\r\n        this.time = data.time\r\n      }\r\n    } else {\r\n      //this.name = data.name\r\n      this.isGPSTrack = false\r\n    }\r\n  }\r\n\r\n  mapSpeedColours() {\r\n    // speed options are in min/km\r\n    const maxMetresPerSecond = 16.667 / options.maxSpeed\r\n    const minMetresPerSecond = 16.667 / options.minSpeed\r\n    const secondsPerSample = 3\r\n    // converts speed to RGB value\r\n    const sorted = this.speedColour.slice().sort(function (a, b) {\r\n      return a - b\r\n    })\r\n    const metresPerPixel = getMetresPerPixel()\r\n    let maxspeed = 0\r\n    let minspeed = 0\r\n    if (metresPerPixel !== undefined) {\r\n      maxspeed = (secondsPerSample * maxMetresPerSecond) / metresPerPixel\r\n      minspeed = (secondsPerSample * minMetresPerSecond) / metresPerPixel\r\n    } else {\r\n      maxspeed = sorted[sorted.length - 1]\r\n      // arbitrary limit below which everything will be red\r\n      minspeed = sorted[Math.floor(sorted.length / 95)]\r\n    }\r\n    const range = maxspeed - minspeed\r\n    // speedColour comes in with speeds at each point and gets updated to the associated colour\r\n    for (let i = 0; i < this.speedColour.length; i += 1) {\r\n      // force value into allowable range\r\n      let value = Math.max(this.speedColour[i], minspeed)\r\n      value = Math.min(value, maxspeed)\r\n      //console.log(value, (value - minspeed) / range)\r\n      this.speedColour[i] = this.getColour((value - minspeed) / range)\r\n    }\r\n  }\r\n\r\n  setSpeedColours() {\r\n    //calculate distance between each point in pixels, averaged over 2 points\r\n    this.speedColour[0] = 0\r\n    let oldDelta = 0\r\n    for (let t = 1; t < this.trackx.length; t += 1) {\r\n      const delta = getDistanceBetweenPoints(this.trackx[t], this.tracky[t], this.trackx[t - 1], this.tracky[t - 1])\r\n      this.speedColour[t] = (delta + oldDelta) / 2\r\n      oldDelta = delta\r\n    }\r\n    this.mapSpeedColours()\r\n  }\r\n\r\n  setTrackDisplay(display) {\r\n    if (this.hasValidTrack) {\r\n      if (display) {\r\n        if (this.userColour !== null) {\r\n          this.trackColour = this.userColour\r\n        } else {\r\n          this.trackColour = getNextTrackColour()\r\n        }\r\n      } else {\r\n        this.trackColour = null\r\n      }\r\n      this.displayTrack = display\r\n    }\r\n  }\r\n}\r\n","import { resultIsBeingAnimated, updateTrackNames } from \"./animation\"\r\nimport { getMapSize, redraw } from \"./canvas\"\r\nimport { config, options } from \"./config\"\r\nimport {\r\n  controls,\r\n  createCourseMenu,\r\n  isValidCourseId,\r\n  getCourseDetails,\r\n  getCourseName,\r\n  getCoursesForEvent,\r\n  getNumberOfControlsOnCourse,\r\n  getnumberOfCourses,\r\n  getFilterDetails,\r\n  setResultsCount,\r\n  updateScoreCourse\r\n} from \"./courses\"\r\nimport { setName } from \"./draw\"\r\nimport {\r\n  eventIsLocked,\r\n  getActiveMapID,\r\n  getEventInfoForKartatID,\r\n  getKartatEventID,\r\n  getWorldFile,\r\n  isScoreEvent\r\n} from \"./events\"\r\nimport { getHashRoutes, getHashCourses, getHashTab } from \"./hash\"\r\nimport { Result } from \"./result\"\r\nimport { getActiveTab, setResultCheckboxes, displayStatsDialog } from \"./rg2ui\"\r\nimport { t } from \"./translate\"\r\nimport { formatSecsAsMMSS, generateOption } from \"./utils\"\r\n\r\nlet results = []\r\n\r\nexport function addResults(data, isScoreEvent) {\r\n  results.length = 0\r\n  let codes = []\r\n  let scorex = []\r\n  let scorey = []\r\n  // extract score course details if necessary\r\n  if (isScoreEvent) {\r\n    // details are only sent the first time a variant occurs (to reduce file size quite a lot in some cases)\r\n    // so need to extract them for use later\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      let variant = data[i].variant\r\n      if (codes[variant] === undefined) {\r\n        codes[variant] = data[i].scorecodes\r\n        scorex[variant] = data[i].scorex\r\n        scorey[variant] = data[i].scorey\r\n      }\r\n    }\r\n  }\r\n  // save each result\r\n  for (let i = 0; i < data.length; i += 1) {\r\n    // trap cases where only some courses for an event are set up, but for some reason all the results get saved\r\n    // so you end up getting results for courses you don't know about: just ignore these results\r\n    if (isValidCourseId(data[i].courseid)) {\r\n      if (data[i].resultid > config.GPS_RESULT_OFFSET && data[i].coursename === \"\") {\r\n        data[i].coursename = getCourseDetails(data[i].courseid).name\r\n      }\r\n      let result = undefined\r\n      if (isScoreEvent) {\r\n        let variant = data[i].variant\r\n        result = new Result(data[i], isScoreEvent, codes[variant], scorex[variant], scorey[variant])\r\n      } else {\r\n        result = new Result(data[i], isScoreEvent)\r\n      }\r\n      results.push(result)\r\n    }\r\n  }\r\n  //setTrackColours()\r\n  setDisplayOrder()\r\n  setDeletionInfo()\r\n  setScoreCourseInfo()\r\n  handleExclusions()\r\n  sanitiseSplits(isScoreEvent)\r\n}\r\n\r\nexport function addTracks(tracks) {\r\n  for (let i = 0; i < tracks.length; i += 1) {\r\n    let resultIndex = tracks[i].id\r\n    let j = 0\r\n    // loop through all results and add it against the correct id\r\n    while (j < results.length) {\r\n      if (resultIndex === results[j].resultid) {\r\n        results[j].addTrack(tracks[i])\r\n        break\r\n      }\r\n      j += 1\r\n    }\r\n  }\r\n}\r\n\r\nexport function allResultsForCourseReplayed(courseid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      // careful: animation runners use index, not resultid\r\n      if (!resultIsBeingAnimated(i)) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function allTracksDisplayed() {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].hasValidTrack) {\r\n      if (!results[i].displayTrack) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function allTracksForCourseDisplayed(courseid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].hasValidTrack) {\r\n        if (!results[i].displayTrack) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function allTracksForCourseReplayed(courseid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].hasValidTrack) {\r\n        // careful: animation runners use index, not resultid\r\n        if (!resultIsBeingAnimated(i)) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function anyTracksForCourseDisplayed(courseid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].hasValidTrack) {\r\n        if (results[i].displayTrack) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function countResultsByCourseID(courseid) {\r\n  const info = getEventInfoForKartatID()\r\n  let count = 0\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      // don't double-count GPS tracks, unless no initial results (#284)\r\n      if (\r\n        results[i].resultid < config.GPS_RESULT_OFFSET ||\r\n        info.format === config.FORMAT_NO_RESULTS ||\r\n        info.format === config.FORMAT_SCORE_EVENT_NO_RESULTS\r\n      ) {\r\n        count += 1\r\n      }\r\n    }\r\n  }\r\n  return count\r\n}\r\n\r\nexport function createNameDropdown(courseid) {\r\n  let dropdown = document.getElementById(\"rg2-select-name\")\r\n  dropdown.innerHTML = \"\"\r\n  dropdown.options.add(generateOption(null, t(\"Select name\", \"\")))\r\n  // empty dropdown if course not yet selected\r\n  if (courseid === undefined) {\r\n    return\r\n  }\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    // only use original results, not GPS results\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].resultid < config.GPS_RESULT_OFFSET) {\r\n        dropdown.options.add(generateOption(results[i].resultid, results[i].time + \" \" + results[i].name))\r\n      }\r\n    }\r\n  }\r\n  dropdown.addEventListener(\"change\", (e) => {\r\n    setName(parseInt(e.target.value, 10))\r\n  })\r\n  dropdown.removeAttribute(\"disabled\")\r\n}\r\n\r\nexport function createResultMenu() {\r\n  //loads menu from populated result array\r\n  let html = formatResultListAsAccordion()\r\n  // #177 not pretty but gets round problems of double encoding\r\n  html = html.replace(/&amp;/g, \"&\")\r\n  const el = document.getElementById(\"rg2-result-table\")\r\n  el.innerHTML = html\r\n  setResultsSearch()\r\n  setDisplayedRunnerCounts()\r\n  setResultCheckboxes()\r\n  const rows = document.querySelectorAll(\".resultrow\")\r\n  for (let row of rows) {\r\n    row.addEventListener(\"dblclick\", (e) => {\r\n      // currentTarget is the <tr> element: target points to <td> within the <tr>\r\n      const id = parseInt(e.currentTarget.dataset.id, 10)\r\n      if (id) {\r\n        displayStatsDialog(id)\r\n      }\r\n    })\r\n    row.addEventListener(\"contextmenu\", (e) => {\r\n      // currentTarget is the <tr> element: target points to <td> within the <tr>\r\n      const id = parseInt(e.currentTarget.dataset.id, 10)\r\n      if (id) {\r\n        displayStatsDialog(id)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function deleteResultsForEvent() {\r\n  results.length = 0\r\n}\r\n\r\nexport function displayScoreCourse(id, display) {\r\n  results[id].displayScoreCourse = display\r\n}\r\n\r\nexport function drawTracks() {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    let filter\r\n    if (results[i].isScoreEvent) {\r\n      filter = { from: 0, to: results[i].scorex.length }\r\n    } else {\r\n      filter = getFilterDetails(results[i].courseid)\r\n    }\r\n    results[i].drawTrack(filter)\r\n    results[i].drawScoreCourse()\r\n  }\r\n}\r\n\r\nexport function formatResultListAsAccordion() {\r\n  // header rows to create\r\n  let headers = []\r\n  // results tables to create\r\n  let tables = []\r\n\r\n  if (results.length === 0) {\r\n    return `<p>${t(\"No results available\")}</p>`\r\n  }\r\n  let html = \"\"\r\n  let oldCourseID = 0\r\n  let tracksForThisCourse = 0\r\n  prepareResults()\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const res = results[i]\r\n    if (!res.showResult) {\r\n      // result marked not to display as it is being combined with GPS route\r\n      continue\r\n    }\r\n    if (res.courseid !== oldCourseID) {\r\n      // save previous course table if there was one\r\n      if (headers.length > 0) {\r\n        html += getBottomRows(tracksForThisCourse, oldCourseID) + \"</table>\"\r\n        tables.push(html)\r\n      }\r\n      // found a new course so add header\r\n      tracksForThisCourse = 0\r\n      headers.push(getCourseHeader(res))\r\n      // Start the table with an id that relates to the course name to help with the filtering function\r\n      html = `<table class='resulttable' id='table-${res.courseid}'><thead><tr><th>#</th>`\r\n      html += `<th>${t(\"Name\")}</th><th>${t(\"Time\")}</th>`\r\n      html += `<th><i class='bi-pencil'></i></th><th><i class='bi-play-fill'></i></th></tr></thead><tbody class=\"table-group-divider\">`\r\n      oldCourseID = res.courseid\r\n    }\r\n    html += `<tr class=\"resultrow\" data-id=\"${res.rawid}\"><td>${res.position}</td>`\r\n    // #310 filter default comments in local language just in case\r\n    if (res.comments !== \"\" && res.comments !== t(\"Type your comment\")) {\r\n      // #304 make sure double quotes show up\r\n      res.comments = res.comments.replace(/\"/g, \"&quot;\")\r\n      html += `<td title=\"${res.comments}\"><u>${getNameHTML(res, i)}</u>`\r\n    } else {\r\n      html += `<td>${getNameHTML(res, i)}`\r\n    }\r\n    if (res.canDelete) {\r\n      html += ` <i class='deleteroute bi-trash-fill' data-resultidx=${i}></i>`\r\n    }\r\n    html += `</td><td>${res.time}</td>`\r\n    let showTrack = \"\"\r\n    let showReplay = \"showreplay\"\r\n    if (res.hasValidTrack) {\r\n      tracksForThisCourse += 1\r\n      showTrack = `<input class='showtrack' data-courseid='${oldCourseID}' data-id='${res.resultid}' type=checkbox name=result></input>`\r\n      showReplay += \" showtrackreplay\"\r\n    }\r\n    html += `<td>${showTrack}</td>`\r\n    html += `<td><input class=\"${showReplay}\" data-courseid=${oldCourseID} data-id=${res.resultid} type=checkbox name=replay></input></td></tr>`\r\n  }\r\n  html += `</tbody>${getBottomRows(tracksForThisCourse, oldCourseID)}</table>`\r\n  tables.push(html)\r\n\r\n  html = `<div class=\"accordion\" id=\"results-accordion\">`\r\n  for (let i = 0; i < tables.length; i += 1) {\r\n    html += `<div class=\"accordion-item\">`\r\n    html += `<h2 class=\"accordion-header d-flex\" id=\"header-${i}\">`\r\n    html += `<button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapse-${i}\" aria-expanded=\"true\" aria-controls=\"collapse-${i}\">`\r\n    html += `${headers[i].title}</button>${headers[i].check}</h2>`\r\n    html += `<div id=\"collapse-${i}\" class=\"accordion-collapse collapse\" aria-labelledby=\"header-${i}\" data-bs-parent=\"#rg2-result-tab-body\">`\r\n    html += `<div class=\"accordion-body px-0\">${tables[i]}</div></div></div>`\r\n  }\r\n  html += `</div>`\r\n  return html\r\n}\r\n\r\nfunction formatTotalRunningTime(secs) {\r\n  let time = Math.floor(secs / 86400) + \" days \"\r\n  secs = secs - 86400 * Math.floor(secs / 86400)\r\n  time += Math.floor(secs / 3600) + \" hours \"\r\n  secs = secs - 3600 * Math.floor(secs / 3600)\r\n  time += Math.floor(secs / 60) + \" minutes \"\r\n  time += secs - 60 * Math.floor(secs / 60) + \" seconds\"\r\n  return time\r\n}\r\n\r\n// read through results to get list of all controls on score courses\r\n// since there is no master list of controls!\r\nexport function generateScoreCourses() {\r\n  let courses = []\r\n  let codes = []\r\n  let x = []\r\n  let y = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const res = results[i]\r\n    // only do this for original results, not GPS results\r\n    if (res.resultid < config.GPS_RESULT_OFFSET) {\r\n      const courseid = res.courseid\r\n      // save courseid if it is new\r\n      if (courses.indexOf(courseid) === -1) {\r\n        courses.push(courseid)\r\n        codes[courseid] = []\r\n        x[courseid] = []\r\n        y[courseid] = []\r\n      }\r\n      // read all controls for this result and save if new\r\n      for (let j = 0; j < res.scorecodes.length; j += 1) {\r\n        if (codes[courseid].indexOf(res.scorecodes[j]) === -1) {\r\n          codes[courseid].push(res.scorecodes[j])\r\n          x[courseid].push(res.scorex[j])\r\n          y[courseid].push(res.scorey[j])\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // save the details we have just generated\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    const courseid = courses[i]\r\n    updateScoreCourse(courseid, codes[courseid], x[courseid], y[courseid])\r\n  }\r\n}\r\n\r\nexport function getAllResultsForCourse(courseid) {\r\n  let list = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      // only want first entry: not other drawn routes\r\n      if (results[i].resultid === results[i].rawid) {\r\n        list.push(results[i])\r\n      }\r\n    }\r\n  }\r\n  return list\r\n}\r\n\r\nexport function getAllResultsForVariant(variant) {\r\n  let list = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].variant === variant) {\r\n      // only want first entry: not other drawn routes\r\n      if (results[i].resultid === results[i].rawid) {\r\n        list.push(results[i])\r\n      }\r\n    }\r\n  }\r\n  return list\r\n}\r\n\r\nexport function getAllRunnersForCourse(courseid) {\r\n  let runners = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      runners.push(results[i].resultid)\r\n    }\r\n  }\r\n  return runners\r\n}\r\n\r\nexport function getAllRunnersWithTrackForCourse(courseid) {\r\n  let runners = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid) {\r\n      if (results[i].hasValidTrack) {\r\n        runners.push(results[i].resultid)\r\n      }\r\n    }\r\n  }\r\n  return runners\r\n}\r\n\r\nfunction getBottomRows(tracks, courseid) {\r\n  // create bottom rows for all tracks checkboxes\r\n  // first row is drawn and GPS routes (if they exist)\r\n  let html = `<tfoot class=\"table-group-divider\"><tr class='allitemsrow'><td></td><td>${t(\"Routes\")}</td><td></td>`\r\n  if (tracks > 0) {\r\n    html += `<td><input class='allcoursetracks' data-courseid=${courseid} type=checkbox name=track></input></td>`\r\n    html += `<td><input class='allcoursetracksreplay' data-courseid=${courseid} type=checkbox name=replay></input></td>`\r\n  } else {\r\n    html += \"<td></td><td></td>\"\r\n  }\r\n  // second row allows replay of non-drawn routes\r\n  html += `</tr><tr class='allitemsrow'><td></td><td>${t(\"All\")}</td><td></td><td></td>`\r\n  html += `<td><input class='allcoursereplay' data-courseid=${courseid} type=checkbox name=replay></input></td></tr></tfoot>`\r\n  return html\r\n}\r\n\r\nexport function getCommentsForEvent() {\r\n  let hasComments = false\r\n  let html = [\r\n    `<table id='rg2-comments-table' class='table table-sm table-striped table-bordered'>`,\r\n    `<thead><tr><th>${t(\"Name\")}</th><th>${t(\"Course\")}</th>`,\r\n    `<th>${t(\"Comments\")}</th></tr></thead><tbody class=\"table-group-divider\">`\r\n  ].join(\"\")\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].comments !== \"\") {\r\n      hasComments = true\r\n      html += [\r\n        `<tr><td>${results[i].name}</td><td>${results[i].coursename}</td>`,\r\n        `<td>${results[i].comments}</td></tr>`\r\n      ].join(\"\")\r\n    }\r\n  }\r\n  if (hasComments) {\r\n    html += `</tbody></table>`\r\n  } else {\r\n    html = \"\"\r\n  }\r\n  return html\r\n}\r\n\r\nexport function getCourseForResult(id) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === id) {\r\n      return results[i].courseid\r\n    }\r\n  }\r\n  return undefined\r\n}\r\n\r\nfunction getCourseHeader(result) {\r\n  let text = result.coursename\r\n  const info = getCourseDetails(result.courseid)\r\n  // need to protect against some old events with dodgy results\r\n  if (info) {\r\n    text += info.length === undefined ? \"\" : \": \" + info.length + \" km\"\r\n  }\r\n  let html = `<div class=\"d-flex w-100\"><div class=\"flex-grow-1 runners-table-course-header\" data-runners=\"\" data-courseid=\"${result.courseid}\">${text}</div>`\r\n  let check = `<div class=\"px-2\"><input class='showcourse' data-courseid=\"${result.courseid}\"`\r\n  check += ` type=checkbox name =\"course\" title='Show course' ></input ></div >`\r\n  return { title: html, check: check }\r\n}\r\n\r\nexport function getDeletionInfo(id) {\r\n  return { id: results[id].resultid, token: results[id].token }\r\n}\r\n\r\nexport function getDisplayedTrackDetails() {\r\n  // used to populate rg2-track-names within animation on screen redraw\r\n  let tracks = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].displayTrack) {\r\n      let info = {}\r\n      info.trackColour = results[i].trackColour\r\n      info.course = getCourseName(results[i].courseid)\r\n      info.name = results[i].name\r\n      info.resultid = results[i].resultid\r\n      info.rawid = results[i].rawid\r\n      tracks.push(info)\r\n    }\r\n  }\r\n  return tracks\r\n}\r\n\r\nexport function getFullResultforResultID(resultid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === resultid) {\r\n      return results[i]\r\n    }\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport function getFullResultForRawID(rawid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === rawid) {\r\n      return results[i]\r\n    }\r\n  }\r\n  return undefined\r\n}\r\n\r\nfunction getNameHTML(res, i) {\r\n  let namehtml\r\n  if (res.rawid === res.resultid) {\r\n    namehtml = res.name\r\n  } else {\r\n    namehtml = \"<i>\" + res.name + \"</i>\"\r\n  }\r\n  if (res.isScoreEvent) {\r\n    namehtml = `<input class='showscorecourse' data-courseid=${i} type=checkbox></input> ${namehtml}`\r\n  }\r\n  return `<div>${namehtml}</div>`\r\n}\r\n\r\nfunction getRawDisplayOrder(rawid) {\r\n  let idx = results.findIndex((res) => res.resultid === rawid)\r\n  return idx > -1 ? results[idx].displayOrder : rawid\r\n}\r\n\r\nfunction getResultsInfo() {\r\n  let info = { results: 0, drawnroutes: 0, gpsroutes: 0, secs: 0 }\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const res = results[i]\r\n    if (res.resultid < config.GPS_RESULT_OFFSET) {\r\n      info.results += 1\r\n      // beware invalid splits for incomplete runs\r\n      if (res.time) {\r\n        info.secs += res.splits[res.splits.length - 1]\r\n      }\r\n    }\r\n    if (res.hasValidTrack) {\r\n      if (res.resultid < config.GPS_RESULT_OFFSET) {\r\n        info.drawnroutes += 1\r\n      } else {\r\n        info.gpsroutes += 1\r\n      }\r\n    }\r\n  }\r\n  info.totalroutes = info.drawnroutes + info.gpsroutes\r\n  if (info.results > 0) {\r\n    info.percent = ((100 * info.totalroutes) / info.results).toFixed(1)\r\n  } else {\r\n    info.percent = 0\r\n  }\r\n  info.time = formatTotalRunningTime(info.secs)\r\n  return info\r\n}\r\n\r\nexport function getResultsStats(controls, validWorldFile) {\r\n  const resultsinfo = getResultsInfo()\r\n  const coursearray = getCoursesForEvent()\r\n  const mapSize = getMapSize()\r\n  let wf = \"\"\r\n  if (validWorldFile) {\r\n    const worldFile = getWorldFile()\r\n    const digits = 1000000\r\n    wf = `. ${t(\"Map is georeferenced\")}: ${parseInt(worldFile.F * digits) / digits}`\r\n    wf += `, ${parseInt(worldFile.C * digits) / digits}.`\r\n  }\r\n\r\n  let stats = [\r\n    `<tr><td>${t(\"Courses\")}</td><td>${coursearray.length}</td></tr>`,\r\n    `<tr><td>${t(\"Controls\")}</td><td>${controls}</td></tr>`,\r\n    `<tr><td>${t(\"Results\")}</td><td>${resultsinfo.results}</td></tr>`,\r\n    `<tr><td>${t(\"Routes\")}</td><td>${resultsinfo.totalroutes} (${resultsinfo.percent}%)</td></tr>`,\r\n    `<tr><td>${t(\"Drawn routes\")}</td><td>${resultsinfo.drawnroutes}</td></tr>`,\r\n    `<tr><td>${t(\"GPS routes\")}</td><td>${resultsinfo.gpsroutes}</td></tr>`,\r\n    `<tr><td>${t(\"Total time\")}</td><td>${resultsinfo.time}</td></tr>`,\r\n    `<tr><td>${t(\"Map\")} ID ${getActiveMapID()}</td><td>${mapSize.width}  x ${mapSize.height} pixels${wf}</td></tr>`\r\n  ].join(\"\")\r\n  return stats\r\n}\r\n\r\nexport function getRoutesForEvent() {\r\n  let routes = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].hasValidTrack) {\r\n      let route = {}\r\n      route.id = i\r\n      route.resultid = results[i].resultid\r\n      route.name = results[i].name\r\n      route.time = results[i].time\r\n      route.coursename = results[i].coursename\r\n      routes.push(route)\r\n    }\r\n  }\r\n  return routes\r\n}\r\n\r\nexport function getTimeAndSplitsForID(resultid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (resultid === results[i].resultid) {\r\n      return { time: results[i].time, splits: results[i].splits }\r\n    }\r\n  }\r\n  return { time: config.TIME_NOT_FOUND, splits: [] }\r\n}\r\n\r\nexport function getTracksOnDisplay() {\r\n  let tracks = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    const result = results[i]\r\n    if (result.displayTrack) {\r\n      tracks.push(result.resultid)\r\n    }\r\n  }\r\n  return tracks\r\n}\r\n\r\nfunction handleExclusions() {\r\n  // adjust times for events with excluded controls that have uploaded unadjusted splits\r\n  let currentCourseID = undefined\r\n  let course = undefined\r\n  let adjustedCourseIDs = []\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid !== currentCourseID) {\r\n      currentCourseID = results[i].courseid\r\n      course = getCourseDetails(currentCourseID)\r\n    }\r\n    if (course.excludeType === config.EXCLUDED_REAL_SPLITS) {\r\n      if (adjustedCourseIDs.indexOf(currentCourseID) === -1) {\r\n        adjustedCourseIDs.push(currentCourseID)\r\n      }\r\n      let excluded = 0\r\n      // start at 1 since you can't exclude the start control\r\n      for (let j = 1; j < course.exclude.length; j += 1) {\r\n        if (course.exclude[j]) {\r\n          excluded = excluded + Math.min(results[i].splits[j] - results[i].splits[j - 1], course.allowed[j])\r\n        }\r\n      }\r\n      results[i].timeInSecs = Math.max(results[i].splits[results[i].splits.length - 1] - excluded, 0)\r\n      results[i].time = formatSecsAsMMSS(results[i].timeInSecs)\r\n    }\r\n  }\r\n  // set positions for amended courses\r\n  for (let i = 0; i < adjustedCourseIDs.length; i += 1) {\r\n    let runners = results.filter((res) => res.courseid === adjustedCourseIDs[i])\r\n    // horrid mess since all GPS results show status \"ok\" even if the original results was not \"ok\"\r\n    // so need to copy across status from original result\r\n    for (let j = 0; j < runners.length; j += 1) {\r\n      if (runners[j].rawid !== runners[j].resultid) {\r\n        let idx = runners.findIndex((res) => res.resultid === runners[j].rawid)\r\n        // should always find the index but...\r\n        if (idx > -1) {\r\n          runners[j].status = runners[idx].status\r\n        }\r\n      }\r\n    }\r\n    runners.sort(function (a, b) {\r\n      // sort valid times in ascending order\r\n      if (a.status !== \"ok\" || a.timeInSecs === 0) {\r\n        if (b.status !== \"ok\" || b.timeInSecs === 0) {\r\n          return 0\r\n        } else {\r\n          return 1\r\n        }\r\n      }\r\n      if (b.status !== \"ok\" || b.timeInSecs === 0) {\r\n        return -1\r\n      }\r\n      return a.timeInSecs - b.timeInSecs\r\n    })\r\n    let pos = 0\r\n    let prevTime = 0\r\n    for (let j = 0; j < runners.length; j += 1) {\r\n      if (runners[j].status !== \"ok\" || runners[j].timeInSecs === 0) {\r\n        runners[j].position = \"\"\r\n        continue\r\n      }\r\n      if (prevTime !== runners[j].timeInSecs) {\r\n        pos = pos + 1\r\n        prevTime = runners[j].timeInSecs\r\n      } else {\r\n        // same time, but might be GPS result for a normal result\r\n        if (j > 0) {\r\n          if (runners[j].rawid !== runners[j - 1].rawid) {\r\n            pos = pos + 1\r\n          }\r\n        }\r\n      }\r\n      runners[j].position = pos\r\n    }\r\n    for (let j = 0; j < runners.length; j += 1) {\r\n      let idx = results.findIndex((res) => res.resultid === runners[j].resultid)\r\n      // should always find the index but...\r\n      if (idx > -1) {\r\n        results[idx].position = runners[j].position\r\n        // set new display order for this course\r\n        results[idx].displayOrder = j\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction prepareResults() {\r\n  // want to avoid extra results line for GPS routes if there is no drawn route\r\n  // first sort so that GPS routes come after initial result\r\n  results.sort(sortByCourseIDThenResultID)\r\n  // now we can combine first GPS route with original result if needed\r\n  let oldID = undefined\r\n  let canCombine = false\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].rawid === oldID) {\r\n      if (canCombine) {\r\n        if (results[i].hasValidTrack) {\r\n          // found a GPS track to combine\r\n          results[i - 1].showResult = false\r\n          // add position to GPS route\r\n          results[i].position = results[i - 1].position\r\n          canCombine = false\r\n        }\r\n      }\r\n    } else {\r\n      // this is the original result which can be combined if\r\n      // it doesn't already have a drawn route\r\n      canCombine = !results[i].hasValidTrack\r\n      oldID = results[i].rawid\r\n    }\r\n  }\r\n}\r\n\r\nexport function resetSpeedColours() {\r\n  // called when user changes GPS speed colour configuration\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    // forces colours to recalculate\r\n    results[i].speedColour.length = 0\r\n  }\r\n}\r\n\r\nexport function resultIDExists(resultid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (resultid === results[i].resultid) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction sanitiseSplits(isScoreEvent) {\r\n  // sort out missing punches and add some helpful new fields\r\n  let currentCourseID = undefined\r\n  let course = undefined\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid !== currentCourseID) {\r\n      currentCourseID = results[i].courseid\r\n      course = getCourseDetails(currentCourseID)\r\n    }\r\n    results[i].legSplits = []\r\n    results[i].legSplits[0] = 0\r\n    let previousValidSplit = 0\r\n    let nextSplitInvalid = false\r\n    for (let j = 1; j < results[i].splits.length; j += 1) {\r\n      if (results[i].splits[j] - previousValidSplit === 0) {\r\n        if (course.exclude[j]) {\r\n          results[i].legSplits[j] = results[i].splits[j] - previousValidSplit\r\n          previousValidSplit = results[i].splits[j]\r\n        } else {\r\n          // found a zero split\r\n          results[i].legSplits[j] = 0\r\n          // need to ignore next split as well: e.g missing 3 means splits to 3 and 4 are invalid\r\n          nextSplitInvalid = true\r\n          if (results[i].lastValidSplit === undefined) {\r\n            // race positions need to stop at previous control\r\n            results[i].lastValidSplit = j - 1\r\n          }\r\n        }\r\n      } else {\r\n        if (nextSplitInvalid) {\r\n          results[i].legSplits[j] = 0\r\n          previousValidSplit = results[i].splits[j]\r\n          nextSplitInvalid = false\r\n        } else {\r\n          results[i].legSplits[j] = results[i].splits[j] - previousValidSplit\r\n          previousValidSplit = results[i].splits[j]\r\n        }\r\n      }\r\n    }\r\n    if (results[i].lastValidSplit === undefined) {\r\n      results[i].lastValidSplit = results[i].splits.length - 1\r\n    }\r\n\r\n    // handle corrupted events with missing splits\r\n    // force all results to have the correct number of splits to make stats processing work correctly\r\n    if (!isScoreEvent) {\r\n      // splits array contains \"S\" and \"F\" as well as each control\r\n      const expectedSplits = getNumberOfControlsOnCourse(results[i].courseid) + 2\r\n      while (results[i].splits.length < expectedSplits) {\r\n        // copy last valid split data as often as necessary to fill missing gaps\r\n        results[i].splits.push(results[i].splits[results[i].splits.length - 1])\r\n        results[i].legSplits.push(0)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function saveResults(results) {\r\n  document.getElementById(\"rg2-load-progress-label\").textContent = t(\"Saving results\", \"\")\r\n  // TODO remove temporary (?) fix to get round RG1 events with no courses defined: see #179\r\n  if (getnumberOfCourses() > 0) {\r\n    addResults(results, isScoreEvent())\r\n  }\r\n  setResultsCount()\r\n  if (isScoreEvent()) {\r\n    generateScoreCourses()\r\n    controls.generateControlList()\r\n  }\r\n}\r\n\r\nexport function saveRoutes(data) {\r\n  // TODO: bit messy. Where does this really belong?\r\n  document.getElementById(\"rg2-load-progress-label\").textContent = t(\"Saving routes\", \"\")\r\n  // TODO remove temporary (?) fix to get round RG1 events with no courses defined: see #179\r\n  if (getnumberOfCourses() > 0) {\r\n    addTracks(data)\r\n  }\r\n  createCourseMenu()\r\n  createResultMenu()\r\n  if (config.managing()) {\r\n    rg2Config.manager.eventFinishedLoading()\r\n  } else {\r\n    document.getElementById(config.TAB_COURSES).removeAttribute(\"disabled\")\r\n    document.getElementById(config.TAB_RESULTS).removeAttribute(\"disabled\")\r\n    if (eventIsLocked()) {\r\n      document.getElementById(config.TAB_DRAW).setAttribute(\"disabled\", \"\")\r\n    } else {\r\n      document.getElementById(config.TAB_DRAW).removeAttribute(\"disabled\")\r\n    }\r\n    // open courses tab for new event: else stay on draw tab\r\n    const active = getActiveTab()\r\n    // don't change tab if we have come from DRAW since it means\r\n    // we have just reloaded following a save\r\n    if (active !== config.TAB_DRAW) {\r\n      const tab = getHashTab()\r\n      const target = document.getElementById(tab)\r\n      target.click()\r\n    }\r\n    // set up screen as requested in hash\r\n    const routes = getHashRoutes()\r\n    for (let i = 0; i < routes.length; i += 1) {\r\n      let e = new Event(\"click\", { bubbles: true })\r\n      const target = document.querySelector(`.showtrack[data-id='${routes[i]}']`)\r\n      if (target) {\r\n        target.checked = true\r\n        target.dispatchEvent(e)\r\n      }\r\n    }\r\n    const courses = getHashCourses()\r\n    for (let i = 0; i < courses.length; i += 1) {\r\n      let e = new Event(\"click\", { bubbles: true })\r\n      const target = document.querySelector(`.showcourse[data-courseid='${courses[i]}']`)\r\n      if (target) {\r\n        target.checked = true\r\n        target.dispatchEvent(e)\r\n      }\r\n    }\r\n  }\r\n  document.getElementById(\"rg2-load-progress\").classList.add(\"d-none\")\r\n  redraw()\r\n}\r\n\r\nfunction setDeletionInfo() {\r\n  const eventid = getKartatEventID()\r\n  let deletionInfo = []\r\n  const opt = options.drawnRoutes\r\n  // find routes that can be deleted for this event\r\n  for (let i = 0; i < opt.length; i += 1) {\r\n    if (opt[i].eventid === eventid) {\r\n      deletionInfo.push(opt[i])\r\n    }\r\n  }\r\n  for (let i = 0; i < deletionInfo.length; i += 1) {\r\n    for (let r = 0; r < results.length; r += 1) {\r\n      if (results[r].resultid === deletionInfo[i].id) {\r\n        results[r].canDelete = true\r\n        results[r].token = deletionInfo[i].token\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setDisplayedRunnerCounts() {\r\n  // set number of displayed runners in each course header\r\n  const resultTable = document.getElementById(\"rg2-result-table\")\r\n  const courses = resultTable.querySelectorAll(\"#results-accordion .accordion-item\")\r\n  courses.forEach((course) => {\r\n    const displayedRows = course.querySelectorAll(\".resulttable tbody tr:not(.d-none)\")\r\n    course.querySelector(\".runners-table-course-header\").setAttribute(\"data-runners\", displayedRows.length)\r\n  })\r\n}\r\n\r\nfunction setDisplayOrder() {\r\n  // used to sort results when generating results table for courses with excluded controls\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid < config.GPS_RESULT_OFFSET) {\r\n      // order stays as it was when event was set up\r\n      results[i].displayOrder = i\r\n    } else {\r\n      results[i].displayOrder = getRawDisplayOrder(results[i].rawid)\r\n    }\r\n  }\r\n}\r\n\r\nexport function setResultColour(rawid, trackColour) {\r\n  // colours set by rawid so that all tracks for same runner are same colour\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].rawid === rawid) {\r\n      results[i].userColour = trackColour\r\n      results[i].trackColour = trackColour\r\n    }\r\n  }\r\n}\r\n\r\nfunction setResultsSearch() {\r\n  let searchBox = document.getElementById(\"rg2-result-search\")\r\n  if (results.length === 0) {\r\n    searchBox.classList.add(\"d-none\")\r\n    return\r\n  }\r\n  searchBox.innerHTML = `<form class=\"d-flex pb-2\" role=\"search\">\r\n  <input class=\"form-control mx-2\" type=\"search\" aria-label=\"${t(\"Search\")}\">\r\n  <i class=\"bi-search mx-2\"></i>\r\n  </form>`\r\n  let resultTable = document.getElementById(\"rg2-result-table\")\r\n  searchBox.addEventListener(\"keyup\", (e) => {\r\n    const filter = e.target.value.toUpperCase()\r\n    const rows = resultTable.querySelectorAll(\"tbody tr\")\r\n    // set visibility of all runners based on filter\r\n    for (let i = 0; i < rows.length; i += 1) {\r\n      if (rows[i].innerText.toUpperCase().indexOf(filter) > -1) {\r\n        rows[i].classList.remove(\"d-none\")\r\n      } else {\r\n        rows[i].classList.add(\"d-none\")\r\n      }\r\n    }\r\n    setDisplayedRunnerCounts()\r\n  })\r\n}\r\n\r\nexport function setScoreCourseDisplay(resultid, display) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === resultid) {\r\n      results[i].displayScoreCourse = display\r\n    }\r\n  }\r\n}\r\n\r\nfunction setScoreCourseInfo() {\r\n  // don't get score course info for GPS tracks so find it from original result\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid >= config.GPS_RESULT_OFFSET) {\r\n      const baseresult = getFullResultForRawID(results[i].rawid)\r\n      if (baseresult !== undefined) {\r\n        if (baseresult.scorex !== undefined) {\r\n          results[i].scorex = baseresult.scorex\r\n          results[i].scorey = baseresult.scorey\r\n          results[i].scorecodes = baseresult.scorecodes\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function setTrackDisplayByCourse(courseid, display) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].courseid === courseid || config.DISPLAY_ALL_COURSES === courseid) {\r\n      results[i].setTrackDisplay(display)\r\n    }\r\n  }\r\n  updateTrackNames()\r\n}\r\n\r\nexport function setTrackDisplayByResult(resultid, display) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].resultid === parseInt(resultid, 10)) {\r\n      results[i].setTrackDisplay(display)\r\n    }\r\n  }\r\n  updateTrackNames()\r\n}\r\n\r\nfunction sortByCourseIDThenResultID(a, b) {\r\n  // sorts GPS results to be immediately after the associated main id\r\n  if (a.courseid > b.courseid) {\r\n    return 1\r\n  }\r\n  if (b.courseid > a.courseid) {\r\n    return -1\r\n  }\r\n  // if rawid matches then this is a GPS route for an existing result\r\n  if (a.rawid === b.rawid) {\r\n    return a.resultid - b.resultid\r\n  }\r\n  // we know these are different results\r\n  // now sort by displayOrder to allow handling of excluded controls when results order might change\r\n  // displayOrder defaults to the original results order if nothing is excluded so this works as needed\r\n  // whether controls are excluded or not\r\n  return a.displayOrder - b.displayOrder\r\n}\r\n","import { getDistanceBetweenPoints } from \"./utils\"\r\nimport { config } from \"./config\"\r\nimport { getMetresPerPixel } from \"./events\"\r\nimport { getFullResultforResultID } from \"./results\"\r\nimport { getCourseDetails } from \"./courses\"\r\n\r\nexport class Runner {\r\n  constructor(resultid) {\r\n    const res = getFullResultforResultID(resultid)\r\n    this.name = res.name\r\n    this.initials = res.initials\r\n    // careful: we need the index into results, not the resultid from the text file\r\n    this.resultid = resultid\r\n    this.rawid = res.rawid\r\n    this.starttime = res.starttime\r\n    this.splits = res.splits\r\n    this.trackColour = res.trackColour\r\n    this.userColour = res.userColour\r\n    let course\r\n    if (res.isScoreEvent) {\r\n      course = {}\r\n      course.name = res.coursename\r\n      course.x = res.scorex\r\n      course.y = res.scorey\r\n      course.codes = res.scorecodes\r\n    } else {\r\n      course = getCourseDetails(res.courseid)\r\n    }\r\n    this.coursename = course.name\r\n    // used to stop runners when doing replay by control\r\n    this.nextStopTime = config.VERY_HIGH_TIME_IN_SECS\r\n    // map position x,y indexed by running time in seconds\r\n    this.x = []\r\n    this.y = []\r\n\r\n    // total distance travelled indexed by running time in seconds\r\n    // in metres if georeferenced, otherwise in pixels\r\n    this.cumulativeDistance = []\r\n    this.cumulativeDistance[0] = 0\r\n\r\n    // distance travelled for a leg indexed by control number\r\n    this.legTrackDistance = []\r\n    this.legTrackDistance[0] = 0\r\n\r\n    // total distance travelled at end of leg indexed by control number\r\n    this.cumulativeTrackDistance = []\r\n    this.cumulativeTrackDistance[0] = 0\r\n\r\n    if (res.hasValidTrack) {\r\n      this.expandTrack(res.trackx, res.tracky, res.xysecs)\r\n    } else {\r\n      // no track so use straight line between controls\r\n      this.expandTrack(course.x, course.y, res.splits)\r\n    }\r\n    this.addTrackDistances(course, res)\r\n  }\r\n\r\n  addTrackDistances(course, res) {\r\n    // add track distances for each leg\r\n    const lastPointIndex = this.cumulativeDistance.length - 1\r\n    if (course.codes !== undefined) {\r\n      // if we got no splits then there will just be a finish time\r\n      if (res.splits.length > 1) {\r\n        for (let control = 1; control < course.codes.length; control += 1) {\r\n          // avoid NaN values for GPS tracks that are shorter than the result time\r\n          let ind\r\n          if (res.splits[control] <= lastPointIndex) {\r\n            ind = res.splits[control]\r\n          } else {\r\n            ind = lastPointIndex\r\n          }\r\n          this.cumulativeTrackDistance[control] = this.cumulativeDistance[ind]\r\n          this.legTrackDistance[control] =\r\n            this.cumulativeTrackDistance[control] - this.cumulativeTrackDistance[control - 1]\r\n        }\r\n      } else {\r\n        // allows for tracks at events with no results so no splits: just use start and finish\r\n        this.legTrackDistance[1] = this.cumulativeDistance[lastPointIndex]\r\n        this.cumulativeTrackDistance[1] = this.cumulativeDistance[lastPointIndex]\r\n      }\r\n    }\r\n  }\r\n\r\n  expandTrack(itemsx, itemsy, itemstime) {\r\n    // gets passed arrays of x, y and time\r\n    // iterate over item which will be xy or controls\r\n    let timeatprevitem = 0\r\n    let timeatitem = 0\r\n    let fromx = itemsx[0]\r\n    let fromy = itemsy[0]\r\n    let fromdist = 0\r\n    let dist = 0\r\n    this.x[0] = itemsx[0]\r\n    this.y[0] = itemsy[0]\r\n    let metresPerPixel = getMetresPerPixel()\r\n    if (metresPerPixel === undefined) {\r\n      metresPerPixel = 1\r\n    }\r\n    for (let item = 1; item < itemstime.length; item += 1) {\r\n      let tox = itemsx[item]\r\n      let toy = itemsy[item]\r\n      let diffx = tox - fromx\r\n      let diffy = toy - fromy\r\n      dist = dist + getDistanceBetweenPoints(tox, toy, fromx, fromy) * metresPerPixel\r\n      let diffdist = dist - fromdist\r\n      timeatitem = itemstime[item]\r\n      // allow for 0 splits indicating a missed control\r\n      // just assume a 1 second split for now: probably harmless\r\n      if (timeatitem === 0) {\r\n        timeatitem = timeatprevitem + 1\r\n      }\r\n      let difft = timeatitem - timeatprevitem\r\n      for (let t = timeatprevitem + 1; t < timeatitem; t += 1) {\r\n        this.x[t] = Math.round(fromx + ((t - timeatprevitem) * diffx) / difft)\r\n        this.y[t] = Math.round(fromy + ((t - timeatprevitem) * diffy) / difft)\r\n        this.cumulativeDistance[t] = Math.round(fromdist + ((t - timeatprevitem) * diffdist) / difft)\r\n      }\r\n      this.x[timeatitem] = tox\r\n      this.y[timeatitem] = toy\r\n      this.cumulativeDistance[timeatitem] = Math.round(dist)\r\n      fromx = tox\r\n      fromy = toy\r\n      fromdist = dist\r\n      timeatprevitem = timeatitem\r\n    }\r\n  }\r\n}\r\n","import * as bootstrap from \"bootstrap\"\r\nimport { config } from \"./config\"\r\nimport { getCourseDetails, getCourses } from \"./courses\"\r\nimport { eventHasResults, isScoreEvent } from \"./events\"\r\nimport { getAllResultsForCourse, getAllResultsForVariant, getFullResultForRawID } from \"./results\"\r\nimport { t } from \"./translate\"\r\nimport { formatSecsAsMMSS, showWarningDialog } from \"./utils\"\r\n\r\nconst tabs = [\r\n  { id: \"rg2-stats-summary\", title: \"Summary\", active: \"true\" },\r\n  { id: \"rg2-legs\", title: \"Leg times\" },\r\n  { id: \"rg2-cumulative\", title: \"Cumulative times\" },\r\n  { id: \"rg2-split-times\", title: \"Split times\" },\r\n  { id: \"rg2-time-loss\", title: \"Time loss\" }\r\n]\r\n\r\nconst content = [\r\n  `<div id=\"rg2-stats-summary\" class=\"container\"></div><div style=\"height: 400px;\"><canvas id=\"rg2-splits-chart\"></canvas></div>`,\r\n  `<div id=\"rg2-leg-table\" style=\"width: 950px; height: 100%\" class=\"ag-theme-balham\"></div>`,\r\n  `<div id=\"rg2-race-table\" style=\"width: 950px; height: 100%;\" class=\"ag-theme-balham\"></div>`,\r\n  `<div id=\"rg2-results-table\" class=\"rg2-results-table-container\">\r\n     <div id=\"rg2-results-grid-wrapper\">\r\n       <div id=\"rg2-results-grid\" style=\"height: 100%\" class=\"ag-theme-balham\"></div>\r\n     </div>\r\n   </div>`,\r\n  `<div id=\"rg2-time-loss\" class=\"container\">\r\n     <div class=\"d-flex align-items-center justify-content-between\">\r\n       <div class=\"d-flex align-items-center\">\r\n         <div id=\"rg2-control-change\" class=\"pe-4\">\r\n           <button id=\"rg2-stats-control-back\" class=\"btn btn-outline-primary btn-sm p-2\">&lt;</button>\r\n           <button id=\"rg2-stats-control-forward\" class=\"btn btn-outline-primary btn-sm p-2\">&gt;</button>\r\n         </div>\r\n         <div id=\"rg2-control-number\" class=\"fw-bold pe-2\"></div>\r\n       </div>\r\n       <div id=\"rg2-loss-details\" class=\"d-flex justify-content-center\"></div>\r\n     </div>\r\n     <canvas id=\"rg2-loss-chart\"></canvas>\r\n   </div>`\r\n]\r\n\r\nlet result = null\r\nlet rawid = null\r\nlet results = []\r\nlet isScoreOrRelay = false\r\nlet course = null\r\nlet controls = 0\r\nlet byLegPos = []\r\nlet byRacePos = []\r\nlet resultIndex = null\r\nlet splitsChart = undefined\r\nlet legChart = undefined\r\nlet activeLeg = 1\r\nlet maxIterationIndex = 9\r\n// starting iteration to use for display\r\nlet iterationIndex = 2\r\n// value returned as event.target.dataset.bsTarget for click on tab header\r\nconst startTab = \"#rg2-stats-summary-tab-label\"\r\nlet activeTab = startTab\r\n// Chart functionality dynamicaly loaded when needed\r\nlet Chart = null\r\n\r\nfunction adjustSplits() {\r\n  // adjust splits for events with excluded controls that have uploaded unadjusted splits\r\n  // total times were adjusted when results were saved initially\r\n  if (course.excludeType === config.EXCLUDED_REAL_SPLITS) {\r\n    for (let i = 0; i < results.length; i += 1) {\r\n      let excluded = 0\r\n      // start at 1 since you can't exclude the start control\r\n      for (let j = 1; j < course.exclude.length; j += 1) {\r\n        if (course.exclude[j]) {\r\n          const newExclude = Math.min(results[i].splits[j] - results[i].splits[j - 1] - excluded, course.allowed[j])\r\n          excluded = excluded + newExclude\r\n        }\r\n        results[i].splits[j] = results[i].splits[j] - excluded\r\n        results[i].legSplits[j] = results[i].splits[j] - results[i].splits[j - 1]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction calculateLostTimeForIteration(iter) {\r\n  // find predicted times and losses\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (iter === 0) {\r\n      results[i].predictedSplits = []\r\n      results[i].loss = []\r\n      results[i].totalLoss = []\r\n    }\r\n    results[i].predictedSplits[iter] = []\r\n    results[i].predictedSplits[iter][0] = 0\r\n    results[i].loss[iter] = []\r\n    results[i].loss[iter][0] = 0\r\n    let loss = 0\r\n    for (let k = 0; k < controls; k += 1) {\r\n      if (results[i].performanceIndex[iter] > 0) {\r\n        results[i].predictedSplits[iter][k] = parseInt(\r\n          course.refLegTime[iter][k] / results[i].normalPerformanceIndex[iter],\r\n          10\r\n        )\r\n      } else {\r\n        results[i].predictedSplits[iter][k] = results[i].legSplits[k]\r\n      }\r\n      results[i].loss[iter][k] = results[i].legSplits[k] - results[i].predictedSplits[iter][k]\r\n      if (results[i].loss[iter][k] < 0) {\r\n        results[i].loss[iter][k] = 0\r\n      }\r\n      loss = loss + results[i].loss[iter][k]\r\n    }\r\n    results[i].totalLoss[iter] = loss\r\n  }\r\n}\r\n\r\nfunction calculatePerformanceForIteration(iter) {\r\n  // find reference times for each leg\r\n  if (iter === 0) {\r\n    course.refLegTime = []\r\n    course.refTime = []\r\n  }\r\n  let times = []\r\n  let refTimes = []\r\n  for (let i = 0; i < controls; i += 1) {\r\n    times.length = 0\r\n    if (!course.exclude[i]) {\r\n      for (let k = 0; k < results.length; k += 1) {\r\n        if (results[k].iterSplits[iter][i] !== 0) {\r\n          times.push(results[k].iterSplits[iter][i])\r\n        }\r\n      }\r\n    }\r\n    // using median of best 25% of times (minimum of 3) for the leg\r\n    const averages = getAverages(times, 25)\r\n    refTimes.push(averages.median)\r\n  }\r\n  course.refLegTime[iter] = refTimes.slice(0)\r\n  course.refTime[iter] = refTimes.reduce((a, b) => a + b)\r\n  // find ratio to reference times\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (iter === 0) {\r\n      results[i].refRatio = []\r\n      results[i].performanceIndex = []\r\n      results[i].normalPerformanceIndex = []\r\n      results[i].totalSecs = []\r\n    }\r\n    results[i].refRatio[iter] = []\r\n    const ratios = []\r\n    for (let k = 0; k < controls; k += 1) {\r\n      if (results[i].iterSplits[iter][k] === 0) {\r\n        results[i].refRatio[iter][k] = 0\r\n      } else {\r\n        results[i].refRatio[iter][k] = course.refLegTime[iter][k] / results[i].iterSplits[iter][k]\r\n      }\r\n      ratios.push(results[i].refRatio[iter][k])\r\n    }\r\n    const nonZeroRatios = ratios.filter((ratio) => ratio > 0)\r\n    const averages = getAverages(nonZeroRatios, 100)\r\n    results[i].performanceIndex[iter] = averages.median\r\n    results[i].totalSecs[iter] = results[i].iterSplits[iter].reduce((a, b) => a + b)\r\n\r\n    // normal PI weighted by ref times\r\n    let sum = 0\r\n    let weight = 0\r\n    for (let k = 0; k < controls; k += 1) {\r\n      if (results[i].iterSplits[iter][k] !== 0) {\r\n        sum = sum + results[i].refRatio[iter][k] * course.refLegTime[iter][k]\r\n        weight = weight + course.refLegTime[iter][k]\r\n      }\r\n    }\r\n    if (sum === 0) {\r\n      results[i].normalPerformanceIndex[iter] = 0\r\n    } else {\r\n      results[i].normalPerformanceIndex[iter] = sum / weight\r\n    }\r\n  }\r\n}\r\nfunction calculateSplitsforIteration(iter) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (iter === 0) {\r\n      results[i].iterSplits = []\r\n    }\r\n    let splits = []\r\n    for (let k = 0; k < controls; k += 1) {\r\n      if (iter === 0) {\r\n        splits.push(results[i].legSplits[k])\r\n      } else {\r\n        splits.push(results[i].predictedSplits[iter - 1][k])\r\n      }\r\n    }\r\n    results[i].iterSplits[iter] = splits.slice(0)\r\n  }\r\n}\r\n\r\nfunction changeControlNumberDown() {\r\n  activeLeg = activeLeg === result.splits.length - 1 ? 1 : activeLeg + 1\r\n  drawLegChart()\r\n}\r\n\r\nfunction changeControlNumberUp() {\r\n  activeLeg = activeLeg > 1 ? activeLeg - 1 : result.splits.length - 1\r\n  drawLegChart()\r\n}\r\n\r\nfunction changeCourse(direction) {\r\n  // aim is to switch course and start with first runner on that course\r\n  // stay where we are if anything goes wrong\r\n  let rawid = results[resultIndex].rawid\r\n  // slight concern this might be a mess for some events\r\n  // courses is a sparse array with no entry [0] to start with\r\n  try {\r\n    const courses = getCourses()\r\n    let index = courses.findIndex((row) => {\r\n      if (!row) return false\r\n      return row.courseid === course.courseid\r\n    })\r\n    if (direction < 0) {\r\n      index = index === courses.length - 1 ? 1 : index + 1\r\n    } else {\r\n      index = index > 1 ? index - 1 : courses.length - 1\r\n    }\r\n    const courseid = courses[index].courseid\r\n    const results = getAllResultsForCourse(courseid)\r\n    if (results.length > 0) {\r\n      rawid = results[0].rawid\r\n    }\r\n  } catch (err) {\r\n    console.log(\"Error switching to new course: \" + err)\r\n  }\r\n  prepareStats(rawid)\r\n}\r\n\r\nfunction changeName(direction) {\r\n  if (direction < 0) {\r\n    resultIndex = resultIndex === results.length - 1 ? 0 : resultIndex + 1\r\n  } else {\r\n    resultIndex = resultIndex > 0 ? resultIndex - 1 : results.length - 1\r\n  }\r\n  prepareStats(results[resultIndex].rawid)\r\n}\r\n\r\nfunction displayControlDetails(stacks) {\r\n  let control = \"\"\r\n  let leg = \"\"\r\n  if (result.splits.length - 1 === activeLeg) {\r\n    control = t(\"Finish\")\r\n  } else {\r\n    control = t(\"Control\")\r\n    leg = \": \" + activeLeg\r\n  }\r\n  let html = `<div>${control}${leg}</div>`\r\n  document.getElementById(\"rg2-control-number\").innerHTML = html\r\n\r\n  html = \"\"\r\n  if (course.exclude[activeLeg]) {\r\n    html = t(\"Control excluded\", \"\")\r\n  } else {\r\n    const losses = stacks.filter((stack) => stack.loss > 0).map((stack) => stack.loss)\r\n    const averages = getAverages(losses, 100)\r\n    html = `<div class=\"px-2 fw-bold\">${t(\"Runners with loss\")}: ${averages.count}</div >`\r\n    html += `<div class=\"px-2 fw-bold\">${t(\"Average\")}: ${parseInt(averages.mean, 10)}s (${\r\n      parseInt((averages.mean * 1000) / course.refLegTime[iterationIndex][activeLeg], 10) / 10\r\n    }%)</div>`\r\n    html += `<div class=\"px-2 fw-bold\">${t(\"Median\")}: ${averages.median}s (${\r\n      parseInt((averages.median * 1000) / course.refLegTime[iterationIndex][activeLeg], 10) / 10\r\n    }%)</div>`\r\n  }\r\n  document.getElementById(\"rg2-loss-details\").innerHTML = html\r\n}\r\n\r\nfunction displayStats() {\r\n  document.getElementById(\"rg2-stats-panel-tab-headers\").addEventListener(\"show.bs.tab\", (e) => {\r\n    handleTabActivation(e.target)\r\n  })\r\n\r\n  const nameBack = document.getElementsByClassName(\"rg2-stats-name-back\")\r\n  for (let row of nameBack) {\r\n    row.addEventListener(\"click\", () => {\r\n      changeName(1)\r\n    })\r\n  }\r\n  const nameForward = document.getElementsByClassName(\"rg2-stats-name-forward\")\r\n  for (let row of nameForward) {\r\n    row.addEventListener(\"click\", () => {\r\n      changeName(-1)\r\n    })\r\n  }\r\n\r\n  const courseBack = document.getElementsByClassName(\"rg2-stats-course-back\")\r\n  for (let row of courseBack) {\r\n    row.addEventListener(\"click\", () => {\r\n      changeCourse(1)\r\n    })\r\n  }\r\n  const courseForward = document.getElementsByClassName(\"rg2-stats-course-forward\")\r\n  for (let row of courseForward) {\r\n    row.addEventListener(\"click\", () => {\r\n      changeCourse(-1)\r\n    })\r\n  }\r\n\r\n  document.getElementById(\"rg2-stats-control-back\").addEventListener(\"click\", changeControlNumberUp)\r\n  document.getElementById(\"rg2-stats-control-forward\").addEventListener(\"click\", changeControlNumberDown)\r\n\r\n  // start on active tab: need to remove # which Bootstrap adds for some reason\r\n  document.getElementById(activeTab.replace(\"#\", \"\")).click()\r\n}\r\n\r\nfunction drawLegChart() {\r\n  if (legChart !== undefined) {\r\n    legChart.destroy()\r\n    legChart = undefined\r\n  }\r\n  const ctx = document.getElementById(\"rg2-loss-chart\")\r\n  const getBackgroundColor = (context) => {\r\n    if (stacks.length === 0) {\r\n      return config.DARK_GREEN_30\r\n    }\r\n    return stacks[context.dataIndex].activeRunner ? config.DARK_GREEN : config.DARK_GREEN_30\r\n  }\r\n  const getBackgroundLossColor = (context) => {\r\n    if (stacks.length === 0) {\r\n      return config.RED_30\r\n    }\r\n    return stacks[context.dataIndex].activeRunner ? config.RED : config.RED_30\r\n  }\r\n  const getBackgroundGainColor = (context) => {\r\n    if (stacks.length === 0) {\r\n      return config.BLUE_30\r\n    }\r\n    return stacks[context.dataIndex].activeRunner ? config.BLUE : config.BLUE_30\r\n  }\r\n  const getBackgroundPredictedColor = (context) => {\r\n    if (stacks.length === 0) {\r\n      return config.PURPLE_30\r\n    }\r\n    return stacks[context.dataIndex].activeRunner ? config.PURPLE : config.PURPLE_30\r\n  }\r\n\r\n  const stacks = []\r\n  if (!course.exclude[activeLeg]) {\r\n    results.map((res) => {\r\n      // only add runners with valid split for this control\r\n      if (parseInt(res.legSplits[activeLeg], 10) > 0) {\r\n        let stack = {}\r\n        // either plot predicted + loss (= actual) or actual + gain (= predicted)\r\n        const loss = parseInt(res.loss[iterationIndex][activeLeg], 10)\r\n        const predicted = parseInt(res.predictedSplits[iterationIndex][activeLeg], 10)\r\n        const actual = parseInt(res.legSplits[activeLeg], 10)\r\n        stack.loss = loss\r\n        stack.predicted = loss === 0 ? 0 : predicted\r\n        stack.rawPredicted = predicted\r\n        stack.actual = actual <= predicted ? actual : 0\r\n        stack.gain = actual <= predicted ? predicted - actual : 0\r\n        stack.realSplit = actual\r\n        stack.pos = res.legpos[activeLeg]\r\n        stack.name = res.name\r\n        if (res.rawid === rawid) {\r\n          stack.activeRunner = true\r\n        }\r\n        stacks.push(stack)\r\n      }\r\n    })\r\n  }\r\n  stacks.sort((a, b) => a.realSplit - b.realSplit)\r\n  const predicted = stacks.map((res) => res.predicted)\r\n  const actuals = stacks.map((res) => res.actual)\r\n  const losses = stacks.map((res) => res.loss)\r\n  const gains = stacks.map((res) => res.gain)\r\n  const labels = stacks.map((res) => res.pos)\r\n  const refTime = stacks.map(() => course.refLegTime[iterationIndex][activeLeg])\r\n  const worst = results.reduce((worst, res) => Math.max(worst, res.legSplits[activeLeg]), 0)\r\n  // fit y-axis to nearest higher multiple of x seconds\r\n  const scaleBase = 120\r\n  const timeMax = parseInt((worst + scaleBase - 1) / scaleBase, 10) * scaleBase\r\n  displayControlDetails(stacks)\r\n  legChart = new Chart(ctx, {\r\n    data: {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: \"Actual\",\r\n          type: \"bar\",\r\n          data: actuals,\r\n          backgroundColor: getBackgroundColor\r\n        },\r\n        {\r\n          label: \"Gain\",\r\n          type: \"bar\",\r\n          data: gains,\r\n          yAxisID: \"yLoss\",\r\n          backgroundColor: getBackgroundGainColor\r\n        },\r\n        {\r\n          label: \"Predicted\",\r\n          type: \"bar\",\r\n          data: predicted,\r\n          yAxisID: \"yLoss\",\r\n          backgroundColor: getBackgroundPredictedColor\r\n        },\r\n        {\r\n          label: \"Loss\",\r\n          type: \"bar\",\r\n          data: losses,\r\n          yAxisID: \"yLoss\",\r\n          backgroundColor: getBackgroundLossColor\r\n        },\r\n        {\r\n          label: \"Reference time\",\r\n          type: \"line\",\r\n          data: refTime,\r\n          borderColor: config.RED,\r\n          backgroundColor: config.WHITE,\r\n          borderDash: [5, 5],\r\n          yAxisID: \"yLoss\",\r\n          pointStyle: \"circle\",\r\n          pointRadius: 0,\r\n          pointHoverRadius: 0\r\n        }\r\n      ]\r\n    },\r\n    options: {\r\n      scales: {\r\n        x: {\r\n          stacked: true,\r\n          title: {\r\n            display: true,\r\n            text: \"Position\"\r\n          }\r\n        },\r\n        yLoss: {\r\n          stacked: true,\r\n          min: 0,\r\n          max: timeMax,\r\n          title: {\r\n            display: true,\r\n            text: \"Time (s)\"\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        tooltip: {\r\n          callbacks: {\r\n            label(context) {\r\n              let label = context.dataset.label + \": \"\r\n              if (context.dataset.label === \"Loss\") {\r\n                label += formatSecsAsMMSS(stacks[context.dataIndex].loss)\r\n              } else {\r\n                if (context.dataset.label === \"Gain\") {\r\n                  label += formatSecsAsMMSS(stacks[context.dataIndex].gain)\r\n                } else {\r\n                  if (context.dataset.label === \"Actual\") {\r\n                    label += formatSecsAsMMSS(stacks[context.dataIndex].actual)\r\n                  } else {\r\n                    label += formatSecsAsMMSS(stacks[context.dataIndex].predicted)\r\n                  }\r\n                }\r\n              }\r\n              return label\r\n            },\r\n            title(context) {\r\n              const title =\r\n                stacks[context[0].dataIndex].name + \": \" + formatSecsAsMMSS(stacks[context[0].dataIndex].realSplit)\r\n              return title\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })\r\n  const legChartElement = document.querySelector(\"#rg2-loss-chart\")\r\n  legChartElement.onwheel = (e) => {\r\n    e.preventDefault()\r\n    e.deltaY < 0 ? changeControlNumberDown() : changeControlNumberUp()\r\n  }\r\n}\r\n\r\nfunction generateLegChart() {\r\n  activeLeg = 1\r\n  drawLegChart()\r\n}\r\n\r\nfunction generateLegPositions() {\r\n  let pos = []\r\n  // two very similar bits of code: scope to rationalise...\r\n  // Generate positions for each leg\r\n  // start at 1 since 0 is time 0\r\n  for (let k = 1; k < course.codes.length; k += 1) {\r\n    pos.length = 0\r\n    for (let j = 0; j < results.length; j += 1) {\r\n      if (results[j].resultid === results[j].rawid) {\r\n        if (results[j].isScoreEvent) {\r\n          if (results[j].variant === course.courseid) {\r\n            pos.push({ time: results[j].legSplits[k], id: j })\r\n          }\r\n        } else {\r\n          if (results[j].courseid === course.courseid) {\r\n            pos.push({ time: results[j].legSplits[k], id: j })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 0 splits sorted to end\r\n    pos.sort(sortLegTimes)\r\n    let prevPos = 0\r\n    let prevTime = 0\r\n    // set positions\r\n    for (let j = 0; j < pos.length; j += 1) {\r\n      if (course.exclude[k]) {\r\n        results[pos[j].id].legpos[k] = 0\r\n        continue\r\n      }\r\n      if (pos[j].time !== prevTime) {\r\n        if (pos[j].time === 0) {\r\n          // all missing splits sorted to end with time 0\r\n          results[pos[j].id].legpos[k] = 0\r\n          prevTime = 0\r\n          prevPos = 0\r\n        } else {\r\n          // new time so position increments\r\n          results[pos[j].id].legpos[k] = j + 1\r\n          prevTime = pos[j].time\r\n          prevPos = j + 1\r\n        }\r\n      } else {\r\n        // same time so use same position\r\n        results[pos[j].id].legpos[k] = prevPos\r\n      }\r\n    }\r\n  }\r\n\r\n  // Generate positions for cumulative time at each control\r\n  pos.length = 0\r\n\r\n  // start at 1 since 0 is time 0\r\n  for (let k = 1; k < course.codes.length; k += 1) {\r\n    pos.length = 0\r\n    let time = 0\r\n    for (let j = 0; j < results.length; j += 1) {\r\n      if (results[j].resultid === results[j].rawid) {\r\n        if (results[j].isScoreEvent) {\r\n          if (results[j].variant === course.courseid) {\r\n            if (k > results[j].lastValidSplit) {\r\n              time = 0\r\n            } else {\r\n              time = results[j].splits[k]\r\n            }\r\n            pos.push({ time: time, id: j })\r\n          }\r\n        } else {\r\n          if (results[j].courseid === course.courseid) {\r\n            if (k > results[j].lastValidSplit) {\r\n              time = 0\r\n            } else {\r\n              time = results[j].splits[k]\r\n            }\r\n            pos.push({ time: time, id: j })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // 0 splits sorted to end\r\n    pos.sort(sortLegTimes)\r\n    let prevPos = 0\r\n    let prevTime = 0\r\n    for (let j = 0; j < pos.length; j += 1) {\r\n      if (pos[j].time !== prevTime) {\r\n        if (pos[j].time === 0) {\r\n          results[pos[j].id].racepos[k] = 0\r\n          prevPos = 0\r\n          prevTime = 0\r\n        } else {\r\n          // new time so position increments\r\n          results[pos[j].id].racepos[k] = j + 1\r\n          prevTime = pos[j].time\r\n          prevPos = j + 1\r\n        }\r\n      } else {\r\n        // same time so use same position\r\n        results[pos[j].id].racepos[k] = prevPos\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction generateSplitsChart() {\r\n  if (splitsChart !== undefined) {\r\n    splitsChart.destroy()\r\n    splitsChart = undefined\r\n  }\r\n  const skipped = (ctx, value) => (ctx.p0.skip || ctx.p1.skip ? value : undefined)\r\n  const ctx = document.getElementById(\"rg2-splits-chart\")\r\n  const res = results[resultIndex]\r\n  const labels = res.legpos.map((val, idx, array) => (idx === array.length - 1 ? \"F\" : idx))\r\n  const info = getLegPosInfo()\r\n  const legPos = res.legpos.map((val) => (val === 0 ? NaN : val))\r\n  const losses = res.loss[iterationIndex].map((val, idx) => (res.legpos[idx] === 0 ? NaN : val))\r\n  const gains = res.predictedSplits[iterationIndex].map((pred, idx) =>\r\n    res.legpos[idx] === 0 ? NaN : pred > res.legSplits[idx] ? pred - res.legSplits[idx] : 0\r\n  )\r\n  const averageLegPos = res.legpos.map(() => info.average)\r\n  const worst = losses.reduce((worst, loss) => Math.max(worst, isNaN(loss) ? 0 : loss), 0)\r\n  const best = gains.reduce((best, gain) => Math.max(best, isNaN(gain) ? 0 : gain), 0)\r\n  // fit y-axis (loss) to nearest higher multiple of x seconds\r\n  const scaleBase = 120\r\n  const lossGainMax = parseInt((Math.max(worst, best) + scaleBase - 1) / scaleBase, 10) * scaleBase\r\n  splitsChart = new Chart(ctx, {\r\n    data: {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: \"Leg position\",\r\n          type: \"line\",\r\n          data: legPos,\r\n          borderColor: config.PURPLE,\r\n          backgroundColor: config.PURPLE_30,\r\n          yAxisID: \"yPosition\",\r\n          segment: {\r\n            borderColor: (ctx) => skipped(ctx, \"rgb(0,0,0,0.2)\"),\r\n            borderDash: (ctx) => skipped(ctx, [6, 6])\r\n          },\r\n          spanGaps: true\r\n        },\r\n        {\r\n          label: \"Average leg position\",\r\n          type: \"line\",\r\n          data: averageLegPos,\r\n          borderColor: config.RED,\r\n          backgroundColor: config.WHITE,\r\n          borderDash: [5, 5],\r\n          yAxisID: \"yPosition\",\r\n          pointStyle: \"circle\",\r\n          pointRadius: 0,\r\n          pointHoverRadius: 0\r\n        },\r\n        {\r\n          label: \"Time loss\",\r\n          type: \"bar\",\r\n          data: losses,\r\n          borderColor: config.RED,\r\n          backgroundColor: config.RED_30,\r\n          yAxisID: \"yLoss\",\r\n          segment: {\r\n            borderColor: (ctx) => skipped(ctx, \"rgb(0,0,0,0.2)\"),\r\n            borderDash: (ctx) => skipped(ctx, [6, 6])\r\n          }\r\n        },\r\n        {\r\n          label: \"Time gain\",\r\n          type: \"bar\",\r\n          data: gains,\r\n          borderColor: config.BLUE,\r\n          backgroundColor: config.BLUE_30,\r\n          yAxisID: \"yLoss\",\r\n          segment: {\r\n            borderColor: (ctx) => skipped(ctx, \"rgb(0,0,0,0.2)\"),\r\n            borderDash: (ctx) => skipped(ctx, [6, 6])\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    options: {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      scales: {\r\n        x: {\r\n          min: 1,\r\n          title: {\r\n            display: true,\r\n            text: t(\"Control\", \"\")\r\n          },\r\n          stacked: true\r\n        },\r\n        yPosition: {\r\n          type: \"linear\",\r\n          display: true,\r\n          position: \"left\",\r\n          min: 0,\r\n          max: parseInt((results.length + 9) / 10, 10) * 10,\r\n          title: {\r\n            display: true,\r\n            text: \"Leg position\"\r\n          }\r\n        },\r\n        yLoss: {\r\n          type: \"linear\",\r\n          display: true,\r\n          position: \"right\",\r\n          min: 0,\r\n          max: lossGainMax,\r\n          grid: {\r\n            drawOnChartArea: false\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: \"Time gain/loss (s)\"\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        tooltip: {\r\n          callbacks: {\r\n            label: function (context) {\r\n              if (context.dataset.label === \"Time loss\") {\r\n                return \"Loss: \" + formatSecsAsMMSS(losses[context.dataIndex])\r\n              }\r\n              if (context.dataset.label === \"Time gain\") {\r\n                return \"Gain: \" + formatSecsAsMMSS(gains[context.dataIndex])\r\n              }\r\n              if (context.dataset.label === \"Leg position\") {\r\n                return \"Position: \" + legPos[context.dataIndex]\r\n              }\r\n              return \"\"\r\n            },\r\n            title: function (context) {\r\n              if (context[0].label === \"F\") {\r\n                return t(\"Finish\", \"\")\r\n              }\r\n              return t(\"Control\", \"\") + \" \" + context[0].label\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })\r\n  const splitsChartElem = document.querySelector(\"#rg2-splits-chart\")\r\n  splitsChartElem.onwheel = (event) => {\r\n    event.preventDefault()\r\n    event.deltaY < 0 ? changeName(-1) : changeName(1)\r\n  }\r\n}\r\n\r\nfunction generateSplitsTable() {\r\n  const columnDefs = [\r\n    {\r\n      headerName: t(\"Pos\", \"\"),\r\n      field: \"position\",\r\n      cellDataType: \"text\",\r\n      width: 60,\r\n      pinned: \"left\",\r\n      sortable: true\r\n    },\r\n    {\r\n      headerName: t(\"Name\", \"\"),\r\n      field: \"name\",\r\n      cellDataType: \"text\",\r\n      headerClass: \"align-left\",\r\n      cellClass: \"align-left\",\r\n      width: 150,\r\n      pinned: \"left\"\r\n    },\r\n    { headerName: t(\"Time\", \"\"), field: \"time\", cellDataType: \"text\", width: 85 }\r\n  ]\r\n  for (let j = 1; j < controls - 1; j += 1) {\r\n    columnDefs.push({\r\n      headerName: j + \" (\" + course.codes[j] + \")\",\r\n      field: \"C\" + j,\r\n      cellDataType: \"text\",\r\n      cellRenderer: renderSplits,\r\n      width: 110\r\n    })\r\n  }\r\n  columnDefs.push({\r\n    headerName: t(\"F\", \"\"),\r\n    field: \"finish\",\r\n    cellDataType: \"text\",\r\n    cellRenderer: renderSplits,\r\n    width: 110\r\n  })\r\n  columnDefs.push({ headerName: t(\"Loss\", \"\"), field: \"loss\", cellDataType: \"text\", width: 100 })\r\n  columnDefs.push({\r\n    headerName: t(\"Performance\", \"\"),\r\n    field: \"performance\",\r\n    cellDataType: \"text\",\r\n    width: 100\r\n  })\r\n  columnDefs.push({\r\n    headerName: t(\"Consistency\", \"\"),\r\n    field: \"consistency\",\r\n    cellDataType: \"text\",\r\n    width: 100\r\n  })\r\n\r\n  let rowData = []\r\n  // sort results table: this gets round problems of having multiple classes on one course where results were by class\r\n  results.sort(function (a, b) {\r\n    // sort valid times in ascending order\r\n    // sometimes end up with negative or 0 splits so handle those first\r\n    if (a.racepos[a.splits.length - 1] <= 0) {\r\n      return 1\r\n    } else {\r\n      if (b.racepos[b.splits.length - 1] <= 0) {\r\n        return -1\r\n      } else {\r\n        return a.racepos[a.splits.length - 1] - b.racepos[b.splits.length - 1]\r\n      }\r\n    }\r\n  })\r\n  // need to reset index for active result since array has been sorted\r\n  resultIndex = setResultIndex(rawid)\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    let row = {}\r\n    const r = results[i]\r\n    if (r.racepos[controls - 1] == 0) {\r\n      row.position = \"\"\r\n    } else {\r\n      row.position = r.racepos[controls - 1]\r\n    }\r\n    row.name = r.name\r\n    row.time = r.time\r\n    for (let j = 1; j < controls - 1; j += 1) {\r\n      if (r.splits[j] === r.splits[j - 1]) {\r\n        // no valid split for this control\r\n        row[\"C\" + j] = { split: \"0:00\", pos: r.racepos[j], loss: false }\r\n      } else {\r\n        row[\"C\" + j] = {\r\n          split: formatSecsAsMMSS(r.splits[j]),\r\n          pos: r.racepos[j],\r\n          loss: false\r\n        }\r\n      }\r\n    }\r\n    row.finish = {\r\n      split: formatSecsAsMMSS(r.splits[controls - 1]),\r\n      pos: r.racepos[controls - 1]\r\n    }\r\n    row.loss = formatSecsAsMMSS(r.timeInSecs - r.totalLoss[iterationIndex])\r\n    row.performance = (r.performanceIndex[0] * 100).toFixed(1)\r\n    // discard all 0 entries which relate to missed controls\r\n    const ratios = r.refRatio[0].filter((ratio) => ratio > 0)\r\n    row.consistency = (100 * getStandardDeviation(ratios)).toFixed(1)\r\n    rowData.push(row)\r\n    row = {}\r\n    for (let j = 1; j < controls - 1; j += 1) {\r\n      // highlight predicted losses greater than 20 seconds\r\n      row[\"C\" + j] = {\r\n        split: formatSecsAsMMSS(r.legSplits[j]),\r\n        pos: r.legpos[j],\r\n        loss: r.loss[iterationIndex][j] > 19\r\n      }\r\n    }\r\n    row.finish = {\r\n      split: formatSecsAsMMSS(r.legSplits[controls - 1]),\r\n      pos: r.legpos[controls - 1],\r\n      loss: r.loss[iterationIndex][controls - 1] > 19\r\n    }\r\n    row.loss = formatSecsAsMMSS(r.totalLoss[iterationIndex])\r\n    rowData.push(row)\r\n  }\r\n\r\n  const gridOptions = {\r\n    columnDefs: columnDefs,\r\n    rowData: rowData,\r\n    defaultColDef: {\r\n      headerClass: \"align-center\",\r\n      cellClass: \"align-center\"\r\n    }\r\n  }\r\n\r\n  // can't get ag-grid examples to work in terms of height adjustment so this is\r\n  // the quick and dirty fix: 120 is content/padding/margin etc. for everything else in the dialog\r\n  const height = document.getElementById(\"rg2-map-canvas\").height * 0.98 - 120\r\n  const wrapper = document.getElementById(\"rg2-results-grid-wrapper\")\r\n  wrapper.removeAttribute(\"style\")\r\n  wrapper.setAttribute(\"style\", \"height: \" + height + \"px;\")\r\n  const table = document.getElementById(\"rg2-results-grid\")\r\n  table.innerHTML = \"\"\r\n  rg2Config.createGrid(table, gridOptions)\r\n}\r\n\r\nfunction generateSummary() {\r\n  const info = getLegPosInfo()\r\n  const packRow = (elem) => {\r\n    return `${elem}`\r\n  }\r\n  const nameButtons = `<div class=\"rg2-stats-runner-change pe-4\">\r\n      <button class=\"rg2-stats-name-back btn btn-outline-primary btn-sm p-2\">\r\n        &lt;\r\n      </button>\r\n      <button class=\"rg2-stats-name-forward btn btn-outline-primary btn-sm p-2\">\r\n        &gt;\r\n      </button>\r\n    </div >`\r\n\r\n  const courseButtons = `<div class=\"rg2-stats-course-change pe-4\">\r\n      <button class=\"rg2-stats-course-back btn btn-outline-primary btn-sm p-2\">\r\n        &lt;\r\n      </button>\r\n      <button class=\"rg2-stats-course-forward btn btn-outline-primary btn-sm p-2\">\r\n        &gt;\r\n      </button>\r\n    </div >`\r\n\r\n  let html = packRow(`<div class=\"d-flex align-items-center justify-content-between pb-4\">`)\r\n  html += packRow(`<div class=\"d-flex align-items-center\">`)\r\n  html += packRow(`${nameButtons}`)\r\n  html += packRow(`<div class=\"fw-bold pe-4\">${result.name}</div>`)\r\n  html += packRow(`<div class=\"fw-bold pe-4\">${result.time}</div>`)\r\n  html += packRow(`<div class=\"fw-bold pe-4\">(${results[resultIndex].racepos[controls - 1]}/${results.length})</div>`)\r\n  let loss = \"\"\r\n  if (isNumberOverZero(result.timeInSecs)) {\r\n    loss = ` (${((100 * results[resultIndex].totalLoss[iterationIndex]) / result.timeInSecs).toFixed(1)}%)`\r\n  }\r\n  html += packRow(\r\n    `<div class=\"fw-bold pe-4\">${t(\"Estimated loss\")}: ${formatSecsAsMMSS(results[resultIndex].totalLoss[iterationIndex])}${loss}</div>`\r\n  )\r\n  html += packRow(`</div>`)\r\n  html += packRow(`<div class=\"d-flex align-items-center\">`)\r\n  html += packRow(`<div class=\"fw-bold pe-4\">${result.coursename}</div><div>${courseButtons}</div>`)\r\n  html += packRow(`</div></div>`)\r\n  // put title row at top of each tab\r\n  const titles = document.getElementsByClassName(\"rg2-stats-title-row\")\r\n  for (let title of titles) {\r\n    title.innerHTML = html\r\n  }\r\n\r\n  html = `<div class=\"d-flex align-items-center\">`\r\n  html += packRow(\r\n    `<div class=\"fw-bold pe-4\">${t(\"Average leg position\")}: ${info.average} (${t(\"Best\", \"\")}: ${info.best}, ${t(\"Worst\")}: ${\r\n      info.worst\r\n    })</div >`\r\n  )\r\n\r\n  // performanceIndex[0] is based on actual splits\r\n  html += packRow(\r\n    `<div  class=\"fw-bold pe-4\">${t(\"Performance\")} ${(result.performanceIndex[0] * 100).toFixed(1)}%</div>`\r\n  )\r\n  // discard all 0 entries which relate to missed controls\r\n  const ratios = results[resultIndex].refRatio[0].filter((ratio) => ratio > 0)\r\n  html += packRow(`<div  class=\"fw-bold\">${t(\"Consistency\")} ${(100 * getStandardDeviation(ratios)).toFixed(1)}%</div>`)\r\n  html += packRow(`</div>`)\r\n  document.getElementById(\"rg2-stats-summary\").innerHTML = html\r\n}\r\n\r\nfunction generateTableByLegPos() {\r\n  const rowData = []\r\n  for (let i = 0; i < results[resultIndex].splits.length; i += 1) {\r\n    let row = {}\r\n    row.name = result.name\r\n    if (i === 0) {\r\n      row.control = \"S\"\r\n    } else {\r\n      if (i == results[resultIndex].splits.length - 1) {\r\n        row.control = \"F\"\r\n      } else {\r\n        row.control = i + \" (\" + course.codes[i] + \")\"\r\n      }\r\n    }\r\n    if (i === 0) {\r\n      row.time = \"0:00\"\r\n    } else {\r\n      row.time = formatSecsAsMMSS(results[resultIndex].legSplits[i])\r\n    }\r\n    if (i === 0 || results[resultIndex].legpos[i] === 0 || course.exclude[i]) {\r\n      row.position = \"-\"\r\n    } else {\r\n      row.position = results[resultIndex].legpos[i]\r\n    }\r\n    if (i === 0 || course.exclude[i]) {\r\n      row.performance = \"-\"\r\n    } else {\r\n      row.performance = (100 * results[resultIndex].refRatio[0][i]).toFixed(1)\r\n    }\r\n    if (course.exclude[i]) {\r\n      row.best = \"-\"\r\n    } else {\r\n      row.best = formatSecsAsMMSS(byLegPos[i][0].t)\r\n    }\r\n    if (i === 0 || course.exclude[i]) {\r\n      row.who = \"-\"\r\n    } else {\r\n      let names = byLegPos[i][0].name\r\n      for (let j = 1; j < byLegPos[i].length; j += 1) {\r\n        if (byLegPos[i][0].t === byLegPos[i][j].t) {\r\n          names += \", \" + byLegPos[i][j].name\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n      row.who = names\r\n    }\r\n    const behind = results[resultIndex].legSplits[i] - byLegPos[i][0].t\r\n    if (i === 0) {\r\n      row.behind = \"-\"\r\n    } else {\r\n      if (results[resultIndex].legSplits[i] <= 0) {\r\n        row.behind = \"-\"\r\n      } else {\r\n        row.behind = formatSecsAsMMSS(behind)\r\n      }\r\n    }\r\n    if (i === 0) {\r\n      row.percent = 0\r\n    } else {\r\n      if (results[resultIndex].legSplits[i] <= 0) {\r\n        row.percent = 0\r\n      } else {\r\n        row.percent = parseInt((behind * 100) / byLegPos[i][0].t, 10)\r\n      }\r\n    }\r\n    if (course.exclude[i]) {\r\n      row.predicted = \"-\"\r\n    } else {\r\n      row.predicted = formatSecsAsMMSS(results[resultIndex].predictedSplits[iterationIndex][i])\r\n    }\r\n    if (results[resultIndex].legSplits[i] <= 0) {\r\n      row.loss = \"\"\r\n    } else {\r\n      const loss = results[resultIndex].predictedSplits[iterationIndex][i] - results[resultIndex].legSplits[i]\r\n      row.loss = loss >= 0 ? formatSecsAsMMSS(loss) : \"-\" + formatSecsAsMMSS(loss * -1)\r\n    }\r\n    rowData.push(row)\r\n  }\r\n\r\n  const gridOptions = {\r\n    columnDefs: [\r\n      { headerName: t(\"Control\", \"\"), field: \"control\", width: 80 },\r\n      {\r\n        headerName: t(\"Time\", \"\"),\r\n        field: \"time\",\r\n        width: 80,\r\n        comparator: timeComparator.bind(this)\r\n      },\r\n      { headerName: t(\"Position\", \"\"), field: \"position\", width: 75 },\r\n      {\r\n        headerName: t(\"Performance\", \"\"),\r\n        field: \"performance\",\r\n        width: 95,\r\n        comparator: perfComparator.bind(this)\r\n      },\r\n      { headerName: t(\"Best\", \"\"), field: \"best\", width: 80 },\r\n      {\r\n        headerName: t(\"Who\", \"\"),\r\n        field: \"who\",\r\n        headerClass: \"align-left\",\r\n        cellClass: (params) => {\r\n          return params.data.who.indexOf(params.data.name) > -1 ? \"rg2-green-text align-left\" : \"align-left\"\r\n        },\r\n        flex: 1,\r\n        tooltipField: \"who\"\r\n      },\r\n      {\r\n        headerName: t(\"Behind\", \"\"),\r\n        field: \"behind\",\r\n        width: 80,\r\n        comparator: timeComparator.bind(this)\r\n      },\r\n      { headerName: \"%\", field: \"percent\", width: 60 },\r\n      {\r\n        headerName: t(\"Predicted\", \"\"),\r\n        field: \"predicted\",\r\n        width: 100,\r\n        comparator: timeComparator.bind(this)\r\n      },\r\n      {\r\n        headerName: t(\"+/-\", \"\"),\r\n        field: \"loss\",\r\n        width: 75,\r\n        cellClass: (params) => {\r\n          return params.data.loss.substring(0, 1) === \"-\" ? \"rg2-red-text align-center\" : \"align-center\"\r\n        },\r\n        comparator: timeComparator.bind(this)\r\n      }\r\n    ],\r\n    rowData: rowData,\r\n    domLayout: \"autoHeight\",\r\n    defaultColDef: {\r\n      headerClass: \"align-center\",\r\n      cellClass: \"align-center\",\r\n      sortable: true\r\n    }\r\n  }\r\n  const table = document.getElementById(\"rg2-leg-table\")\r\n  table.innerHTML = \"\"\r\n  rg2Config.createGrid(table, gridOptions)\r\n}\r\n\r\nfunction generateTableByRacePos() {\r\n  const rowData = []\r\n  let loss = 0\r\n  for (let i = 0; i < results[resultIndex].splits.length; i += 1) {\r\n    let row = {}\r\n    row.name = result.name\r\n    if (i == 0) {\r\n      row.control = \"S\"\r\n    } else {\r\n      if (i == results[resultIndex].splits.length - 1) {\r\n        row.control = \"F\"\r\n      } else {\r\n        row.control = i + \" (\" + course.codes[i] + \")\"\r\n      }\r\n    }\r\n    if (i == 0) {\r\n      row.time = \"0:00\"\r\n    } else {\r\n      if (results[resultIndex].splits[i] === results[resultIndex].splits[i - 1]) {\r\n        row.time = \"\"\r\n      } else {\r\n        row.time = formatSecsAsMMSS(results[resultIndex].splits[i])\r\n      }\r\n    }\r\n    if (i === 0 || results[resultIndex].racepos[i] === 0) {\r\n      row.position = \"-\"\r\n    } else {\r\n      row.position = results[resultIndex].racepos[i]\r\n    }\r\n    row.best = formatSecsAsMMSS(byRacePos[i][0].t)\r\n    if (i === 0) {\r\n      row.who = \"-\"\r\n    } else {\r\n      let names = byRacePos[i][0].name\r\n      for (let j = 1; j < byRacePos[i].length; j += 1) {\r\n        if (byRacePos[i][0].t === byRacePos[i][j].t) {\r\n          names += \", \" + byRacePos[i][j].name\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n      row.who = names\r\n    }\r\n    const behind = results[resultIndex].splits[i] - byRacePos[i][0].t\r\n    if (i === 0 || results[resultIndex].racepos[i] === 0) {\r\n      row.behind = \"-\"\r\n    } else {\r\n      row.behind = formatSecsAsMMSS(behind)\r\n    }\r\n    if (i === 0 || results[resultIndex].racepos[i] === 0) {\r\n      row.percent = \"-\"\r\n    } else {\r\n      row.percent = parseInt((behind * 100) / byRacePos[i][0].t, 10)\r\n    }\r\n    loss = loss + results[resultIndex].loss[iterationIndex][i]\r\n    row.loss = formatSecsAsMMSS(loss)\r\n    rowData.push(row)\r\n  }\r\n\r\n  const gridOptions = {\r\n    columnDefs: [\r\n      { headerName: t(\"Control\", \"\"), field: \"control\", width: 88 },\r\n      { headerName: t(\"Time\", \"\"), field: \"time\", width: 85 },\r\n      { headerName: t(\"Position\", \"\"), field: \"position\", width: 100 },\r\n      { headerName: t(\"Best\", \"\"), field: \"best\", width: 85 },\r\n      {\r\n        headerName: t(\"Who\", \"\"),\r\n        field: \"who\",\r\n        headerClass: \"align-left\",\r\n        cellClass: (params) => {\r\n          return params.data.who.indexOf(params.data.name) > -1 ? \"rg2-green-text align-left\" : \"align-left\"\r\n        },\r\n        flex: 1,\r\n        tooltipField: \"who\"\r\n      },\r\n      { headerName: t(\"Behind\", \"\"), field: \"behind\", width: 85 },\r\n      { headerName: \"%\", field: \"percent\", width: 85 },\r\n      { headerName: \"Loss\", field: \"loss\", width: 100 }\r\n    ],\r\n    rowData: rowData,\r\n    domLayout: \"autoHeight\",\r\n    defaultColDef: {\r\n      headerClass: \"align-center\",\r\n      cellClass: \"align-center\"\r\n    }\r\n  }\r\n\r\n  const table = document.getElementById(\"rg2-race-table\")\r\n  table.innerHTML = \"\"\r\n  rg2Config.createGrid(table, gridOptions)\r\n}\r\n\r\nfunction getAverages(rawData, perCent) {\r\n  // avoid mutating source array\r\n  let data = rawData.slice()\r\n\r\n  if (data.length === 0) {\r\n    return { mean: 0, median: 0, count: 0 }\r\n  }\r\n  // sort incoming values\r\n  data.sort(function compare(a, b) {\r\n    return a - b\r\n  })\r\n  let total = 0\r\n  let count = data.length\r\n  // select top perCent items\r\n  if (perCent < 100) {\r\n    // arbitrary choice to keep at least three entries\r\n    const adjustedCount = Math.max(parseInt((count * perCent) / 100, 10), 3)\r\n    data.splice(adjustedCount)\r\n    count = data.length\r\n  }\r\n\r\n  for (let i = 0; i < count; i += 1) {\r\n    total = total + data[i]\r\n  }\r\n  let median\r\n  if (count === 1) {\r\n    median = data[0]\r\n  } else {\r\n    if (count % 2 === 0) {\r\n      median = (data[count / 2 - 1] + data[count / 2]) / 2\r\n    } else {\r\n      median = data[Math.floor(count / 2)]\r\n    }\r\n  }\r\n  return { mean: total / count, median: median, count: count }\r\n}\r\n\r\nfunction getLegPosInfo() {\r\n  let total = 0\r\n  let count = 0\r\n  let worst = 0\r\n  let best = 9999\r\n  for (let i = 1; i < result.legpos.length; i += 1) {\r\n    if (result.legpos[i] === 0) {\r\n      continue\r\n    }\r\n    total += result.legpos[i]\r\n    count += 1\r\n    if (best > result.legpos[i]) {\r\n      best = result.legpos[i]\r\n    }\r\n    if (worst < result.legpos[i]) {\r\n      worst = result.legpos[i]\r\n    }\r\n  }\r\n\r\n  // allow for people with no valid leg times\r\n  let average\r\n  if (count > 0) {\r\n    average = (total / count).toFixed(1)\r\n  } else {\r\n    average = 0\r\n    best = 0\r\n    worst = 0\r\n  }\r\n  return { best: best, worst: worst, average: average }\r\n}\r\n\r\nfunction getMean(data) {\r\n  return data.reduce((a, b) => a + b, 0) / data.length\r\n}\r\n\r\nfunction getPerfValue(p) {\r\n  if (p === \"-\") {\r\n    return 0\r\n  } else {\r\n    return parseFloat(p)\r\n  }\r\n}\r\n\r\nfunction getStandardDeviation(values) {\r\n  if (values.length === 0) {\r\n    return 0\r\n  }\r\n  const mean = getMean(values)\r\n  return Math.sqrt(values.reduce((sq, n) => sq + Math.pow(n - mean, 2), 0) / values.length)\r\n}\r\n\r\nexport function getStatsHeader() {\r\n  // generates HTML for a Bootstrap Tab layout\r\n  let html = `<ul class=\"nav nav-pills\" id=\"rg2-stats-panel-tab-headers\" role=\"tablist\">`\r\n  // add tab headers\r\n  for (let tab of tabs) {\r\n    const title = t(tab.title)\r\n    const active = tab.active ? \" active\" : \"\"\r\n    const index = tab.active ? \"\" : \"tabindex='-1'\"\r\n    html += `<li class=\"nav-item${active}\" role=\"presentation\">\r\n    <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#${tab.id}-tab\"\r\n      type=\"button\" role=\"tab\" ${index}>\r\n      <div id=\"${tab.id}-tab-label\">${title}</div>\r\n    </button>\r\n    </li>`\r\n  }\r\n  html += `</ul>`\r\n\r\n  return html\r\n}\r\n\r\nexport function getStatsLayout() {\r\n  // class rather than id since we use this on multiple tabs and all need to be kept in sync\r\n  const statsTitleRow = `<div class=\"rg2-stats-title-row container\"></div>`\r\n  // generates HTML for a Bootstrap Tab layout\r\n  let html = `<div id=\"rg2-stats-table\"><div class=\"tab-content\" id=\"rg2-stats-panel-tab-body\">`\r\n  for (let i = 0; i < tabs.length; i += 1) {\r\n    const active = tabs[i].active ? \" active\" : \"\"\r\n    html += `<div class=\"tab-pane fade ${active} pt-2\" id=\"${tabs[i].id}-tab\" role=\"tabpanel\" tabindex=\"${i}\">\r\n      ${statsTitleRow}${content[i]}</div>`\r\n  }\r\n  html += `</div></div></div>`\r\n\r\n  return html\r\n}\r\n\r\nfunction getTimeValue(t) {\r\n  // gets \"-\" or \"mm:ss\"\r\n  if (t === \"-\") {\r\n    return 0\r\n  } else {\r\n    return parseFloat(t.replace(\":\", \".\"))\r\n  }\r\n}\r\n\r\nfunction handleTabActivation(target) {\r\n  activeTab = target?.dataset?.bsTarget\r\n}\r\n\r\n// dynamic import of Grid and Chart utilities\r\nasync function importUtils() {\r\n  const { createGrid, ModuleRegistry } = await import(\"@ag-grid-community/core\")\r\n  rg2Config.createGrid = createGrid\r\n  const { ClientSideRowModelModule } = await import(\"@ag-grid-community/client-side-row-model\")\r\n  let chart = await import(\"chart.js/auto\")\r\n  Chart = chart.default\r\n  ModuleRegistry.registerModules([ClientSideRowModelModule])\r\n}\r\n\r\nfunction initialise(id) {\r\n  rawid = id\r\n  isScoreOrRelay = isScoreEvent()\r\n  result = getFullResultForRawID(rawid)\r\n  if (isScoreOrRelay) {\r\n    results = getAllResultsForVariant(result.variant)\r\n  } else {\r\n    results = getAllResultsForCourse(result.courseid)\r\n  }\r\n  initialiseCourse(result.courseid)\r\n  adjustSplits()\r\n  generateLegPositions()\r\n  resultIndex = setResultIndex(rawid)\r\n}\r\n\r\nfunction initialiseCourse(id) {\r\n  if (isScoreOrRelay) {\r\n    course = {\r\n      courseid: result.variant,\r\n      codes: result.scorecodes,\r\n      exclude: false\r\n    }\r\n  } else {\r\n    course = getCourseDetails(id)\r\n  }\r\n  // includes start and finish\r\n  controls = course.codes.length\r\n  if (controls <= 2) {\r\n    throw new rg2Exception(t(\"No splits available.\"))\r\n  }\r\n  byLegPos.length = 0\r\n  byRacePos.length = 0\r\n  let legTimes = []\r\n  let raceTimes = []\r\n  // for each leg\r\n  for (let i = 0; i < controls; i += 1) {\r\n    legTimes.length = 0\r\n    raceTimes.length = 0\r\n    // for each runner\r\n    for (let k = 0; k < results.length; k += 1) {\r\n      // create array of valid splits to this control\r\n      if (i === 0) {\r\n        // start control\r\n        legTimes.push({ t: 0, name: \"\", pos: 0 })\r\n        raceTimes.push({ t: 0, name: \"\", pos: 0 })\r\n      } else {\r\n        legTimes.push({\r\n          t: results[k].legSplits[i],\r\n          name: results[k].name,\r\n          pos: results[k].legpos[i]\r\n        })\r\n        // race position only valid if all controls to that point are valid\r\n        if (i <= results[k].lastValidSplit) {\r\n          raceTimes.push({\r\n            t: results[k].splits[i],\r\n            name: results[k].name,\r\n            pos: results[k].racepos[i]\r\n          })\r\n        }\r\n      }\r\n    }\r\n    legTimes.sort(function (a, b) {\r\n      // sort array of times in ascending order: 0 splits get sorted to the bottom\r\n      if (a.t === 0) {\r\n        return 1\r\n      } else {\r\n        if (b.t === 0) {\r\n          return -1\r\n        } else {\r\n          return a.t - b.t\r\n        }\r\n      }\r\n    })\r\n    raceTimes.sort(function (a, b) {\r\n      return a.t - b.t\r\n    })\r\n    byLegPos.push(legTimes.slice())\r\n    byRacePos.push(raceTimes.slice())\r\n  }\r\n}\r\n\r\nfunction isNumberOverZero(n) {\r\n  if (!isNaN(parseFloat(n)) && isFinite(n)) {\r\n    if (n > 0) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction iterateLostTime() {\r\n  for (let iter = 0; iter <= maxIterationIndex; iter += 1) {\r\n    calculateSplitsforIteration(iter)\r\n    calculatePerformanceForIteration(iter)\r\n    calculateLostTimeForIteration(iter)\r\n  }\r\n}\r\n\r\nfunction perfComparator(p1, p2) {\r\n  return getPerfValue(p1) - getPerfValue(p2)\r\n}\r\n\r\nfunction prepareStats(rawid) {\r\n  // all sorts of possible data consistency errors that might turn up\r\n  try {\r\n    initialise(rawid)\r\n    iterateLostTime()\r\n    generateSummary()\r\n    generateSplitsChart()\r\n    generateLegChart()\r\n    generateTableByLegPos()\r\n    generateTableByRacePos()\r\n    generateSplitsTable()\r\n    displayStats()\r\n    return true\r\n  } catch (err) {\r\n    if (err instanceof rg2Exception) {\r\n      // one we trapped ourselves\r\n      showWarningDialog(t(\"Statistics\"), err.message)\r\n    } else {\r\n      // general problem: probably an index out of bounds on an array somewhere: dodgy results files\r\n      showWarningDialog(t(\"Statistics\", \"\"), t(\"Data inconsistency.\", \"\"))\r\n    }\r\n    bootstrap.Offcanvas.getInstance(document.getElementById(\"rg2-right-info-panel\")).hide()\r\n  }\r\n  return false\r\n}\r\n\r\nfunction renderSplits(params) {\r\n  if (params.value.split === \"0:00\") {\r\n    return \"\"\r\n  }\r\n  let splitinfo = params.value.split\r\n  let classes = \"\"\r\n  if (params.value.pos !== 0) {\r\n    splitinfo += \" (\" + params.value.pos + \")\"\r\n    if (params.value.pos === 1) {\r\n      classes = \"rg2-first\"\r\n    }\r\n    if (params.value.pos === 2) {\r\n      classes = \"rg2-second\"\r\n    }\r\n    if (params.value.pos === 3) {\r\n      classes = \"rg2-third\"\r\n    }\r\n  }\r\n  if (params.value.loss) {\r\n    classes += \" rg2-lost-time\"\r\n  }\r\n  return '<span class=\"' + classes + '\">' + splitinfo + \"</span>\"\r\n}\r\n\r\nfunction rg2Exception(msg) {\r\n  this.message = msg\r\n}\r\n\r\nfunction setResultIndex(rawid) {\r\n  for (let i = 0; i < results.length; i += 1) {\r\n    if (results[i].rawid === rawid) {\r\n      // index for runner we are analysing\r\n      // reset result since we may have adjusted splits for excluded controls\r\n      result = results[i]\r\n      return i\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nexport function showStats(rawid, displayStats) {\r\n  if (!eventHasResults()) {\r\n    showWarningDialog(t(\"Statistics\", \"\"), t(\"No statistics available for this event format.\", \"\"))\r\n    return false\r\n  }\r\n  activeTab = startTab\r\n  if (!rg2Config.createGrid) {\r\n    importUtils()\r\n      .then(() => {\r\n        prepareStats(rawid)\r\n        displayStats()\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error loading Grid and Chart\")\r\n        showWarningDialog(\"Error loading Grid and Chart\", \"Statistics functionality failed to load.\")\r\n      })\r\n  } else {\r\n    prepareStats(rawid)\r\n    displayStats()\r\n  }\r\n}\r\n\r\nfunction sortLegTimes(a, b) {\r\n  // sort array of times in ascending order\r\n  // 0 splits get sorted to the bottom\r\n  if (a.time === 0) {\r\n    return 1\r\n  } else {\r\n    if (b.time === 0) {\r\n      return -1\r\n    } else {\r\n      return a.time - b.time\r\n    }\r\n  }\r\n}\r\n\r\nfunction timeComparator(t1, t2) {\r\n  return getTimeValue(t1) - getTimeValue(t2)\r\n}\r\n","import { addRunner, animateRunners, removeRunner } from \"./animation\"\r\nimport * as bootstrap from \"bootstrap\"\r\nimport { redraw, resizeCanvas } from \"./canvas\"\r\nimport { config, options, saveConfigOptions, setConfigOption } from \"./config\"\r\nimport {\r\n  allCoursesDisplayed,\r\n  controls,\r\n  createCourseDropdown,\r\n  setCourseDisplay,\r\n  setAllCoursesDisplay,\r\n  setAllFilters,\r\n  setFilter,\r\n  getCoursesOnDisplay\r\n} from \"./courses\"\r\nimport {\r\n  adjustOffset,\r\n  autofitGPSTrack,\r\n  confirmDeleteRoute,\r\n  resetDrawing,\r\n  saveGPSRoute,\r\n  saveRoute,\r\n  showCourseInProgress,\r\n  undoGPSAdjust,\r\n  undoLastPoint,\r\n  readGPS,\r\n  waitThreeSeconds,\r\n  setNameAndTime\r\n} from \"./draw\"\r\nimport { eventHasResults, formatEvents, getEventStats, getKartatEventID, loadEventByKartatID } from \"./events\"\r\nimport { setHashCourses, setHashRoutes } from \"./hash\"\r\nimport {\r\n  allResultsForCourseReplayed,\r\n  allTracksDisplayed,\r\n  allTracksForCourseDisplayed,\r\n  allTracksForCourseReplayed,\r\n  createNameDropdown,\r\n  displayScoreCourse,\r\n  getAllRunnersForCourse,\r\n  getAllRunnersWithTrackForCourse,\r\n  getCourseForResult,\r\n  getTracksOnDisplay,\r\n  resetSpeedColours,\r\n  setTrackDisplayByCourse,\r\n  setTrackDisplayByResult\r\n} from \"./results\"\r\nimport { Runner } from \"./runner\"\r\nimport { getStatsHeader, getStatsLayout, showStats } from \"./stats\"\r\nimport { t, createLanguageDropdown } from \"./translate\"\r\n\r\nconst infoPanelControl = document.getElementById(\"rg2-show-info-panel-control\")\r\nconst rightInfoPanelEl = document.getElementById(\"rg2-right-info-panel\")\r\nconst rightInfoPanelTitle = document.getElementById(\"rg2-right-info-panel-title\")\r\n//const rightInfoPanelBody = document.getElementById(\"rg2-right-info-panel-body\")\r\nconst rightInfoPanel = new bootstrap.Offcanvas(rightInfoPanelEl, { backdrop: false })\r\n\r\nconst leftInfoPanelEl = document.getElementById(\"rg2-left-info-panel\")\r\nconst leftInfoPanelTitle = document.getElementById(\"rg2-left-info-panel-title\")\r\nlet leftInfoPanelBody = document.getElementById(\"rg2-left-info-panel-body\")\r\n\r\nconst leftInfoPanel = new bootstrap.Offcanvas(leftInfoPanelEl, { backdrop: false })\r\nleftInfoPanelEl.style.width = `420px`\r\nleftInfoPanelEl.addEventListener(\"hidden.bs.offcanvas\", () => {\r\n  // display close button when panel has finished closing\r\n  infoPanelControl.classList.remove(\"d-none\")\r\n})\r\nresizePanels()\r\n\r\nconst MAX_OFFSET = 10\r\nconst MIN_OFFSET = -10\r\n\r\nfunction animationPanelDisplayed() {\r\n  const animationPanel = document.getElementById(\"rg2-animation-controls\")\r\n  if (animationPanel.classList.contains(\"d-none\")) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function configureDrawDialog() {\r\n  // sets up all non-changing aspects of draw dialog at start-up\r\n  // variable aspects set by resetDrawDialog when needed\r\n\r\n  document.querySelector(\"label[for=rg2-select-course]\").innerHTML = `${t(\"Select course\")}`\r\n  document.querySelector(\"label[for=rg2-select-name]\").innerHTML = `${t(\"Select name\")}`\r\n  // name and time entry for events with no results\r\n  document.querySelector(`label[for=rg2-name-entry]`).innerHTML = t(\"Name\")\r\n  document.querySelector(\"#rg2-name-entry\").addEventListener(\"input\", () => {\r\n    setNameAndTime()\r\n  })\r\n  document.querySelector(`label[for=rg2-time-entry]`).innerHTML = t(\"Time\")\r\n  document.querySelector(\"#rg2-time-entry\").addEventListener(\"input\", () => {\r\n    setNameAndTime()\r\n  })\r\n  const comments = document.getElementById(\"rg2-new-comments\")\r\n  comments.setAttribute(\"placeholder\", t(config.DEFAULT_NEW_COMMENT, \"\"))\r\n  comments.addEventListener(\"focus\", () => {\r\n    const comments = document.getElementById(\"rg2-new-comments\")\r\n    // Clear placeholder when user focuses on it\r\n    comments.setAttribute(\"placeholder\", \"\")\r\n  })\r\n\r\n  const secs = document.getElementById(\"btn-three-seconds\")\r\n  secs.innerHTML = t(\"+3 secs\")\r\n  secs.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    waitThreeSeconds()\r\n  })\r\n\r\n  const undo = document.getElementById(\"btn-undo\")\r\n  undo.innerHTML = t(\"Undo\")\r\n  undo.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    undoLastPoint()\r\n  })\r\n\r\n  const save = document.getElementById(\"btn-save-route\")\r\n  save.innerHTML = t(\"Save\")\r\n  save.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    saveRoute()\r\n  })\r\n\r\n  const reset = document.getElementById(\"btn-reset-drawing\")\r\n  reset.innerHTML = t(\"Reset\")\r\n  reset.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    resetDrawing()\r\n  })\r\n\r\n  document.getElementById(\"rg2-load-gps-title\").innerHTML = t(\"Load GPS file (GPX or TCX)\")\r\n\r\n  document.getElementById(\"btn-offset-plus\").addEventListener(\"click\", () => {\r\n    const input = document.getElementById(\"rg2-offset-value\")\r\n    let val = parseInt(input.value, 10)\r\n    if (val < MAX_OFFSET) {\r\n      val = val + 1\r\n      input.value = val\r\n      adjustOffset(val)\r\n    }\r\n  })\r\n\r\n  document.getElementById(\"btn-offset-minus\").addEventListener(\"click\", () => {\r\n    const input = document.getElementById(\"rg2-offset-value\")\r\n    let val = parseInt(input.value, 10)\r\n    if (val > MIN_OFFSET) {\r\n      val = val - 1\r\n      input.value = val\r\n      adjustOffset(val)\r\n    }\r\n  })\r\n\r\n  document.getElementById(\"rg2-offset-value\").addEventListener(\"input\", () => {\r\n    const input = document.getElementById(\"rg2-offset-value\")\r\n    let val = parseInt(input.value, 10)\r\n    if (isNaN(val)) {\r\n      val = 0\r\n    }\r\n    if (val < MIN_OFFSET) {\r\n      val = MIN_OFFSET\r\n    }\r\n    if (val > MAX_OFFSET) {\r\n      val = MAX_OFFSET\r\n    }\r\n    input.value = val\r\n    adjustOffset(val)\r\n  })\r\n\r\n  const adjust = document.getElementById(\"btn-undo-gps-adjust\")\r\n  adjust.innerHTML = t(\"Undo\")\r\n  adjust.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    undoGPSAdjust()\r\n  })\r\n\r\n  const autofit = document.getElementById(\"btn-autofit-gps\")\r\n  autofit.innerHTML = t(\"Autofit\")\r\n  autofit.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    autofitGPSTrack()\r\n  })\r\n\r\n  document.querySelector(`label[for=chk-move-all]`).innerHTML = t(\"Move track and map together (or right click-drag)\")\r\n\r\n  const saveGPS = document.getElementById(\"btn-save-gps-route\")\r\n  saveGPS.innerHTML = t(\"Save GPS route\")\r\n  saveGPS.addEventListener(\"click\", (e) => {\r\n    e.preventDefault()\r\n    saveGPSRoute()\r\n  })\r\n\r\n  const help = [\r\n    \"Left click to add/lock/unlock a handle\",\r\n    \"Green - draggable\",\r\n    \"Red - locked\",\r\n    \"Right click to delete a handle\",\r\n    \"Drag a handle to adjust track around locked point(s)\"\r\n  ]\r\n  help.forEach((text, i) => {\r\n    const el = document.getElementById(`draw-text-${i + 1}`)\r\n    el.innerHTML = `${t(text)}.`\r\n  })\r\n\r\n  const file = document.getElementById(\"rg2-load-gps-file\")\r\n  file.addEventListener(\"input\", (e) => {\r\n    readGPS(e)\r\n  })\r\n}\r\n\r\nfunction configureSettingsDialog() {\r\n  document.querySelector(`label[for=rg2-select-language]`).innerHTML = `${t(\"Language\")}`\r\n  createLanguageDropdown(config.languages)\r\n  configureSettingsCheckbox(\"chk-show-GPS-speed\", \"showGPSSpeed\", \"Show GPS speed colours\")\r\n  configureSettingsCheckbox(\"chk-snap-toggle\", \"snap\", \"Snap to control when drawing\")\r\n  configureSettingsCheckbox(\"chk-show-three-seconds\", \"showThreeSeconds\", \"Show +3 time loss for GPS routes\")\r\n  configureSettingsSlider(\"map-intensity\", \"perCentMapIntensity\", \"Map intensity\", \"%\")\r\n  configureSettingsSlider(\"route-intensity\", \"perCentRouteIntensity\", \"Route intensity\", \"%\")\r\n  configureSettingsSlider(\"control-circle\", \"circleSize\", \"Control circle size\")\r\n  configureSettingsSlider(\"course-width\", \"courseWidth\", \"Course overprint width\")\r\n  configureSettingsSlider(\"route-width\", \"routeWidth\", \"Route width\")\r\n  configureSettingsSlider(\"name-font-size\", \"replayFontSize\", \"Replay label font size\")\r\n\r\n  const slider = document.getElementById(\"rg2-gps-speed-slider\")\r\n  slider.setAttribute(\"value1\", options.maxSpeed)\r\n  slider.setAttribute(\"value2\", options.minSpeed)\r\n  slider.addEventListener(\"change\", gpsSpeedChanged)\r\n\r\n  document.getElementById(\"rg2-min-gps-speed-label\").innerHTML = getMinSpeedLabel()\r\n  document.getElementById(\"rg2-max-gps-speed-label\").innerHTML = getMaxSpeedLabel()\r\n}\r\n\r\nfunction configureSettingsCheckbox(selector, option, text) {\r\n  document.querySelector(`label[for=${selector}]`).innerHTML = `${t(text)}`\r\n  const el = document.getElementById(selector)\r\n  el.addEventListener(\"click\", (e) => {\r\n    options[option] = e.target.checked\r\n    saveConfigOptions()\r\n    redraw()\r\n  })\r\n  el.checked = options[option]\r\n}\r\n\r\nfunction configureSettingsSlider(selector, option, text, units = \"\") {\r\n  let label = document.querySelector(`label[for=spn-${selector}]`)\r\n  label.innerHTML = `${t(text)} ${options[option]}${units}`\r\n  let el = document.getElementById(`spn-${selector}`)\r\n  el.setAttribute(\"value\", options[option])\r\n  el.addEventListener(\"change\", (e) => {\r\n    setConfigOption(option, parseInt(e.target.value, 10))\r\n    label = document.querySelector(`label[for=spn-${selector}`)\r\n    label.innerHTML = `${t(text)} ${options[option]}${units}`\r\n    redraw()\r\n  })\r\n}\r\n\r\nexport function configureUI() {\r\n  // disable right click menu: may add our own later\r\n  document.body.addEventListener(\"contextmenu\", (e) => {\r\n    e.preventDefault()\r\n  })\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    resizePanels()\r\n    resizeCanvas()\r\n  })\r\n\r\n  document.getElementById(\"rg2-left-info-panel-body\").addEventListener(\"scroll\", (e) => {\r\n    // Save current scroll bar position in tab\r\n    document.getElementById(\"rg2-info-panel\").setAttribute(getScrollPosAttrName(), e.target.scrollTop)\r\n  })\r\n\r\n  initialiseInfoPanelDialog()\r\n  if (!config.managing()) {\r\n    configureDrawDialog()\r\n  }\r\n  displayInfoPanelDialog()\r\n\r\n  const logo = document.getElementById(\"rg2-logo\")\r\n  logo.addEventListener(\"click\", () => {\r\n    leftInfoPanel.toggle()\r\n  })\r\n\r\n  const tabsBody = document.querySelector(\"#rg2-info-panel-tab-headers\")\r\n  const tabs = tabsBody.querySelectorAll('button[data-bs-toggle=\"tab\"]')\r\n  tabs.forEach((tab) => {\r\n    tab.addEventListener(\"shown.bs.tab\", (e) => {\r\n      tabActivated(e)\r\n    })\r\n  })\r\n\r\n  infoPanelControl.addEventListener(\"click\", () => {\r\n    displayInfoPanelDialog()\r\n    infoPanelControl.classList.add(\"d-none\")\r\n  })\r\n\r\n  initialiseButtons()\r\n}\r\n\r\nexport function createEventMenu() {\r\n  if (config.managing()) {\r\n    return\r\n  }\r\n  let eventList = document.getElementById(\"rg2-event-list\")\r\n  eventList.innerHTML = formatEvents()\r\n  let eventTable = document.getElementById(\"rg2-event-table\")\r\n  let searchBox = document.getElementById(\"rg2-event-search\")\r\n  searchBox.innerHTML = `<form class=\"d-flex pb-2\" role=\"search\">\r\n  <input class=\"form-control mr-2\" type=\"search\" aria-label=\"${t(\"Search\")}\">\r\n  <i class=\"bi-search ms-2 mt-2\"></i>\r\n  </form>`\r\n  searchBox.addEventListener(\"keyup\", (e) => {\r\n    let filter = e.target.value.toUpperCase()\r\n    let rows = eventTable.getElementsByTagName(\"tr\")\r\n    for (let i = 0; i < rows.length; i += 1) {\r\n      if (rows[i].innerText.toUpperCase().indexOf(filter) > -1) {\r\n        rows[i].classList.remove(\"d-none\")\r\n      } else {\r\n        rows[i].classList.add(\"d-none\")\r\n      }\r\n    }\r\n  })\r\n  eventTable.addEventListener(\"click\", (e) => {\r\n    // get tr that contains element that was clicked\r\n    const row = e.target.closest(\"tr\")\r\n    const kartatid = parseInt(row.dataset.kartatid, 10)\r\n    if (!isNaN(kartatid)) {\r\n      loadEventByKartatID(kartatid)\r\n    }\r\n  })\r\n}\r\n\r\nfunction displayAboutDialog() {\r\n  rightInfoPanelEl.style.width = `800px`\r\n  rightInfoPanelTitle.innerHTML = \"RG2 Version \" + config.RG2VERSION\r\n  document.getElementById(\"rg2-about-dialog\").classList.remove(\"d-none\")\r\n  document.getElementById(\"rg2-option-controls\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-stats-dialog\").classList.add(\"d-none\")\r\n  let eventStats = document.getElementById(\"rg2-event-stats\")\r\n  eventStats.innerHTML = getEventStats()\r\n  document.getElementById(\"rg2-manager-link\").innerHTML = `<a href=\"${rg2Config.api_url.replace(\r\n    \"rg2api.php\",\r\n    \"?manage\"\r\n  )}\">Manager Login</a>`\r\n  rightInfoPanel.show()\r\n}\r\n\r\nfunction displayInfoPanelDialog() {\r\n  leftInfoPanel.show()\r\n}\r\n\r\nfunction displaySettingsDialog() {\r\n  rightInfoPanelEl.style.width = `420px`\r\n  rightInfoPanelTitle.innerHTML = t(\"Configuration options\")\r\n  document.getElementById(\"rg2-about-dialog\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-option-controls\").classList.remove(\"d-none\")\r\n  document.getElementById(\"rg2-stats-dialog\").classList.add(\"d-none\")\r\n  configureSettingsDialog()\r\n  rightInfoPanel.show()\r\n}\r\n\r\nexport function displayStatsDialog(resultid) {\r\n  rightInfoPanelEl.style.width = `1000px`\r\n  rightInfoPanelTitle.innerHTML = getStatsHeader()\r\n  document.getElementById(\"rg2-stats-dialog\").innerHTML = getStatsLayout()\r\n  document.getElementById(\"rg2-about-dialog\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-option-controls\").classList.add(\"d-none\")\r\n  document.getElementById(\"rg2-stats-dialog\").classList.remove(\"d-none\")\r\n  showStats(resultid, function () {\r\n    rightInfoPanel.show()\r\n  })\r\n}\r\n\r\nexport function getActiveTab() {\r\n  return document.querySelector(\"#rg2-info-panel-tab-headers button.active\").id\r\n}\r\n\r\nfunction getInfoPanelBodyHTML(tabs) {\r\n  let html = `<div id=\"rg2-info-panel\">`\r\n  html += `<div class=\"tab-content\" id=\"rg2-info-panel-tab-body\">`\r\n  for (let i = 0; i < tabs.length; i = i + 1) {\r\n    const body = document.getElementById(tabs[i].body)\r\n    const active = tabs[i].active ? \" active show\" : \"\"\r\n    html += `<div class=\"tab-pane fade ${active}\" id=\"rg2-${tabs[i].name}-body\" role=\"tabpanel\" \r\n    aria-labelledby=\"${tabs[i].name}\" tabindex=\"${i}\">${body.innerHTML}</div>`\r\n    body.remove()\r\n  }\r\n  html += `</div></div>`\r\n  return html\r\n}\r\n\r\nfunction getInfoPanelHeaderHTML(tabs) {\r\n  let html = `<ul class=\"nav nav-pills\" id=\"rg2-info-panel-tab-headers\" role=\"tablist\">`\r\n  for (let i = 0; i < tabs.length; i = i + 1) {\r\n    const hidden = tabs[i].hidden ? \" d-none\" : \"\"\r\n    const active = tabs[i].active ? \" active\" : \"\"\r\n    const disabled = tabs[i].disabled ? \" disabled \" : \"\"\r\n    html += `\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <button class=\"nav-link${active}${hidden}\"${disabled}id=\"${tabs[i].name}\" data-bs-toggle=\"tab\"\r\n      data-bs-target=\"#rg2-${tabs[i].name}-body\"\r\n        type=\"button\" role=\"tab\"><div id=\"${tabs[i].name}-label\">${t(tabs[i].title)}</div>\r\n      </button>\r\n    </li>`\r\n  }\r\n  html += `</ul>`\r\n  return html\r\n}\r\n\r\nfunction getMaxSpeedLabel() {\r\n  return `<i class=\"bi-emoji-smile rg2-run-green\"></i> ${options.maxSpeed.toFixed(1)} min/km`\r\n}\r\n\r\nfunction getMinSpeedLabel() {\r\n  return `<i class=\"bi-emoji-smile rg2-run-red\"></i> ${options.minSpeed.toFixed(1)} min/km`\r\n}\r\n\r\nfunction getScrollPosAttrName() {\r\n  return `scroll-${getActiveTab()}`\r\n}\r\n\r\nfunction gpsSpeedChanged(e) {\r\n  options.maxSpeed = e.detail.value1\r\n  options.minSpeed = e.detail.value2\r\n  const minSpeedLabel = document.getElementById(\"rg2-min-gps-speed-label\")\r\n  minSpeedLabel.innerHTML = getMinSpeedLabel()\r\n  const maxSpeedLabel = document.getElementById(\"rg2-max-gps-speed-label\")\r\n  maxSpeedLabel.innerHTML = getMaxSpeedLabel()\r\n  resetSpeedColours()\r\n  redraw()\r\n}\r\n\r\nfunction initialiseButtons() {\r\n  document.getElementById(\"btn-about\").addEventListener(\"click\", (e) => {\r\n    displayAboutDialog(e)\r\n  })\r\n  document.getElementById(\"btn-settings\").addEventListener(\"click\", (e) => {\r\n    displaySettingsDialog(e)\r\n  })\r\n  document.getElementById(\"btn-toggle-controls\").addEventListener(\"click\", () => {\r\n    controls.toggleControlDisplay()\r\n    redraw()\r\n  })\r\n  document.getElementById(\"btn-stats\").addEventListener(\"click\", () => {\r\n    // stats display: start with first runner in results list\r\n    displayStatsDialog(1)\r\n  })\r\n  document.getElementById(\"btn-splitsbrowser\").addEventListener(\"click\", () => {\r\n    // <timestamp> mimics jQuery cache busting strategy to force reload of event data: needed to get\r\n    // around events that are deleted and then recreated with same number\r\n    window.open(rg2Config.api_url + \"?type=splitsbrowser&id=\" + getKartatEventID() + \"&_=\" + Date.now())\r\n  })\r\n  document.getElementById(\"btn-measure\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-runners\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-toggle-controls\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-stats\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-splitsbrowser\").setAttribute(\"disabled\", \"\")\r\n}\r\n\r\nfunction initialiseInfoPanelDialog() {\r\n  const normalTabs = [\r\n    { name: config.TAB_EVENTS, title: \"Events\", body: \"rg2-event-body\", active: true },\r\n    { name: config.TAB_COURSES, title: \"Courses\", body: \"rg2-course-body\", disabled: true },\r\n    { name: config.TAB_RESULTS, title: \"Results\", body: \"rg2-result-body\", disabled: true },\r\n    { name: config.TAB_DRAW, title: \"Draw\", body: \"rg2-draw-body\", disabled: true }\r\n  ]\r\n\r\n  const managerTabs = [\r\n    { name: config.TAB_LOGIN, title: \"Login\", body: \"rg2-login-body\", active: true },\r\n    { name: config.TAB_CREATE, title: \"Add event\", body: \"rg2-add-event-body\", hidden: true },\r\n    { name: config.TAB_EDIT, title: \"Edit event\", body: \"rg2-edit-event-body\", hidden: true },\r\n    { name: config.TAB_MAP, title: \"Add map\", body: \"rg2-add-map-body\", hidden: true },\r\n    { name: config.TAB_DELETE_MAP, title: \"Delete maps\", body: \"rg2-delete-maps-body\", hidden: true }\r\n  ]\r\n\r\n  if (config.managing()) {\r\n    leftInfoPanelTitle.innerHTML = getInfoPanelHeaderHTML(managerTabs)\r\n    leftInfoPanelBody.innerHTML = getInfoPanelBodyHTML(managerTabs)\r\n  } else {\r\n    leftInfoPanelTitle.innerHTML = getInfoPanelHeaderHTML(normalTabs)\r\n    leftInfoPanelBody.innerHTML = getInfoPanelBodyHTML(normalTabs)\r\n  }\r\n}\r\n\r\nexport function resetDrawDialog() {\r\n  createCourseDropdown()\r\n  // name dialog initialised empty and disabled until course selected\r\n  createNameDropdown(undefined)\r\n  document.getElementById(\"rg2-select-name\").setAttribute(\"disabled\", \"\")\r\n  if (eventHasResults()) {\r\n    document.getElementById(\"rg2-name-select\").classList.remove(\"d-none\")\r\n    document.getElementById(\"rg2-enter-name-and-time\").classList.add(\"d-none\")\r\n  } else {\r\n    document.getElementById(\"rg2-name-select\").classList.add(\"d-none\")\r\n    document.getElementById(\"rg2-enter-name-and-time\").classList.remove(\"d-none\")\r\n  }\r\n\r\n  configureSettingsCheckbox(\"chk-align-map\", \"alignMap\", \"Align map to next control\")\r\n  document.getElementById(\"btn-three-seconds\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-undo\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-save-route\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-reset-drawing\").setAttribute(\"disabled\", \"\")\r\n\r\n  document.getElementById(\"rg2-load-gps-file\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-autofit-gps\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-undo-gps-adjust\").setAttribute(\"disabled\", \"\")\r\n  document.getElementById(\"btn-save-gps-route\").setAttribute(\"disabled\", \"\")\r\n\r\n  document.getElementById(\"chk-move-all\").checked = false\r\n}\r\n\r\nexport function resizePanels() {\r\n  const headerHeight = document.getElementById(\"rg2-header-container\").offsetHeight\r\n  const footerHeight = animationPanelDisplayed() ? document.getElementById(\"rg2-animation-controls\").offsetHeight : 0\r\n  leftInfoPanelEl.style.top = `${headerHeight}px`\r\n  rightInfoPanelEl.style.top = `${headerHeight}px`\r\n  leftInfoPanelEl.style.bottom = `${footerHeight}px`\r\n  rightInfoPanelEl.style.bottom = `${footerHeight}px`\r\n  // maxWidth overrides width in CSS so we can set width elsewhere and this will always clamp to screen size\r\n  leftInfoPanelEl.style.maxWidth = `${window.innerWidth}px`\r\n  rightInfoPanelEl.style.maxWidth = `${window.innerWidth}px`\r\n  document.getElementById(\"rg2-track-names\").style.maxHeight = `${window.innerHeight - headerHeight - 10}px`\r\n}\r\n\r\nexport function setResultCheckboxes() {\r\n  // checkbox to show a course\r\n  const showCourse = document.querySelectorAll(\".showcourse\")\r\n  showCourse.forEach((show) => {\r\n    show.addEventListener(\"click\", (e) => {\r\n      const courseid = parseInt(e.target.dataset.courseid, 10)\r\n      setCourseDisplay(courseid, e.target.checked)\r\n      // align courses and results tab\r\n      const showCourse = document.querySelectorAll(\".showcourse\")\r\n      for (let elem of showCourse) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      // align allcourses for this course\r\n      const showAllCourses = document.querySelector(\".showallcourses\")\r\n      showAllCourses.checked = allCoursesDisplayed()\r\n      setFilter(courseid)\r\n      setHashCourses(getCoursesOnDisplay())\r\n      redraw()\r\n    })\r\n  })\r\n\r\n  // checkbox to show all courses\r\n  const showAllCourses = document.querySelector(\".showallcourses\")\r\n  showAllCourses.addEventListener(\"click\", (e) => {\r\n    setAllCoursesDisplay(e.target.checked)\r\n    // align all the individual checkboxes for each course\r\n    const showCourse = document.querySelectorAll(\".showcourse\")\r\n    for (let elem of showCourse) {\r\n      elem.checked = e.target.checked\r\n    }\r\n    setAllFilters()\r\n    setHashCourses(getCoursesOnDisplay())\r\n    redraw()\r\n  })\r\n\r\n  // checkbox to show an individual score course\r\n  const showScoreCourse = document.querySelectorAll(\".showscorecourse\")\r\n  showScoreCourse.forEach((show) => {\r\n    show.addEventListener(\"click\", (e) => {\r\n      displayScoreCourse(parseInt(e.target.dataset.courseid, 10), e.target.checked)\r\n      redraw()\r\n    })\r\n  })\r\n\r\n  // checkbox to show a track\r\n  const showTrack = document.querySelectorAll(\".showtrack\")\r\n  showTrack.forEach((show) => {\r\n    show.addEventListener(\"click\", (e) => {\r\n      const id = parseInt(e.target.dataset.id, 10)\r\n      setTrackDisplayByResult(id, e.target.checked)\r\n      const courseid = parseInt(e.target.dataset.courseid, 10)\r\n      // align all routes for this course checkboxes\r\n      const allCourseTracks = document.querySelectorAll(\".allcoursetracks\")\r\n      allCourseTracks.forEach((course) => {\r\n        if (parseInt(course.dataset.courseid, 10) === courseid) {\r\n          course.checked = allTracksForCourseDisplayed(courseid)\r\n        }\r\n      })\r\n      // align all routes for all courses checkbox\r\n      const allTracks = document.querySelectorAll(\".alltracks\")\r\n      allTracks.forEach((track) => {\r\n        track.checked = allTracksDisplayed()\r\n      })\r\n      setFilter(courseid)\r\n      setHashRoutes(getTracksOnDisplay())\r\n      redraw()\r\n    })\r\n  })\r\n\r\n  // checkbox to delete a route\r\n  const deleteRoute = document.querySelectorAll(\".deleteroute\")\r\n  for (let route of deleteRoute) {\r\n    route.addEventListener(\"click\", (e) => {\r\n      confirmDeleteRoute(parseInt(e.target.dataset.resultidx, 10))\r\n    })\r\n  }\r\n\r\n  // checkbox to display all tracks for course\r\n  const allCourseTracks = document.querySelectorAll(\".allcoursetracks\")\r\n  for (let course of allCourseTracks) {\r\n    course.addEventListener(\"click\", (e) => {\r\n      let courseid = parseInt(e.target.dataset.courseid, 10)\r\n      setTrackDisplayByCourse(courseid, e.target.checked)\r\n      // align all tabs\r\n      const allCourseTracks = document.querySelectorAll(\".allcoursetracks\")\r\n      for (let elem of allCourseTracks) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      // align individual result checkboxes\r\n      const showTrack = document.querySelectorAll(\".showtrack\")\r\n      for (let elem of showTrack) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      // align all routes for all courses checkbox\r\n      const allTracks = document.querySelectorAll(\".alltracks\")\r\n      for (let elem of allTracks) {\r\n        elem.checked = allTracksDisplayed()\r\n      }\r\n      setFilter(courseid)\r\n      setHashRoutes(getTracksOnDisplay())\r\n      redraw()\r\n    })\r\n  }\r\n\r\n  // checkbox to show all tracks for all courses\r\n  const allTracks = document.querySelectorAll(\".alltracks\")\r\n  for (let elem of allTracks) {\r\n    elem.addEventListener(\"click\", (e) => {\r\n      setTrackDisplayByCourse(config.DISPLAY_ALL_COURSES, e.target.checked)\r\n      const allCourseTracks = document.querySelectorAll(\".allcoursetracks\")\r\n      for (let elem of allCourseTracks) {\r\n        elem.checked = e.target.checked\r\n      }\r\n      const showTrack = document.querySelectorAll(\".showtrack\")\r\n      for (let elem of showTrack) {\r\n        elem.checked = e.target.checked\r\n      }\r\n      setAllFilters(e.target.checked)\r\n      setHashRoutes(getTracksOnDisplay())\r\n      redraw()\r\n    })\r\n  }\r\n\r\n  // checkbox to animate a result\r\n  const showReplay = document.querySelectorAll(\".showreplay\")\r\n  for (let elem of showReplay) {\r\n    elem.addEventListener(\"click\", (e) => {\r\n      let resultid = parseInt(e.target.dataset.id, 10)\r\n      if (e.target.checked) {\r\n        addRunner(new Runner(resultid))\r\n      } else {\r\n        removeRunner(resultid)\r\n      }\r\n      const courseid = getCourseForResult(resultid)\r\n      const allCourseTracksReplay = document.querySelectorAll(\".allcoursetracksreplay\")\r\n      for (let elem of allCourseTracksReplay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = allTracksForCourseReplayed(courseid)\r\n        }\r\n      }\r\n      const allCourseReplay = document.querySelectorAll(\".allcoursereplay\")\r\n      for (let elem of allCourseReplay) {\r\n        elem.checked = allResultsForCourseReplayed(courseid)\r\n      }\r\n      redraw()\r\n    })\r\n  }\r\n\r\n  const allCourseTracksReplay = document.querySelectorAll(\".allcoursetracksreplay\")\r\n  for (let elem of allCourseTracksReplay) {\r\n    elem.addEventListener(\"click\", (e) => {\r\n      let courseid = parseInt(e.target.dataset.courseid, 10)\r\n      const courseresults = getAllRunnersWithTrackForCourse(courseid)\r\n      animateRunners(courseresults, e.target.checked)\r\n      const replay = document.querySelectorAll(\".showreplay.showtrackreplay\")\r\n      for (let elem of replay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      const allCourseTracksReplay = document.querySelectorAll(\".allcoursetracksreplay\")\r\n      for (let elem of allCourseTracksReplay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      let allCourseReplay = document.querySelectorAll(\".allcoursereplay\")\r\n      for (let elem of allCourseReplay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = allResultsForCourseReplayed(courseid)\r\n        }\r\n      }\r\n      redraw()\r\n    })\r\n  }\r\n\r\n  // checkbox to animate all results for course\r\n  // this one draws straight lines between controls for non-drawn routes\r\n  const allCourseReplay = document.querySelectorAll(\".allcoursereplay\")\r\n  for (let elem of allCourseReplay) {\r\n    elem.addEventListener(\"click\", (e) => {\r\n      const courseid = parseInt(e.target.dataset.courseid, 10)\r\n      const courseresults = getAllRunnersForCourse(courseid)\r\n      animateRunners(courseresults, e.target.checked)\r\n      const replay = document.querySelectorAll(\".showreplay\")\r\n      for (let elem of replay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = e.target.checked\r\n        }\r\n      }\r\n      const allCourseTracksReplay = document.querySelectorAll(\".allcoursetracksreplay\")\r\n      for (let elem of allCourseTracksReplay) {\r\n        if (parseInt(elem.dataset.courseid, 10) === courseid) {\r\n          elem.checked = allTracksForCourseReplayed(courseid)\r\n        }\r\n      }\r\n      redraw()\r\n    })\r\n  }\r\n}\r\n\r\nfunction tabActivated(e) {\r\n  switch (e.target.id) {\r\n    case config.TAB_DRAW:\r\n      setAllCoursesDisplay(false)\r\n      showCourseInProgress()\r\n      break\r\n    default:\r\n      break\r\n  }\r\n\r\n  // Set scroll bar position in tab to how it was when user was last looking at it\r\n  const scrollPos = document.getElementById(\"rg2-info-panel\").getAttribute(getScrollPosAttrName())\r\n  document.getElementById(\"rg2-left-info-panel-body\").scrollTop = scrollPos\r\n  redraw()\r\n}\r\n","import { postApi } from \"./api\"\r\nimport { alignMap, ctx, getCentreBottom, getCentreTop, redraw, resetMapState } from \"./canvas\"\r\nimport { config, getOverprintDetails, options, removeDrawnRouteDetails, saveDrawnRouteDetails } from \"./config\"\r\nimport { getCourseDetails, getCourseLegLengths, setCourseDisplay } from \"./courses\"\r\nimport { doGetEvents, getKartatEventID, loadEventByKartatID } from \"./events\"\r\nimport { GPSTrack, RouteData } from \"./gpstrack\"\r\nimport { getActiveTab, resetDrawDialog } from \"./rg2ui\"\r\nimport {\r\n  createNameDropdown,\r\n  getDeletionInfo,\r\n  getFullResultforResultID,\r\n  setScoreCourseDisplay,\r\n  resultIDExists\r\n} from \"./results\"\r\nimport { t } from \"./translate\"\r\nimport {\r\n  createModalDialog,\r\n  formatSecsAsMMSS,\r\n  getAngle,\r\n  getDistanceBetweenPoints,\r\n  getSecsFromHHMMSS,\r\n  showWarningDialog\r\n} from \"./utils\"\r\n\r\nconst alignmentTimerInterval = 50\r\nconst alignmentLoopCount = 20\r\nlet alignmentTimer = null\r\nlet alignments = []\r\nlet mapIsAligned = false\r\n\r\nlet trackColour = \"#ff0000\"\r\nlet routeToDelete = null\r\nlet trk = new GPSTrack()\r\ntrk.routeData = new RouteData()\r\nlet pendingCourseID = null\r\n// the RouteData versions of these have the start control removed for saving\r\nlet controlx = []\r\nlet controly = []\r\nlet angles = []\r\nlet nextControl = 0\r\nlet previousValidControlIndex = 0\r\nlet isScoreCourse = false\r\n\r\nfunction addNewPoint(x, y) {\r\n  // ignore input if we are still aligning map\r\n  if (mapIsAligned) {\r\n    if (closeEnough(x, y)) {\r\n      addRouteDataPoint(controlx[nextControl], controly[nextControl])\r\n      // angles will be wrong for missing splits since we don't know angles between non-consecutive controls and I\r\n      // don't intend to start calculating them now...\r\n      alignMapToAngle(nextControl)\r\n      previousValidControlIndex = nextControl\r\n      nextControl = getNextValidControl(nextControl)\r\n      if (nextControl === controlx.length) {\r\n        document.getElementById(\"btn-save-route\").removeAttribute(\"disabled\")\r\n        // show full map now that we have drawn the complete route\r\n        resetMapState()\r\n      }\r\n    } else {\r\n      addRouteDataPoint(Math.round(x), Math.round(y))\r\n    }\r\n    document.getElementById(\"btn-undo\").removeAttribute(\"disabled\")\r\n    redraw()\r\n  }\r\n}\r\n\r\nfunction addRouteDataPoint(x, y) {\r\n  trk.routeData.x.push(x)\r\n  trk.routeData.y.push(y)\r\n}\r\n\r\nfunction adjustBetweenTwoLockedPoints(p1, p2, handle) {\r\n  // case 5: adjust between two locked points\r\n  // see, there is an easier way\r\n  //console.log(\"Point (\", p1.x, \", \", p1.y, \") for handle \", handle.index, handle.basex, handle.basey)\r\n  const previousHandle = trk.handles.getPreviousLockedHandle(handle)\r\n  const nextHandle = trk.handles.getNextLockedHandle(handle)\r\n  // adjust route between previous locked handle and dragged point\r\n  scaleRotateAroundSingleLockedPoint(p1, p2, previousHandle, previousHandle.time, handle.time)\r\n  // adjust route between dragged point and next locked handle\r\n  scaleRotateAroundSingleLockedPoint(p1, p2, nextHandle, handle.time, nextHandle.time)\r\n}\r\n\r\nexport function adjustOffset(offset) {\r\n  trk.adjustOffset(offset)\r\n}\r\n\r\nexport function adjustTrack(p1, p2, button = undefined) {\r\n  // called whilst dragging a GPS track\r\n  //console.log(\"adjustTrack \", p1.x, p1.y, p2.x, p2.y)\r\n  // check if background is locked or right click\r\n  const chk = document.getElementById(\"chk-move-all\")\r\n  const moveAll = chk.checked\r\n  if (moveAll || button === config.RIGHT_CLICK) {\r\n    ctx.translate(p2.x - p1.x, p2.y - p1.y)\r\n  } else {\r\n    if (trk.handles.handlesLocked() > 0) {\r\n      if (trk.handles.handlesLocked() === 1) {\r\n        scaleRotateAroundSingleLockedPoint(\r\n          p1,\r\n          p2,\r\n          trk.handles.getSingleLockedHandle(),\r\n          trk.handles.getStartHandle().time,\r\n          trk.handles.getFinishHandle().time\r\n        )\r\n      } else {\r\n        // check if start of drag is on a handle\r\n        let handle = trk.handles.getHandleClicked(p1)\r\n        // we already know we have at least two points locked: cases to deal with from here\r\n        // 1: drag point not on a handle: exit\r\n        // 2: drag point on a locked handle: exit\r\n        // 3: drag point between start and a locked handle: scale and rotate around single point\r\n        // 4: drag point between locked handle and end: scale and rotate around single handle\r\n        // 5: drag point between two locked handles: shear around two fixed handles\r\n        //case 1\r\n        if (handle === undefined) {\r\n          return\r\n        }\r\n        // case 2\r\n        if (handle.locked) {\r\n          return\r\n        }\r\n        const earliest = trk.handles.getEarliestLockedHandle()\r\n        const latest = trk.handles.getLatestLockedHandle()\r\n\r\n        if (earliest.time >= handle.time) {\r\n          // case 3: drag point between start and a locked handle\r\n          scaleRotateAroundSingleLockedPoint(p1, p2, earliest, trk.handles.getStartHandle().time, earliest.time)\r\n        } else if (latest.time < handle.time) {\r\n          // case 4: drag point between locked handle and end\r\n          scaleRotateAroundSingleLockedPoint(p1, p2, latest, latest.time, trk.handles.getFinishHandle().time)\r\n        } else {\r\n          // case 5: adjust between two locked points\r\n          adjustBetweenTwoLockedPoints(p1, p2, handle)\r\n        }\r\n      }\r\n    } else {\r\n      // nothing locked so drag track\r\n      dragTrack(p2.x - p1.x, p2.y - p1.y)\r\n    }\r\n  }\r\n}\r\n\r\nfunction alignMapToAngle(control) {\r\n  if (options.alignMap && control < controlx.length - 1) {\r\n    mapIsAligned = false\r\n    alignments = []\r\n    const x = controlx[control]\r\n    const y = controly[control]\r\n    const x2 = controlx[control + 1]\r\n    const y2 = controly[control + 1]\r\n    // Set up array of transformations to move control to centre bottom of screen and rotate map\r\n    // so next control is straight up and near top of screen.\r\n    const from = getCentreBottom()\r\n    const to = getCentreTop()\r\n    const mapDistance = getDistanceBetweenPoints(x, y, x2, y2)\r\n    const screenDistance = getDistanceBetweenPoints(from.x, from.y, to.x, to.y)\r\n    let scale = Math.min(screenDistance / mapDistance, config.MAX_ZOOM)\r\n    scale = Math.max(scale, config.MIN_ZOOM)\r\n    let controlAngle\r\n    if (isScoreCourse) {\r\n      // need to calculate this here since score courses use variants for\r\n      // each person, not single courses\r\n      controlAngle = getAngle(controlx[control], controly[control], controlx[control + 1], controly[control + 1])\r\n    } else {\r\n      controlAngle = angles[control]\r\n    }\r\n    let angle = (ctx.displayAngle - controlAngle - Math.PI / 2) % (Math.PI * 2)\r\n    if (angle < -1 * Math.PI) {\r\n      angle = angle + 2 * Math.PI\r\n    }\r\n    for (let i = 1; i <= alignmentLoopCount; i = i + 1) {\r\n      let values = {}\r\n\r\n      // translations to move current control to centre bottom\r\n      values.x = from.x - ((from.x - x) * i) / alignmentLoopCount\r\n      values.y = from.y - ((from.y - y) * i) / alignmentLoopCount\r\n\r\n      // Rotation to get from current display angle to angle with next control straight up.\r\n      // Course angles are based on horizontal as 0: need to reset to north.\r\n      // Angle parameter is absolute angle to draw map.\r\n      values.angle = (ctx.displayAngle - (angle * i) / alignmentLoopCount) % (Math.PI * 2)\r\n\r\n      // scale to stretch map: value is a multiplier so use xth root each time and apply it x times\r\n      values.scale = Math.pow(scale, 1 / alignmentLoopCount)\r\n\r\n      alignments.push(values)\r\n    }\r\n    alignmentTimer = setInterval(() => {\r\n      incrementAlignmentTime()\r\n    }, alignmentTimerInterval)\r\n  } else {\r\n    alignMap(0, controlx[control], controly[control], false, 1)\r\n    mapIsAligned = true\r\n    alignmentTimer = null\r\n  }\r\n}\r\n\r\nexport function autofitGPSTrack() {\r\n  trk.autofitTrack()\r\n}\r\n\r\nfunction closeEnough(x, y) {\r\n  // snapto: test if drawn route is close enough to control\r\n  let range = options.snap ? 8 : 2\r\n  console.log(x, y, controlx[nextControl], controly[nextControl])\r\n  if (Math.abs(x - controlx[nextControl]) < range) {\r\n    if (Math.abs(y - controly[nextControl]) < range) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction confirmCourseChange() {\r\n  let dlg = {}\r\n  dlg.body = \"The route you have started to draw will be discarded. Are you sure you want to change the course?\"\r\n  dlg.title = \"Confirm course change\"\r\n  dlg.doText = \"Change course\"\r\n  dlg.onDo = doChangeCourse\r\n  dlg.onCancel = doCancelChangeCourse\r\n  createModalDialog(dlg)\r\n}\r\n\r\nexport function confirmDeleteRoute(id) {\r\n  routeToDelete = id\r\n  let dlg = {}\r\n  dlg.body = \"This route will be permanently deleted. Are you sure?\"\r\n  dlg.title = \"Confirm route delete\"\r\n  dlg.doText = \"Delete route\"\r\n  dlg.onDo = doDeleteRoute\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction doCancelChangeCourse() {\r\n  document.getElementById(\"rg2-select-course\").value = trk.routeData.courseid\r\n  document.getElementById(\"rg2-select-name\").value = trk.routeData.resultid\r\n  pendingCourseID = null\r\n}\r\n\r\nfunction doChangeCourse() {\r\n  doDrawingReset()\r\n  initialiseCourse(pendingCourseID)\r\n}\r\n\r\nfunction doDeleteRoute() {\r\n  const info = getDeletionInfo(routeToDelete)\r\n  const params = { type: \"deletemyroute\", id: getKartatEventID(), routeid: info.id }\r\n  postApi(JSON.stringify({ token: info.token }), params, handleRouteDeleted, \"Route save failed\")\r\n}\r\n\r\nfunction doDrawingReset() {\r\n  // remove any displayed courses before resetting drawing\r\n  if (trk.routeData.courseid !== null) {\r\n    setCourseDisplay(trk.routeData.courseid, false)\r\n  }\r\n  if (trk.routeData.resultid !== null) {\r\n    setScoreCourseDisplay(trk.routeData.resultid, false)\r\n  }\r\n  initialiseDrawing()\r\n}\r\n\r\nfunction doSaveRoute() {\r\n  setDeltas()\r\n  const params = { type: \"addroute\", id: trk.routeData.eventid }\r\n  postApi(JSON.stringify(trk.routeData), params, handleRouteSaved(trk.routeData.name), \"Route save failed\")\r\n  // reset route here to avoid annoying flash of redrawn route\r\n  doDrawingReset()\r\n}\r\n\r\nexport function dragEnded() {\r\n  if (trk.fileLoaded) {\r\n    // rebaseline GPS track\r\n    trk.savedBaseX = trk.baseX.slice(0)\r\n    trk.savedBaseY = trk.baseY.slice(0)\r\n    trk.baseX = trk.routeData.x.slice(0)\r\n    trk.baseY = trk.routeData.y.slice(0)\r\n    trk.handles.saveForUndo()\r\n    trk.handles.rebaselineXY()\r\n    document.getElementById(\"btn-undo-gps-adjust\").removeAttribute(\"disabled\")\r\n  }\r\n}\r\n\r\nexport function dragTrack(dx, dy) {\r\n  for (let i = 0; i < trk.baseX.length; i += 1) {\r\n    trk.routeData.x[i] = trk.baseX[i] + dx\r\n    trk.routeData.y[i] = trk.baseY[i] + dy\r\n  }\r\n  trk.handles.dragHandles(dx, dy)\r\n}\r\n\r\nexport function drawCircle(radius) {\r\n  ctx.arc(controlx[nextControl], controly[nextControl], radius, 0, 2 * Math.PI, false)\r\n  // fill in with transparent colour to highlight control better\r\n  ctx.fill()\r\n}\r\n\r\nexport function drawNewTrack() {\r\n  const opt = getOverprintDetails()\r\n  ctx.lineWidth = opt.overprintWidth\r\n  ctx.strokeStyle = config.RED\r\n  ctx.fillStyle = config.RED_30\r\n  // highlight next control if we have a course selected\r\n  if (nextControl > 0 && !trk.fileLoaded) {\r\n    ctx.beginPath()\r\n    if (nextControl < controlx.length - 1) {\r\n      // normal control\r\n      drawCircle(opt.controlRadius)\r\n    } else {\r\n      // finish\r\n      drawCircle(opt.finishInnerRadius)\r\n      ctx.stroke()\r\n      ctx.beginPath()\r\n      drawCircle(opt.finishOuterRadius)\r\n    }\r\n    // dot at centre of control circle\r\n    ctx.fillRect(controlx[nextControl] - 1, controly[nextControl] - 1, 3, 3)\r\n    ctx.stroke()\r\n  }\r\n  ctx.strokeStyle = trackColour\r\n  ctx.fillStyle = trackColour\r\n  ctx.font = \"10pt Arial\"\r\n  ctx.textAlign = \"left\"\r\n  ctx.globalAlpha = 0.6\r\n  drawRoute()\r\n  trk.handles.drawHandles()\r\n}\r\n\r\nfunction drawRoute() {\r\n  if (trk.routeData.x.length > 1) {\r\n    ctx.beginPath()\r\n    ctx.moveTo(trk.routeData.x[0], trk.routeData.y[0])\r\n    // don't bother with +3 second displays in GPS adjustment\r\n    for (let i = 1; i < trk.routeData.x.length; i += 1) {\r\n      ctx.lineTo(trk.routeData.x[i], trk.routeData.y[i])\r\n    }\r\n    ctx.stroke()\r\n  }\r\n}\r\n\r\nexport function getControlXY() {\r\n  return { x: controlx, y: controly }\r\n}\r\n\r\nfunction getNextValidControl(thisControl) {\r\n  // look through splits to find next control which has a split time\r\n  // to allow drawing for missed controls where the split time is 0\r\n  const splits = trk.routeData.splits\r\n  // allow for events with no results: splits will be a start and finish time only\r\n  // in this case just move to next control\r\n  if (splits.length === 2) {\r\n    return thisControl + 1\r\n  }\r\n  for (let i = thisControl + 1; i < splits.length; i += 1) {\r\n    if (splits[i] !== splits[i - 1]) {\r\n      return i\r\n    }\r\n  }\r\n  // implies we have no finish time which is unlikely but anyway...\r\n  return splits.length\r\n}\r\n\r\nfunction getPreviousValidControl(thisControl) {\r\n  // look through splits to find previous control which has a split time\r\n  // to allow drawing for missed controls where the split time is 0\r\n  const splits = trk.routeData.splits\r\n  // allow for events with no results: splits will be a start and finish time only\r\n  // in this case just move to previous control\r\n  if (splits.length === 2) {\r\n    return thisControl - 1\r\n  }\r\n  for (let i = thisControl - 1; i > 0; i -= 1) {\r\n    if (splits[i] !== splits[i - 1]) {\r\n      return i\r\n    }\r\n  }\r\n  // go back to start...\r\n  return 0\r\n}\r\n\r\nexport function gpsFileLoaded() {\r\n  return trk.fileLoaded\r\n}\r\n\r\nfunction handleRouteDeleted(response) {\r\n  if (response.ok) {\r\n    showWarningDialog(t(\"Route deleted\"), t(\"Route has been deleted\"))\r\n    removeDrawnRouteDetails({\r\n      eventid: parseInt(response.eventid, 10),\r\n      id: parseInt(response.routeid, 10)\r\n    })\r\n    doGetEvents()\r\n  } else {\r\n    showWarningDialog(t(\"Delete failed\"), t(\"Delete failed\"))\r\n  }\r\n}\r\n\r\nconst handleRouteSaved = (name) => (response) => {\r\n  if (response.ok) {\r\n    routeSaved(response, name)\r\n  } else {\r\n    showWarningDialog(name, t(\"Your route was not saved. Please try again\"))\r\n  }\r\n}\r\n\r\nfunction incrementAlignmentTime() {\r\n  if (alignments.length === 0) {\r\n    clearInterval(alignmentTimer)\r\n    alignmentTimer = null\r\n    mapIsAligned = true\r\n  } else {\r\n    const data = alignments.shift()\r\n    alignMap(data.angle, data.x, data.y, true, data.scale)\r\n  }\r\n  redraw()\r\n}\r\n\r\nfunction initialiseCourse(courseid) {\r\n  pendingCourseID = null\r\n  trk.routeData = new RouteData()\r\n  trk.routeData.eventid = getKartatEventID()\r\n  trk.routeData.courseid = courseid\r\n  const course = getCourseDetails(courseid)\r\n  isScoreCourse = course.isScoreCourse\r\n  // save details for normal courses\r\n  // can't do this here for score courses since you need to know the\r\n  // variant for a given runner\r\n  if (!isScoreCourse) {\r\n    setCourseDisplay(courseid, true)\r\n    trk.routeData.coursename = course.name\r\n    if (course.excludeType === config.EXCLUDED_ZERO_SPLITS) {\r\n      trk.routeData.controlsToAdjust = course.exclude.indexOf(true)\r\n    } else {\r\n      trk.routeData.controlsToAdjust = course.x.length - 1\r\n    }\r\n    controlx = course.x.slice()\r\n    controly = course.y.slice()\r\n    trk.routeData.x.length = 0\r\n    trk.routeData.y.length = 0\r\n    trk.routeData.x[0] = controlx[0]\r\n    trk.routeData.y[0] = controly[0]\r\n    trk.routeData.controlx = controlx.slice()\r\n    trk.routeData.controly = controly.slice()\r\n    angles = course.angle.slice()\r\n  }\r\n  document.getElementById(\"rg2-select-course\").value = trk.routeData.courseid\r\n  createNameDropdown(courseid)\r\n  redraw()\r\n}\r\n\r\nexport function initialiseDrawing() {\r\n  // called when we know we have an event loaded\r\n  trk = new GPSTrack()\r\n  trk.routeData = new RouteData()\r\n  // the RouteData versions of these have the start control removed for saving\r\n  controlx.length = 0\r\n  controly.length = 0\r\n  angles.length = 0\r\n  nextControl = 0\r\n  previousValidControlIndex = 0\r\n  isScoreCourse = false\r\n  trk.initialiseGPS()\r\n  resetDrawDialog()\r\n  redraw()\r\n}\r\n\r\nexport function mouseUp(x, y, button) {\r\n  // console.log(x, y)\r\n  // called after a click at (x, y)\r\n  const delta = 3\r\n  if (getActiveTab() !== config.TAB_DRAW) {\r\n    return\r\n  }\r\n  if (trk.fileLoaded) {\r\n    const handle = trk.handles.getHandleClicked({ x: x, y: y })\r\n    if (handle !== undefined) {\r\n      // delete or unlock if not first or last entry\r\n      if (button === config.RIGHT_CLICK && handle.index !== 0 && handle.index !== trk.handles.length) {\r\n        if (handle.locked) {\r\n          // unlock, don't delete\r\n          trk.handles.unlockHandle(handle.index)\r\n        } else {\r\n          // delete handle\r\n          trk.handles.deleteHandle(handle.index)\r\n        }\r\n      } else {\r\n        // clicked in a handle area so toggle state\r\n        if (handle.locked) {\r\n          trk.handles.unlockHandle(handle.index)\r\n        } else {\r\n          trk.handles.lockHandle(handle.index)\r\n        }\r\n      }\r\n    } else {\r\n      // not an existing handle so read through track to look for x,y\r\n      for (let i = 0; i < trk.baseX.length; i += 1) {\r\n        if (\r\n          trk.baseX[i] + delta >= x &&\r\n          trk.baseX[i] - delta <= x &&\r\n          trk.baseY[i] + delta >= y &&\r\n          trk.baseY[i] - delta <= y\r\n        ) {\r\n          // found on track so add new handle\r\n          trk.handles.addHandle(x, y, i)\r\n          break\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // drawing new track\r\n    // only allow drawing if we have valid name and course\r\n    if (trk.routeData.resultid !== null && trk.routeData.courseid !== null) {\r\n      addNewPoint(x, y)\r\n    } else {\r\n      showWarningDialog(\r\n        \"No course/name\",\r\n        \"Please select course, name and time before you start drawing a route or upload a file.\"\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport function readGPS(file) {\r\n  // show full map aligned to north\r\n  resetMapState()\r\n  trk.readGPS(file)\r\n}\r\n\r\nexport function resetDrawing() {\r\n  let dlg = {}\r\n  dlg.body = \"All information you have entered will be removed. Are you sure you want to reset?\"\r\n  dlg.title = \"Confirm reset\"\r\n  dlg.doText = \"Reset\"\r\n  dlg.onDo = doDrawingReset\r\n  createModalDialog(dlg)\r\n}\r\n\r\nfunction rotatePoint(x, y, angle) {\r\n  // rotation matrix: see http://en.wikipedia.org/wiki/Rotation_matrix\r\n  let pt = {}\r\n  pt.x = Math.cos(angle) * x - Math.sin(angle) * y\r\n  pt.y = Math.sin(angle) * x + Math.cos(angle) * y\r\n  return pt\r\n}\r\n\r\nfunction routeSaved(data, name) {\r\n  showWarningDialog(name, t(\"Your route has been saved\"))\r\n  saveDrawnRouteDetails({\r\n    eventid: parseInt(data.eventid, 10),\r\n    id: data.newid,\r\n    token: data.token\r\n  })\r\n  loadEventByKartatID(getKartatEventID())\r\n}\r\n\r\nexport function saveGPSRoute() {\r\n  // called to save GPS file route\r\n  // tidy up route details\r\n  const t = trk.routeData.time[trk.routeData.time.length - 1] - trk.routeData.time[0]\r\n  trk.routeData.totaltime = formatSecsAsMMSS(t)\r\n  // GPS uses UTC: adjust to local time based on local user setting\r\n  // only affects replay in real time\r\n  let date = new Date()\r\n  // returns offset in minutes, so convert to seconds\r\n  const offset = date.getTimezoneOffset() * 60\r\n  trk.routeData.startsecs = trk.routeData.time[0] - offset\r\n\r\n  for (let i = 0; i < trk.routeData.x.length; i += 1) {\r\n    trk.routeData.x[i] = Math.round(trk.routeData.x[i])\r\n    trk.routeData.y[i] = Math.round(trk.routeData.y[i])\r\n    // convert real time seconds to offset seconds from start time\r\n    trk.routeData.time[i] -= trk.routeData.startsecs\r\n  }\r\n  // allow for already having a GPS route for this runner\r\n  trk.routeData.resultid += config.GPS_RESULT_OFFSET\r\n  while (resultIDExists(trk.routeData.resultid)) {\r\n    trk.routeData.resultid += config.GPS_RESULT_OFFSET\r\n    // add marker(s) to name to show it is a duplicate\r\n    trk.routeData.name += \"*\"\r\n  }\r\n  trk.routeData.comments = document.getElementById(\"rg2-new-comments\").value\r\n  document.getElementById(\"btn-undo-gps-adjust\").setAttribute(\"disabled\", \"\")\r\n  doSaveRoute()\r\n}\r\n\r\nexport function saveRoute() {\r\n  // called to save manually entered route\r\n  trk.routeData.comments = document.getElementById(\"rg2-new-comments\").value\r\n  trk.routeData.controlx = controlx\r\n  trk.routeData.controly = controly\r\n  // don't need start control so remove it\r\n  trk.routeData.controlx.splice(0, 1)\r\n  trk.routeData.controly.splice(0, 1)\r\n  doSaveRoute()\r\n}\r\n\r\nfunction scaleRotateAroundSingleLockedPoint(p1, p2, p3, fromTime, toTime) {\r\n  // rotate p1 to p2 around p3\r\n  // scale and rotate track around single locked point\r\n  const scale = getDistanceBetweenPoints(p2.x, p2.y, p3.x, p3.y) / getDistanceBetweenPoints(p1.x, p1.y, p3.x, p3.y)\r\n  const angle = getAngle(p2.x, p2.y, p3.x, p3.y) - getAngle(p1.x, p1.y, p3.x, p3.y)\r\n  //console.log (p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, scale, angle, fromTime, toTime)\r\n  for (let i = fromTime; i <= toTime; i += 1) {\r\n    const pt = rotatePoint(trk.baseX[i] - p3.x, trk.baseY[i] - p3.y, angle)\r\n    trk.routeData.x[i] = pt.x * scale + p3.x\r\n    trk.routeData.y[i] = pt.y * scale + p3.y\r\n  }\r\n  trk.handles.alignHandles(trk.routeData)\r\n}\r\n\r\nfunction setDeltas() {\r\n  // send as differences rather than absolute values: provides almost 50% reduction in size of json file\r\n  for (let i = trk.routeData.x.length - 1; i > 0; i -= 1) {\r\n    trk.routeData.x[i] = trk.routeData.x[i] - trk.routeData.x[i - 1]\r\n    trk.routeData.y[i] = trk.routeData.y[i] - trk.routeData.y[i - 1]\r\n  }\r\n  // in theory time is same length as x and y but why take the risk...\r\n  for (let i = trk.routeData.time.length - 1; i > 0; i -= 1) {\r\n    trk.routeData.time[i] = trk.routeData.time[i] - trk.routeData.time[i - 1]\r\n  }\r\n}\r\n\r\nexport function setDrawingCourse(courseid) {\r\n  if (!isNaN(courseid)) {\r\n    if (trk.routeData.courseid !== null) {\r\n      // already have a course so we are trying to change it\r\n      if (trk.routeData.x.length > 1) {\r\n        // drawing started so ask to confirm change\r\n        pendingCourseID = courseid\r\n        confirmCourseChange()\r\n      } else {\r\n        // nothing done yet so just change course\r\n        if (trk.routeData.resultid !== null) {\r\n          setScoreCourseDisplay(trk.routeData.resultid, false)\r\n        }\r\n        setCourseDisplay(trk.routeData.courseid, false)\r\n        initialiseCourse(courseid)\r\n      }\r\n    } else {\r\n      // first time course has been selected\r\n      initialiseCourse(courseid)\r\n    }\r\n  }\r\n}\r\n\r\nexport function setName(resultid) {\r\n  // callback from select box when we have results\r\n  if (!isNaN(resultid)) {\r\n    const res = getFullResultforResultID(resultid)\r\n    if (res.hasValidTrack) {\r\n      const msg =\r\n        t(\"If you draw a new route it will overwrite the old route for this runner.\") +\r\n        \" \" +\r\n        t(\"GPS routes are saved separately and will not be overwritten.\")\r\n      showWarningDialog(t(\"Route already drawn\"), msg)\r\n    }\r\n    // remove old course from display just in case we missed it somewhere else\r\n    if (trk.routeData.resultid !== null) {\r\n      setScoreCourseDisplay(trk.routeData.resultid, false)\r\n    }\r\n    trk.routeData.resultid = res.resultid\r\n    trk.routeData.name = res.name\r\n    trk.routeData.splits = res.splits\r\n    // set up individual course if this is a score event\r\n    if (isScoreCourse) {\r\n      setScoreCourseDisplay(res.resultid, true)\r\n      controlx = res.scorex\r\n      controly = res.scorey\r\n      trk.routeData.x.length = 0\r\n      trk.routeData.y.length = 0\r\n      trk.routeData.x[0] = controlx[0]\r\n      trk.routeData.y[0] = controly[0]\r\n      trk.routeData.controlx = controlx\r\n      trk.routeData.controly = controly\r\n      nextControl = 1\r\n      redraw()\r\n    } else {\r\n      nextControl = getNextValidControl(0)\r\n      previousValidControlIndex = 0\r\n    }\r\n    startDrawing()\r\n  }\r\n}\r\n\r\nexport function setNameAndTime() {\r\n  // callback for an entered name when no results available\r\n  const nameEntry = document.getElementById(\"rg2-name-entry\")\r\n  const name = nameEntry.value.trim()\r\n  if (name) {\r\n    nameEntry.classList.add(\"is-valid\")\r\n  } else {\r\n    nameEntry.classList.remove(\"is-valid\")\r\n  }\r\n  const timeEntry = document.getElementById(\"rg2-time-entry\")\r\n  let time = timeEntry.value.trim()\r\n  // matches something like 0:00 to 999:59\r\n  if (time.match(/\\d+[:.][0-5]\\d$/)) {\r\n    timeEntry.classList.add(\"is-valid\")\r\n  } else {\r\n    timeEntry.classList.remove(\"is-valid\")\r\n    time = null\r\n  }\r\n  if (name && time && trk.routeData.courseid !== null) {\r\n    time = time.replace(\".\", \":\")\r\n    trk.routeData.name = name\r\n    trk.routeData.resultid = 0\r\n    trk.routeData.totaltime = time\r\n    trk.routeData.startsecs = 0\r\n    trk.routeData.time[0] = getSecsFromHHMMSS(time)\r\n    trk.routeData.totalsecs = getSecsFromHHMMSS(time)\r\n    nextControl = 1\r\n    const distanceSoFar = getCourseLegLengths(trk.routeData.courseid)\r\n    const length = distanceSoFar[distanceSoFar.length - 1]\r\n    // generate pro rata splits\r\n    let splits = []\r\n    for (let i = 0; i < distanceSoFar.length; i = i + 1) {\r\n      splits[i] = parseInt((distanceSoFar[i] / length) * trk.routeData.totalsecs, 10)\r\n    }\r\n    trk.routeData.splits = splits\r\n    previousValidControlIndex = 0\r\n    startDrawing()\r\n  }\r\n}\r\n\r\nexport function showCourseInProgress() {\r\n  if (trk.routeData.courseid !== null) {\r\n    if (isScoreCourse) {\r\n      setScoreCourseDisplay(trk.routeData.resultid, true)\r\n    } else {\r\n      setCourseDisplay(trk.routeData.courseid, true)\r\n    }\r\n  }\r\n}\r\n\r\nexport function startDrawing() {\r\n  document.getElementById(\"btn-three-seconds\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"btn-reset-drawing\").removeAttribute(\"disabled\", \"\")\r\n  // setting value to null allows you to open the same file again if needed\r\n  // TODO really???\r\n  const file = document.getElementById(\"rg2-load-gps-file\")\r\n  file.removeAttribute(\"disabled\")\r\n  alignMapToAngle(0)\r\n  redraw()\r\n}\r\n\r\nexport function undoGPSAdjust() {\r\n  // restore route from before last adjust operation\r\n  trk.baseX = trk.savedBaseX.slice(0)\r\n  trk.baseY = trk.savedBaseY.slice(0)\r\n  trk.routeData.x = trk.savedBaseX.slice(0)\r\n  trk.routeData.y = trk.savedBaseY.slice(0)\r\n  trk.handles.undo()\r\n  const btn = document.getElementById(\"btn-undo-gps-adjust\")\r\n  btn.setAttribute(\"disabled\", \"\")\r\n  redraw()\r\n}\r\n\r\nexport function undoLastPoint() {\r\n  // ignore if we are still aligning map\r\n  if (mapIsAligned) {\r\n    // remove last point if we have one\r\n    const points = trk.routeData.x.length\r\n    if (points > 1) {\r\n      // are we undoing from previous control?\r\n      if (\r\n        controlx[previousValidControlIndex] === trk.routeData.x[points - 1] &&\r\n        controly[previousValidControlIndex] === trk.routeData.y[points - 1]\r\n      ) {\r\n        // are we undoing from the finish?\r\n        if (nextControl === controlx.length) {\r\n          document.getElementById(\"btn-save-route\").setAttribute(\"disabled\", \"\")\r\n        }\r\n        nextControl = previousValidControlIndex\r\n        previousValidControlIndex = getPreviousValidControl(nextControl)\r\n        // don't do anything clever about realigning map: just leave it as it is\r\n      }\r\n      trk.routeData.x.pop()\r\n      trk.routeData.y.pop()\r\n    }\r\n    // note that array length has changed so can't use points\r\n    if (trk.routeData.x.length > 1) {\r\n      document.getElementById(\"btn-undo\").removeAttribute(\"disabled\")\r\n    } else {\r\n      document.getElementById(\"btn-undo\").setAttribute(\"disabled\", \"\")\r\n    }\r\n    redraw()\r\n  }\r\n}\r\n\r\nexport function waitThreeSeconds() {\r\n  // insert a new point in the same place as the last point\r\n  addRouteDataPoint(trk.routeData.x[trk.routeData.x.length - 1], trk.routeData.y[trk.routeData.y.length - 1])\r\n  redraw()\r\n}\r\n","export class Worldfile {\r\n  // see http://en.wikipedia.org/wiki/World_file\r\n  constructor(wf) {\r\n    if (wf.A === undefined) {\r\n      this.valid = false\r\n      this.A = 0\r\n      this.B = 0\r\n      this.C = 0\r\n      this.D = 0\r\n      this.E = 0\r\n      this.F = 0\r\n    } else {\r\n      this.A = parseFloat(wf.A)\r\n      this.B = parseFloat(wf.B)\r\n      this.C = parseFloat(wf.C)\r\n      this.D = parseFloat(wf.D)\r\n      this.E = parseFloat(wf.E)\r\n      this.F = parseFloat(wf.F)\r\n      this.valid = true\r\n      // helps make later calculations easier\r\n      this.AEDB = wf.A * wf.E - wf.D * wf.B\r\n      this.xCorrection = wf.B * wf.F - wf.E * wf.C\r\n      this.yCorrection = wf.D * wf.C - wf.A * wf.F\r\n    }\r\n  }\r\n\r\n  // use worldfile to generate latitude\r\n  getLat(x, y) {\r\n    return this.D * x + this.E * y + this.F\r\n  }\r\n\r\n  // use worldfile to generate longitude\r\n  getLon(x, y) {\r\n    return this.A * x + this.B * y + this.C\r\n  }\r\n\r\n  // use worldfile to generate X value\r\n  getX(lng, lat) {\r\n    return Math.round((this.E * lng - this.B * lat + this.xCorrection) / this.AEDB)\r\n  }\r\n\r\n  // use worldfile to generate y value\r\n  getY(lng, lat) {\r\n    return Math.round((-1 * this.D * lng + this.A * lat + this.yCorrection) / this.AEDB)\r\n  }\r\n}\r\n","import { Worldfile } from \"./worldfile\"\r\n\r\nexport class Event {\r\n  constructor(data) {\r\n    this.kartatid = data.id\r\n    this.mapid = data.mapid\r\n    this.format = data.format\r\n    this.name = data.name\r\n    this.date = data.date\r\n    this.club = data.club\r\n    this.rawtype = data.type\r\n    switch (data.type) {\r\n      case \"I\":\r\n        this.type = \"International event\"\r\n        break\r\n      case \"N\":\r\n        this.type = \"National event\"\r\n        break\r\n      case \"R\":\r\n        this.type = \"Regional event\"\r\n        break\r\n      case \"L\":\r\n        this.type = \"Local event\"\r\n        break\r\n      case \"T\":\r\n        this.type = \"Training event\"\r\n        break\r\n      default:\r\n        this.type = \"Unknown\"\r\n        break\r\n    }\r\n    this.comment = data.comment\r\n    this.locked = data.locked\r\n    this.courses = 0\r\n    if (data.suffix === undefined) {\r\n      this.mapfilename = this.mapid + \".\" + \"jpg\"\r\n    } else {\r\n      this.mapfilename = this.mapid + \".\" + data.suffix\r\n    }\r\n    this.worldfile = new Worldfile(data)\r\n  }\r\n}\r\n","import { getApi } from \"./api\"\r\nimport { resetAnimation } from \"./animation\"\r\nimport { loadNewMap, getMapSize, redraw } from \"./canvas\"\r\nimport { config } from \"./config\"\r\nimport { controls, deleteAllCourses, getExcludedText, saveCourses } from \"./courses\"\r\nimport { initialiseDrawing } from \"./draw\"\r\nimport { Event } from \"./event\"\r\nimport { getHashID, setEventHash } from \"./hash\"\r\nimport { decode } from \"html-entities\"\r\nimport { deleteResultsForEvent, getCommentsForEvent, getResultsStats, saveResults, saveRoutes } from \"./results\"\r\nimport { createEventMenu } from \"./rg2ui\"\r\nimport { t } from \"./translate\"\r\nimport { getDistanceBetweenPoints, getLatLonDistance } from \"./utils\"\r\n\r\nlet events = []\r\nlet activeEventID = null\r\nlet eventRequestInProgress = false\r\n\r\nfunction configureUIForNewEvent(kartatid) {\r\n  const events = document.querySelectorAll(\"#rg2-event-table tr\")\r\n  // highlight active event in event list\r\n  for (let row of events) {\r\n    if (parseInt(row.dataset.kartatid, 10) === kartatid) {\r\n      row.classList.add(\"table-success\")\r\n    } else {\r\n      row.classList.remove(\"table-success\")\r\n    }\r\n  }\r\n  const btnSplitsbrowser = document.getElementById(\"btn-splitsbrowser\")\r\n  if (rg2Config.enable_splitsbrowser && eventHasResults()) {\r\n    btnSplitsbrowser.removeAttribute(\"disabled\")\r\n  } else {\r\n    btnSplitsbrowser.setAttribute(\"disabled\", \"\")\r\n  }\r\n  document.getElementById(\"btn-toggle-controls\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"btn-runners\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"btn-measure\").removeAttribute(\"disabled\")\r\n  document.getElementById(\"btn-stats\").removeAttribute(\"disabled\")\r\n}\r\n\r\nfunction doGetEvent(kartatid) {\r\n  setActiveEventIDByKartatID(null)\r\n  const params = { type: \"event\", id: kartatid }\r\n  getApi(params, handleEventResponse, \"Event request failed\")\r\n}\r\n\r\nexport function doGetEvents() {\r\n  const params = { type: \"events\" }\r\n  getApi(params, handleEventsResponse, \"Events request failed\")\r\n}\r\n\r\nexport function eventIsLocked() {\r\n  if (activeEventID === null) {\r\n    return false\r\n  }\r\n  return events[activeEventID].locked\r\n}\r\n\r\nexport function eventLoadFailed() {\r\n  eventRequestInProgress = false\r\n}\r\n\r\nexport function formatEvents() {\r\n  let html = \"<table class='table table-striped table-hover table-sm'><tbody id='rg2-event-table'>\"\r\n  for (let i = events.length - 1; i >= 0; i -= 1) {\r\n    let title = t(events[i].type, \"\") + \": \" + events[i].date\r\n    if (events[i].comment !== \"\") {\r\n      title += \": \" + events[i].comment\r\n    }\r\n    let comment = \"\"\r\n    if (events[i].comment !== \"\") {\r\n      comment = `<i class='bi-info-circle' id='info-${i}'></i>`\r\n    }\r\n    let georef = \"\"\r\n    if (events[i].worldfile.valid) {\r\n      georef = `<i class='bi-globe' id='info-${i}'></i>`\r\n    }\r\n    let lock = \"\"\r\n    if (events[i].locked) {\r\n      lock = `<i class='bi-lock-fill' id='info-${i}'></i>`\r\n    }\r\n    html += `<tr data-kartatid=\"${events[i].kartatid}\"><td class=\"event-date\">${events[i].date}</td><td title='${title}'>`\r\n    html += `${events[i].name} ${lock} ${georef} ${comment}</td ></tr >`\r\n  }\r\n  html += `</tbody></table>`\r\n  return html\r\n}\r\n\r\nfunction getActiveEventDate() {\r\n  if (activeEventID !== null) {\r\n    return events[activeEventID].date\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function getActiveEventID() {\r\n  return activeEventID\r\n}\r\n\r\nexport function getActiveKartatID() {\r\n  if (activeEventID !== null) {\r\n    return events[activeEventID].kartatid\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport function getActiveEventName() {\r\n  if (activeEventID !== null) {\r\n    return events[activeEventID].name\r\n  }\r\n  return \"Routegadget 2\"\r\n}\r\n\r\nexport function getActiveMapID() {\r\n  if (activeEventID !== null) {\r\n    return events[activeEventID].mapid\r\n  }\r\n  return null\r\n}\r\n\r\nexport function getEventIDForKartatID(kartatid) {\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].kartatid === kartatid) {\r\n      return i\r\n    }\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport function eventHasResults() {\r\n  if (activeEventID !== null) {\r\n    return (\r\n      events[activeEventID].format === config.FORMAT_NORMAL ||\r\n      events[activeEventID].format === config.FORMAT_SCORE_EVENT\r\n    )\r\n  }\r\n  return true\r\n}\r\n\r\nexport function getEventInfoForKartatID(kartatid) {\r\n  kartatid = kartatid || getKartatEventID()\r\n  const realid = getEventIDForKartatID(kartatid)\r\n  let info = events[realid]\r\n  info.id = realid\r\n  info.controls = controls.getControlCount()\r\n  info.exclude = getExcludedText()\r\n  return info\r\n}\r\n\r\nexport function getEventStats() {\r\n  // check there is an event to report on\r\n  if (activeEventID === null) {\r\n    return \"\"\r\n  }\r\n  const id = getKartatEventID()\r\n  const eventinfo = getEventInfoForKartatID(parseInt(id, 10))\r\n  let stats = `<div class='fs-4 fw-bolder pb-3'>${t(\"Event statistics\")}</div>`\r\n  stats += `<table class='table table-sm table-striped-columns table-bordered'><tbody>`\r\n  stats += `<tr><td>${t(\"Event\")}</td><td>${eventinfo.name}:&nbsp;${eventinfo.date}</td></tr>`\r\n  if (eventinfo.comment) {\r\n    stats += `<tr><td>${t(\"Comments\")}</td><td>${eventinfo.comment}</td></tr>`\r\n  }\r\n  stats += getResultsStats(eventinfo.controls, eventinfo.worldfile.valid)\r\n  stats += `</tbody></table>`\r\n  stats += `<hr class=\"border border-primary opacity-75\" />`\r\n  stats += getCommentsForEvent()\r\n  // #177 not pretty but gets round problems of double encoding\r\n  stats = stats.replace(/&amp;/g, \"&\")\r\n  return stats\r\n}\r\n\r\nexport function getKartatEventID() {\r\n  if (activeEventID === null) {\r\n    return null\r\n  }\r\n  return events[activeEventID].kartatid\r\n}\r\n\r\nexport function getLengthUnits() {\r\n  if (activeEventID === null || !mapIsGeoreferenced()) {\r\n    return \"px\"\r\n  }\r\n  return \"m\"\r\n}\r\n\r\nexport function getMapFileName(kartatid) {\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].kartatid === kartatid) {\r\n      return events[i].mapfilename\r\n    }\r\n  }\r\n  return \"\"\r\n}\r\n\r\nexport function getMetresPerPixel() {\r\n  if (activeEventID === null || !mapIsGeoreferenced()) {\r\n    return undefined\r\n  }\r\n  const size = getMapSize()\r\n  const pixels = getDistanceBetweenPoints(0, 0, size.width, size.height)\r\n  const w = events[activeEventID].worldfile\r\n  const lon1 = w.C\r\n  const lat1 = w.F\r\n  const lon2 = w.A * size.width + w.B * size.height + w.C\r\n  const lat2 = w.D * size.width + w.E * size.height + w.F\r\n  return getLatLonDistance(lat1, lon1, lat2, lon2) / pixels\r\n}\r\n\r\nexport function getWorldFile() {\r\n  if (activeEventID === null) {\r\n    return null\r\n  }\r\n  return events[activeEventID].worldfile\r\n}\r\n\r\nfunction handleEventResponse(response, kartatid) {\r\n  eventRequestInProgress = false\r\n  setEventHash(kartatid)\r\n  setActiveEventIDByKartatID(kartatid)\r\n  setEventTitleBar()\r\n  saveCourses(response.courses)\r\n  saveResults(response.results)\r\n  saveRoutes(response.routes)\r\n  initialiseDrawing()\r\n  configureUIForNewEvent(kartatid)\r\n}\r\n\r\nfunction handleEventsResponse(response) {\r\n  events.length = 0\r\n  activeEventID = null\r\n  for (const event of response.events) {\r\n    events.push(new Event(event))\r\n  }\r\n  createEventMenu()\r\n  // load requested event if set\r\n  // input is kartat ID so need to find internal ID first\r\n  const kartatid = getHashID()\r\n  if (kartatid) {\r\n    loadEventByKartatID(kartatid)\r\n  }\r\n  if (config.managing()) {\r\n    rg2Config.manager.eventListLoaded(events)\r\n  }\r\n}\r\n\r\nexport function isScoreEvent() {\r\n  if (activeEventID !== null) {\r\n    return (\r\n      events[activeEventID].format === config.FORMAT_SCORE_EVENT ||\r\n      events[activeEventID].format === config.FORMAT_SCORE_EVENT_NO_RESULTS\r\n    )\r\n  }\r\n  return false\r\n}\r\n\r\nexport function isValidKartatID(id) {\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].kartatid === id) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function loadEventByKartatID(kartatid) {\r\n  // prevent double loading if user double clicks on event or we get a garbage event id from a hash\r\n  if (eventRequestInProgress || !isValidKartatID(kartatid)) {\r\n    return\r\n  }\r\n  eventRequestInProgress = true\r\n  // clear animation first to avoid redraw problems as things get deleted\r\n  resetAnimation()\r\n  deleteResultsForEvent()\r\n  deleteAllCourses()\r\n  loadNewMap(rg2Config.maps_url + getMapFileName(kartatid))\r\n  document.getElementById(\"rg2-load-progress-label\").textContent = t(\"Loading event\", \"\")\r\n  document.getElementById(\"rg2-load-progress\").classList.remove(\"d-none\")\r\n  doGetEvent(kartatid)\r\n  redraw()\r\n}\r\n\r\nexport function mapIDIsInUse(mapID) {\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].mapid === mapID) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function mapIsGeoreferenced() {\r\n  if (activeEventID === null) {\r\n    return false\r\n  }\r\n  return events[activeEventID].worldfile.valid\r\n}\r\n\r\nexport function setActiveEventIDByKartatID(kartatid) {\r\n  activeEventID = null\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    if (events[i].kartatid === kartatid) {\r\n      activeEventID = i\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nexport function setEventTitleBar() {\r\n  let title = \"\"\r\n  title = getActiveEventDate() + \" \" + decode(getActiveEventName())\r\n  document.title = title\r\n  if (mapIsGeoreferenced()) {\r\n    title = \"<i class='bi-globe'>&nbsp;</i>\" + title\r\n  }\r\n  if (eventIsLocked()) {\r\n    title = \"<i class='bi-lock-fill'>&nbsp;</i>\" + title\r\n  }\r\n  document.getElementById(\"rg2-event-title\").innerHTML = title\r\n}\r\n","import { getAngle, getDistanceBetweenPoints } from \"./utils\"\r\nimport { getMetresPerPixel } from \"./events\"\r\nimport { getOverprintDetails } from \"./config\"\r\nimport { ctx } from \"./canvas\"\r\nimport { controls } from \"./courses\"\r\n\r\nexport class Course {\r\n  constructor(data, isScoreCourse) {\r\n    this.name = data.name\r\n    this.trackcount = 0\r\n    this.display = false\r\n    this.courseid = data.courseid\r\n    this.codes = data.codes\r\n    this.setExcluded(data)\r\n    this.filterTo = this.codes.length\r\n    this.filterFrom = 0\r\n    this.x = data.xpos\r\n    this.y = data.ypos\r\n    this.isScoreCourse = isScoreCourse\r\n    this.resultcount = 0\r\n    // save angle to next control to simplify later calculations\r\n    this.angle = []\r\n    // save angle to show control code text\r\n    this.textAngle = []\r\n    this.setAngles()\r\n    this.length = this.setLength()\r\n  }\r\n\r\n  drawCourse(intensity) {\r\n    if (this.display) {\r\n      const opt = getOverprintDetails()\r\n      ctx.globalAlpha = intensity\r\n      controls.drawStart(this.x[0], this.y[0], \"\", this.angle[0], opt)\r\n      // don't join up controls for score events\r\n      if (!this.isScoreCourse) {\r\n        const filter = { from: this.filterFrom, to: this.filterTo }\r\n        this.drawLinesBetweenControls({ x: this.x, y: this.y }, this.angle, opt, filter)\r\n      }\r\n      if (this.isScoreCourse) {\r\n        for (let i = 1; i < this.x.length; i += 1) {\r\n          if (this.codes[i].indexOf(\"F\") === 0 || this.codes[i].indexOf(\"M\") === 0) {\r\n            controls.drawFinish(this.x[i], this.y[i], \"\", opt)\r\n          } else {\r\n            controls.drawSingleControl(this.x[i], this.y[i], this.codes[i], this.textAngle[i], opt)\r\n          }\r\n        }\r\n      } else {\r\n        // don't want to draw an extra circle round the start or finish\r\n        const from = Math.max(this.filterFrom, 1)\r\n        const to = Math.min(this.filterTo + 1, this.x.length - 1)\r\n        for (let i = from; i < to; i += 1) {\r\n          controls.drawSingleControl(this.x[i], this.y[i], i, this.textAngle[i], opt)\r\n        }\r\n        controls.drawFinish(this.x[this.x.length - 1], this.y[this.y.length - 1], \"\", opt)\r\n      }\r\n    }\r\n  }\r\n\r\n  drawLinesBetweenControls(pt, angle, opt, filter) {\r\n    let dist\r\n    for (let i = filter.from; i < filter.to; i += 1) {\r\n      if (i === 0) {\r\n        dist = opt.startTriangleLength\r\n      } else {\r\n        dist = opt.controlRadius\r\n      }\r\n      const c1x = pt.x[i] + dist * Math.cos(angle[i])\r\n      const c1y = pt.y[i] + dist * Math.sin(angle[i])\r\n      //Assume the last control in the array is a finish\r\n      if (i === this.x.length - 2) {\r\n        dist = opt.finishOuterRadius\r\n      } else {\r\n        dist = opt.controlRadius\r\n      }\r\n      const c2x = pt.x[i + 1] - dist * Math.cos(angle[i])\r\n      const c2y = pt.y[i + 1] - dist * Math.sin(angle[i])\r\n      ctx.beginPath()\r\n      ctx.moveTo(c1x, c1y)\r\n      ctx.lineTo(c2x, c2y)\r\n      ctx.stroke()\r\n    }\r\n  }\r\n\r\n  getLegLengths() {\r\n    // used for events with no results to allow pro rata splits\r\n    let distanceSoFar = []\r\n    if (this.isScoreCourse) {\r\n      // arbitrary for now...\r\n      distanceSoFar[1] = 1\r\n      return distanceSoFar\r\n    }\r\n    distanceSoFar[0] = 0\r\n    for (let i = 1; i < this.x.length; i += 1) {\r\n      distanceSoFar[i] = parseInt(\r\n        distanceSoFar[i - 1] + getDistanceBetweenPoints(this.x[i], this.y[i], this.x[i - 1], this.y[i - 1]),\r\n        0\r\n      )\r\n    }\r\n    return distanceSoFar\r\n  }\r\n\r\n  incrementTracksCount() {\r\n    this.trackcount += 1\r\n  }\r\n\r\n  setAngles() {\r\n    for (let i = 0; i < this.x.length - 1; i += 1) {\r\n      if (this.isScoreCourse) {\r\n        // align score event start triangle and controls upwards\r\n        this.angle[i] = Math.PI * 1.5\r\n        this.textAngle[i] = Math.PI * 0.25\r\n      } else {\r\n        // angle of line to next control\r\n        this.angle[i] = getAngle(this.x[i], this.y[i], this.x[i + 1], this.y[i + 1])\r\n        // create bisector of angle to position number\r\n        const c1x = Math.sin(this.angle[i - 1])\r\n        const c1y = Math.cos(this.angle[i - 1])\r\n        const c2x = Math.sin(this.angle[i]) + c1x\r\n        const c2y = Math.cos(this.angle[i]) + c1y\r\n        const c3x = c2x / 2\r\n        const c3y = c2y / 2\r\n        this.textAngle[i] = getAngle(c3x, c3y, c1x, c1y)\r\n      }\r\n    }\r\n    // angle for finish aligns to north\r\n    this.angle[this.x.length - 1] = Math.PI * 1.5\r\n    this.textAngle[this.x.length - 1] = Math.PI * 1.5\r\n  }\r\n\r\n  setDisplay(display) {\r\n    this.display = display\r\n  }\r\n\r\n  setExcluded(data) {\r\n    this.excludeType = data.excludeType\r\n    this.exclude = data.codes.map((control, i) => {\r\n      if (data.exclude.findIndex((ex) => ex === i) > -1) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    })\r\n    this.allowed = data.codes.map((control, i) => {\r\n      if (data.exclude.findIndex((ex) => ex === i) > -1) {\r\n        return data.allowed[data.exclude.findIndex((ex) => ex === i)]\r\n      } else {\r\n        return 0\r\n      }\r\n    })\r\n  }\r\n\r\n  setLength() {\r\n    let length = 0\r\n    const metresPerPixel = getMetresPerPixel()\r\n    if (metresPerPixel === undefined || this.isScoreCourse) {\r\n      return undefined\r\n    }\r\n    for (let i = 1; i < this.x.length; i += 1) {\r\n      length += getDistanceBetweenPoints(this.x[i], this.y[i], this.x[i - 1], this.y[i - 1])\r\n    }\r\n    if (length === 0) {\r\n      return undefined\r\n    } else {\r\n      return ((length * metresPerPixel) / 1000).toFixed(1)\r\n    }\r\n  }\r\n}\r\n","import { redraw } from \"./canvas\"\r\nimport { config } from \"./config\"\r\nimport { Controls } from \"./controls\"\r\nimport { Course } from \"./course\"\r\nimport { setDrawingCourse } from \"./draw\"\r\nimport { isScoreEvent } from \"./events\"\r\nimport { decode } from \"html-entities\"\r\nimport { anyTracksForCourseDisplayed, countResultsByCourseID } from \"./results\"\r\nimport { t } from \"./translate\"\r\nimport { generateOption } from \"./utils\"\r\nimport \"toolcool-range-slider\"\r\n\r\n// indexed by the provided courseid which omits 0 and hence a sparse array\r\n// careful when iterating or getting length!\r\nlet courses = []\r\nexport let controls = undefined\r\nlet totaltracks = 0\r\nlet numberOfCourses = 0\r\nlet highestControlNumber = 0\r\n\r\nfunction addCourse(data) {\r\n  courses[data.courseid] = new Course(data, isScoreEvent())\r\n  numberOfCourses += 1\r\n  // allow for courses with no defined controls\r\n  // careful here: != catches null and undefined, but !== just catches undefined\r\n  if (courses[data.courseid].codes !== undefined) {\r\n    if (courses[data.courseid].codes.length > highestControlNumber) {\r\n      // the codes includes Start and Finish: we don't need F so subtract 1 to get controls\r\n      highestControlNumber = courses[data.courseid].codes.length - 1\r\n    }\r\n  }\r\n}\r\n\r\nexport function allCoursesDisplayed() {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      if (!courses[i].display) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport function createCourseDropdown() {\r\n  let dropdown = document.getElementById(\"rg2-select-course\")\r\n  dropdown.innerHTML = \"\"\r\n  dropdown.options.add(generateOption(null, t(\"Select course\", \"\")))\r\n  for (let i = 0; i < courses.length; i = i + 1) {\r\n    if (courses[i] !== undefined) {\r\n      dropdown.options.add(generateOption(i, decode(courses[i].name)))\r\n    }\r\n  }\r\n  dropdown.addEventListener(\"change\", (e) => {\r\n    setDrawingCourse(parseInt(e.target.value, 10))\r\n  })\r\n}\r\n\r\nexport function createCourseMenu() {\r\n  const el = document.getElementById(\"rg2-course-table\")\r\n  el.innerHTML = formatCourses()\r\n  const filterTable = document.getElementById(\"rg2-course-filter-table\")\r\n  filterTable.innerHTML = formatCourseFilters()\r\n  const filters = document.querySelectorAll(\"[data-course-filter]\")\r\n  filters.forEach((filter) => {\r\n    filter.addEventListener(\"change\", filterChanged)\r\n  })\r\n}\r\n\r\nexport function deleteAllCourses() {\r\n  courses.length = 0\r\n  totaltracks = 0\r\n  numberOfCourses = 0\r\n  highestControlNumber = 0\r\n}\r\n\r\nexport function drawCourses(intensity) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      courses[i].drawCourse(intensity)\r\n    }\r\n  }\r\n}\r\n\r\nexport function drawLinesBetweenControls(pt, angle, courseid, opt, filter) {\r\n  courses[courseid].drawLinesBetweenControls(pt, angle, opt, filter)\r\n}\r\n\r\nfunction filterChanged(e) {\r\n  const courseid = parseInt(e.target.dataset.courseFilter, 10)\r\n  courses[courseid].filterFrom = e.detail.value1\r\n  courses[courseid].filterTo = e.detail.value2\r\n  redraw()\r\n}\r\n\r\nfunction formatCourseDetails() {\r\n  let details = { html: \"\", res: 0, coursecount: 0 }\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      details.coursecount = details.coursecount + 1\r\n      details.html += [\r\n        `<tr><td>${courses[i].name}</td >`,\r\n        `<td><input class='showcourse' data-courseid=${i} type='checkbox' name='course'></input></td>`,\r\n        `<td class='text-center'>${courses[i].resultcount}</td><td class='text-center'>${courses[i].trackcount}</td><td>`\r\n      ].join(\"\")\r\n      details.res += courses[i].resultcount\r\n      if (courses[i].trackcount > 0) {\r\n        details.html += `<input data-courseid=${courses[i].courseid} class='allcoursetracks' type=checkbox name=track></input></td>`\r\n        details.html += `<td><input data-courseid=${courses[i].courseid} class='allcoursetracksreplay' type=checkbox name=replay></input>`\r\n      } else {\r\n        details.html += `</td><td>`\r\n      }\r\n      details.html += `</td></tr>`\r\n    }\r\n  }\r\n  return details\r\n}\r\n\r\nfunction formatCourseFilters() {\r\n  let html = \"\"\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      // only filter for normal events with at least one control as well as start and finish\r\n      if (!courses[i].isScoreCourse && courses[i].codes.length > 2) {\r\n        html += [\r\n          `<div id='course-filter-${courses[i].courseid}' data-display=\"false\" data-course=\"${courses[i].courseid}\" class=\"row\">`,\r\n          `<div class=\"col-3\">${courses[i].name}</div>`,\r\n          `<div class=\"col-9 pt-2\">`,\r\n          `  <tc-range-slider step=\"1\" min=\"0\" max=\"${courses[i].codes.length}\" value1=\"0\"`,\r\n          `value2=\"${courses[i].codes.length}\" round=\"0\" data-course-filter=\"${courses[i].courseid}>\"`,\r\n          `</tc-range-slider></div></div>`\r\n        ].join(\"\")\r\n      }\r\n    }\r\n  }\r\n  return html\r\n}\r\n\r\nfunction formatCourses() {\r\n  let html = [\r\n    `<table class='table table-striped table-hover table-sm'><thead>`,\r\n    `<tr><th>${t(\"Course\")}</th><th><i class='bi-eye-fill'></i></th><th>${t(\"Runners\")}</th>`,\r\n    `<th>${t(\"Routes\")}</th><th><i class='bi-pencil'></i></th><th><i class='bi-play-fill'></i></th></tr>`,\r\n    `</thead><tbody class=\"table-group-divider\">`\r\n  ].join(\"\")\r\n  const details = formatCourseDetails()\r\n  // add bottom row for all courses checkboxes\r\n  html +=\r\n    details.html +\r\n    `</tbody><tfoot class=\"table-group-divider\"><tr class='allitemsrow'><td>${t(\"All\")}</td>\r\n    <td><input class='showallcourses' data-id=\"all\" type=checkbox name=course></input></td>\r\n    <td class='text-center'>${details.res}</td><td class='text-center'>${totaltracks}</td><td>`\r\n\r\n  if (totaltracks > 0) {\r\n    html += `<input data-id=\"all\" class='alltracks' type=checkbox name=track></input>`\r\n  }\r\n  html += \"</td><td></td></tr></tfoot></table>\"\r\n  return html\r\n}\r\n\r\nexport function getCourses() {\r\n  return courses\r\n}\r\n\r\nexport function getCourseDetails(courseid) {\r\n  return courses[courseid]\r\n}\r\n\r\nexport function getCourseDetailsByName(coursename) {\r\n  // courses is a sparse array so need to handle empty entries\r\n  return courses.find((course) => course ? course.name === coursename: false)\r\n}\r\n\r\nexport function getCourseLegLengths(courseid) {\r\n  return courses[courseid].getLegLengths()\r\n}\r\n\r\nexport function getCourseName(courseid) {\r\n  return courses[courseid].name\r\n}\r\n\r\nexport function getCoursesForEvent() {\r\n  let list = []\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      let course = {}\r\n      course.id = courses[i].courseid\r\n      course.name = courses[i].name\r\n      course.results = courses[i].resultcount\r\n      list.push(course)\r\n    }\r\n  }\r\n  return list\r\n}\r\n\r\nexport function getCoursesOnDisplay() {\r\n  let displayed = []\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      if (courses[i].display) {\r\n        displayed.push(i)\r\n      }\r\n    }\r\n  }\r\n  return displayed\r\n}\r\n\r\nexport function getExcludedText() {\r\n  // recreates excluded_* text file contents\r\n  // courseid|type|control,time|...\r\n  let text = \"\"\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      if (courses[i].excludeType !== config.EXCLUDED_NONE) {\r\n        text = text + courses[i].courseid + \"|\" + courses[i].excludeType\r\n        text =\r\n          text +\r\n          courses[i].exclude.reduce((accum, exclude, index) => {\r\n            return exclude ? accum + \"|\" + index + \",\" + courses[i].allowed[index] : accum\r\n          }, \"\")\r\n        text = text + \"\\n\"\r\n      }\r\n    }\r\n  }\r\n  return text\r\n}\r\n\r\nexport function getFilterDetails(courseid) {\r\n  let filter = {}\r\n  filter.filterFrom = courses[courseid].filterFrom\r\n  filter.filterTo = courses[courseid].filterTo\r\n  return filter\r\n}\r\n\r\nexport function getHighestControlNumber() {\r\n  return highestControlNumber\r\n}\r\n\r\nexport function getNumberOfControlsOnCourse(courseid) {\r\n  // codes list includes \"S\" and \"F\", so allow for them\r\n  return courses[courseid].codes.length - 2\r\n}\r\n\r\nexport function getnumberOfCourses() {\r\n  return numberOfCourses\r\n}\r\n\r\nexport function incrementTracksCount(courseid) {\r\n  courses[courseid].incrementTracksCount()\r\n  totaltracks += 1\r\n}\r\n\r\nexport function initialiseCourses() {\r\n  controls = new Controls()\r\n}\r\n\r\nexport function isValidCourseId(courseid) {\r\n  // detects the unused entries in the courses array\r\n  // index 0 never used: some others not used if you only set up certain courses for a set of results\r\n  return courseid in courses\r\n}\r\n\r\nexport function saveCourses(data) {\r\n  deleteAllCourses()\r\n  controls.deleteAllControls()\r\n  document.getElementById(\"rg2-load-progress-label\").innerHTML = t(\"Saving courses\")\r\n  for (const course of data) {\r\n    addCourse(course)\r\n  }\r\n  controls.generateControlList()\r\n}\r\n\r\nexport function setAllCoursesDisplay(display) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      courses[i].setDisplay(display)\r\n    }\r\n  }\r\n}\r\n\r\nexport function setAllFilters() {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      setFilter(i)\r\n    }\r\n  }\r\n}\r\n\r\nexport function setCourseDisplay(courseid, display) {\r\n  if (courses[courseid] !== undefined) {\r\n    courses[courseid].setDisplay(display)\r\n    setFilter(courseid)\r\n  }\r\n}\r\n\r\nexport function setFilter(courseid) {\r\n  // may come in as string or integer\r\n  courseid = parseInt(courseid, 10)\r\n  // assumes display properties set on courses and results before this call\r\n  const display = courses[courseid].display || anyTracksForCourseDisplayed(courseid)\r\n  document.querySelectorAll(\"[data-display]\").forEach((div) => {\r\n    if (parseInt(div.dataset.course, 10) === courseid) {\r\n      div.dataset.display = display\r\n    }\r\n  })\r\n}\r\n\r\nexport function setResultsCount() {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      courses[i].resultcount = countResultsByCourseID(i)\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateScoreCourse(courseid, codes, x, y) {\r\n  for (let i = 0; i < courses.length; i += 1) {\r\n    if (courses[i] !== undefined) {\r\n      if (courses[i].courseid === courseid) {\r\n        courses[i].codes = codes\r\n        courses[i].x = x\r\n        courses[i].y = y\r\n        courses[i].setAngles()\r\n        break\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { alignMap, ctx, getCentreBottom, getCentreTop, redraw } from \"./canvas\"\r\nimport { options, config } from \"./config\"\r\nimport { getCourseDetailsByName } from \"./courses\"\r\nimport { getLengthUnits } from \"./events\"\r\nimport interact from \"interactjs\"\r\nimport { getDisplayedTrackDetails, setResultColour } from \"./results\"\r\nimport { resizePanels } from \"./rg2ui\"\r\nimport { Runner } from \"./runner\"\r\nimport { t } from \"./translate\"\r\nimport { formatSecsAsHHMMSS, getDistanceBetweenPoints, getNextTrackColour } from \"./utils\"\r\nlet runners = []\r\nlet course = {}\r\n// possible time increment values in milliseconds when timer expires\r\nconst timeDeltas = [100, 200, 500, 1000, 2000, 3000, 5000, 7500, 10000, 15000, 20000, 50000, 100000]\r\n// value in milliseconds\r\nconst timerInterval = 100\r\nconst alignmentTimerInterval = 50\r\nconst alignmentLoopCount = 20\r\nlet mapIsAligned = false\r\nlet units = \"px\"\r\nlet timeDelta = 3000\r\nlet timer = null\r\nlet alignmentTimer = null\r\nlet alignments = []\r\n// current time of animation\r\nlet animationSecs = 0\r\n// animation time in millisecs to avoid rounding problems at very slow speed\r\n// animationSecs is always int(milliSecs/1000)\r\nlet milliSecs = 0\r\nlet realTime = false\r\nlet earliestStartSecs = 0\r\nlet latestFinishSecs = 0\r\nlet tailLength = 60\r\nlet tailStartTimeSecs = 0\r\n// control to start from if this option selected\r\nlet massStartControl = 0\r\n// run each leg as a mass start if true\r\nlet massStartByControl = false\r\nlet displayNames = false\r\nlet displayInitials = true\r\nlet startSecs = 0\r\nlet slowestTimeSecs = 0\r\nlet animationPanel = null\r\n// animation control panel location\r\n// const position = { x: 0, y: 0 }\r\nlet clockSlider = undefined\r\n\r\nconst playIcon = `<i title=${t(\"Run\", \"\")} class=\"bi-play-circle-fill\"></i>`\r\nconst startIcon = `<i title=${t(\"Start\", \"\")} class=\"bi-triangle\"></i>`\r\nconst pauseIcon = `<i title=${t(\"Pause\", \"\")} class=\"bi-pause-btn\"></i>`\r\nconst waitIcon = `<i title=${t(\"Wait\", \"\")} class=\"bi-hourglass-split\"></i>`\r\nconst trackNames = document.getElementById(\"rg2-track-names\")\r\nconst trackNamesBody = document.querySelector(\"#rg2-track-names .card-body\")\r\nconst btnRunners = document.getElementById(\"btn-runners\")\r\nconst btnStartStop = document.getElementById(\"btn-start-stop\")\r\ndocument.querySelector(\"#rg2-track-names .card-title\").innerHTML = t(\"Runners\")\r\ndocument.getElementById(\"btn-close-track-names\").addEventListener(\"click\", () => {\r\n  trackNames.classList.add(\"d-none\")\r\n})\r\nbtnRunners.addEventListener(\"click\", () => {\r\n  trackNames.classList.toggle(\"d-none\")\r\n})\r\nconst replayByControl = document.getElementById(\"rg2-replay-by-control\")\r\nreplayByControl.classList.add(\"d-none\")\r\n//  allow dialog to be moved\r\nlet namesPosition = { x: 0, y: 0 }\r\ninteract(trackNames).draggable({\r\n  inertia: true,\r\n  listeners: {\r\n    move(e) {\r\n      namesPosition.x += e.dx\r\n      namesPosition.y += e.dy\r\n      e.target.style.transform = `translate(${namesPosition.x}px, ${namesPosition.y}px)`\r\n    }\r\n  },\r\n  modifiers: [\r\n    interact.modifiers.restrictRect({\r\n      restriction: \"#rg2-container\"\r\n    })\r\n  ]\r\n})\r\n\r\n// TODO: enabling this interferes with clock slider\r\n// let panelPosition = { x: 0, y: 0 }\r\n// interact(document.getElementById(\"rg2-animation-controls\")).draggable({\r\n//   inertia: true,\r\n//   listeners: {\r\n//     move(e) {\r\n//       panelPosition.x += e.dx\r\n//       panelPosition.y += e.dy\r\n//       e.target.style.transform = `translate(${panelPosition.x}px, ${panelPosition.y}px)`\r\n//     }\r\n//   },\r\n//   modifiers: [\r\n//     interact.modifiers.restrictRect({\r\n//       restriction: \"#rg2-container\"\r\n//     })\r\n//   ]\r\n// })\r\n\r\n// update flag prevents multiple rapid updates to slider which can cause recursion problems\r\n// needs to be set to false if called in a loop, and calling function then needs to call updateAnimationDetails\r\nexport function addRunner(runner, update = true) {\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    if (runners[i].resultid === runner.resultid) {\r\n      // runner already exists so ignore\r\n      return\r\n    }\r\n  }\r\n  // if this is the first runner to be added then get course details\r\n  // needed for replay by control to allow alignment of map. Don't worry that not all\r\n  // runners are on same course. Just assume first runner added is the relevant course\r\n  if (runners.length === 0) {\r\n    course = getCourseDetailsByName(runner.coursename)\r\n  }\r\n  if (runner.userColour !== null) {\r\n    runner.trackColour = runner.userColour\r\n  } else {\r\n    runner.trackColour = getNextTrackColour()\r\n  }\r\n  runners.push(runner)\r\n  if (update) {\r\n    updateAnimationDetails()\r\n  }\r\n}\r\n\r\nfunction alignMapToAngle(control) {\r\n  mapIsAligned = false\r\n  alignments = []\r\n  const x = course.x[control]\r\n  const y = course.y[control]\r\n  const x2 = course.x[control + 1]\r\n  const y2 = course.y[control + 1]\r\n  if (course.angle.length >= control) {\r\n    // Set up array of transformations to move control to centre bottom of screen and rotate map\r\n    // so next control is straight up and near top of screen.\r\n    const from = getCentreBottom()\r\n    const to = getCentreTop()\r\n    const mapDistance = getDistanceBetweenPoints(x, y, x2, y2)\r\n    const screenDistance = getDistanceBetweenPoints(from.x, from.y, to.x, to.y)\r\n    let scale = Math.min(screenDistance / mapDistance, config.MAX_ZOOM)\r\n    scale = Math.max(scale, config.MIN_ZOOM)\r\n    let angle = (ctx.displayAngle - course.angle[control] - Math.PI / 2) % (Math.PI * 2)\r\n    if (angle < -1 * Math.PI) {\r\n      angle = angle + 2 * Math.PI\r\n    }\r\n    for (let i = 1; i <= alignmentLoopCount; i = i + 1) {\r\n      let values = {}\r\n\r\n      // translations to move current control to centre bottom\r\n      values.x = from.x - ((from.x - x) * i) / alignmentLoopCount\r\n      values.y = from.y - ((from.y - y) * i) / alignmentLoopCount\r\n\r\n      // Rotation to get from current display angle to angle with next control straight up.\r\n      // Course angles are based on horizontal as 0: need to reset to north.\r\n      // Angle parameter is absolute angle to draw map.\r\n      values.angle = (ctx.displayAngle - (angle * i) / alignmentLoopCount) % (Math.PI * 2)\r\n\r\n      // scale to stretch map: value is a multiplier so use xth root each time and apply it x times\r\n      values.scale = Math.pow(scale, 1 / alignmentLoopCount)\r\n\r\n      alignments.push(values)\r\n    }\r\n\r\n    alignmentTimer = setInterval(() => {\r\n      incrementAlignmentTime()\r\n    }, alignmentTimerInterval)\r\n  } else {\r\n    // just set to north and keep going\r\n    alignMap(0, x, y, true, 1)\r\n    alignmentTimer = null\r\n    mapIsAligned = true\r\n  }\r\n}\r\n\r\nexport function animateRunners(courseresults, doAnimate) {\r\n  for (let i = 0; i < courseresults.length; i += 1) {\r\n    if (doAnimate) {\r\n      addRunner(new Runner(courseresults[i]), false)\r\n    } else {\r\n      removeRunner(courseresults[i], false)\r\n    }\r\n  }\r\n  updateAnimationDetails()\r\n}\r\n\r\nfunction calculateAnimationRange() {\r\n  // in theory start time will be less than 24:00\r\n  // TODO: races over midnight: a few other things to sort out before we get to that\r\n  earliestStartSecs = 86400\r\n  latestFinishSecs = 0\r\n  slowestTimeSecs = 0\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    if (runners[i].starttime < earliestStartSecs) {\r\n      earliestStartSecs = runners[i].starttime\r\n    }\r\n    if (runners[i].starttime + runners[i].x.length > latestFinishSecs) {\r\n      latestFinishSecs = runners[i].starttime + runners[i].x.length\r\n    }\r\n    if (runners[i].x.length > slowestTimeSecs) {\r\n      slowestTimeSecs = runners[i].x.length\r\n    }\r\n  }\r\n}\r\n\r\n// see if all runners have reached stop control and reset if they have\r\nfunction checkForStopControl(currentTime) {\r\n  // avoid problems when changing event with replay by control in progress\r\n  if (runners.length === 0) {\r\n    return\r\n  }\r\n\r\n  let allAtControl = true\r\n  // work out if everybody has got to the next control\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    const legTime = runners[i].splits[massStartControl + 1] - runners[i].splits[massStartControl]\r\n    if (legTime > currentTime) {\r\n      allAtControl = false\r\n      break\r\n    }\r\n  }\r\n  if (allAtControl) {\r\n    //move on to next control\r\n    massStartControl += 1\r\n    mapIsAligned = false\r\n    setByControlLabel(massStartControl)\r\n    setNextControlDetails()\r\n  }\r\n}\r\n\r\n// slider callback\r\nfunction clockSliderMoved(time) {\r\n  // setting attribute elsewhere triggers synchronous callback via dispatchEvent so best to filter out non-changes here\r\n  if (time !== animationSecs) {\r\n    setAnimationTime(time)\r\n  }\r\n}\r\n\r\nfunction createSpeedDropdown() {\r\n  let dropdown = document.getElementById(\"rg2-replay-speed-list\")\r\n  let html = \"\"\r\n  for (let i = 0; i < timeDeltas.length; i = i + 1) {\r\n    html += `<li class=\"dropdown-item\" data-speed=\"${timeDeltas[i]}\">${\"x\" + timeDeltas[i] / 100}</li>`\r\n  }\r\n  dropdown.innerHTML = html\r\n  document.getElementById(\"rg2-replay-speed-select\").addEventListener(\"hidden.bs.dropdown\", (e) => {\r\n    // only need to deal with close caused by a click on a new value\r\n    if (e.clickEvent) {\r\n      setReplaySpeed(parseInt(e.clickEvent.target.dataset.speed, 10))\r\n    }\r\n  })\r\n}\r\n\r\nexport function createByControlDropdown() {\r\n  let dropdown = document.getElementById(\"rg2-replay-start-control-list\")\r\n  // setting innerHTML doesn't seem to remove event handlers so need to do that here\r\n  // just gets ignored the first time the function is called\r\n  dropdown.removeEventListener(\"hidden.bs.dropdown\", handleReplayStartDropdown)\r\n  let html = \"\"\r\n  // find shortest set of splits being animated\r\n  let minSplitsLength = 9999\r\n  const controls = runners.reduce((minLength, r) => {\r\n    return Math.min(r.splits.length, minLength)\r\n  }, minSplitsLength)\r\n  // count includes the finish split which we need to ignore\r\n  for (let i = 0; i < controls - 1; i = i + 1) {\r\n    const control = i === 0 ? `<div>${startIcon}</div>` : i\r\n    html += `<li class=\"dropdown-item\" data-control=\"${i}\">${control}</li>`\r\n  }\r\n  dropdown.innerHTML = html\r\n  document\r\n    .getElementById(\"rg2-replay-start-control-select\")\r\n    .addEventListener(\"hidden.bs.dropdown\", handleReplayStartDropdown)\r\n}\r\n\r\nexport function createTailsDropdown() {\r\n  let dropdown = document.getElementById(\"rg2-tails-length-list\")\r\n  let html = \"\"\r\n  const tails = [\"0:00\", \"0:30\", \"1:00\", \"1:30\", \"2:00\", \"3:00\", t(\"Full tails\", \"\")]\r\n  const secs = [0, 30, 60, 90, 120, 180, \"Full\"]\r\n  for (let i = 0; i < tails.length; i = i + 1) {\r\n    html += `<li class=\"dropdown-item\" data-length=\"${secs[i]}\">${tails[i]}</li>`\r\n  }\r\n  dropdown.innerHTML = html\r\n  document.getElementById(\"rg2-tails-length-select\").addEventListener(\"hidden.bs.dropdown\", (e) => {\r\n    // only need to deal with close caused by a click on a new value\r\n    if (e.clickEvent) {\r\n      setTailsLength(e.clickEvent.target.dataset.length)\r\n    }\r\n  })\r\n}\r\n\r\nexport function drawAnimation() {\r\n  if (runners.length === 0) {\r\n    return\r\n  }\r\n  if (clockSlider) {\r\n    if (clockSlider.value !== animationSecs) {\r\n      clockSlider.value = animationSecs\r\n    }\r\n    const clock = document.getElementById(\"rg2-clock\")\r\n    clock.innerText = formatSecsAsHHMMSS(animationSecs)\r\n  }\r\n  let time = 0\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    const runner = runners[i]\r\n    let timeOffset = 0\r\n    if (realTime) {\r\n      timeOffset = runner.starttime\r\n    } else {\r\n      if (massStartControl === 0 || runner.splits.length < massStartControl) {\r\n        // no offset since we are starting from the start\r\n        timeOffset = 0\r\n      } else {\r\n        // offset needs to move forward (hence negative) to time at control\r\n        timeOffset = -1 * runner.splits[massStartControl]\r\n      }\r\n    }\r\n    ctx.strokeStyle = runner.trackColour\r\n    ctx.globalAlpha = options.perCentRouteIntensity / 100\r\n    ctx.lineWidth = options.routeWidth / Math.pow(ctx.displayScale, 0.5)\r\n    ctx.lineJoin = \"round\"\r\n    ctx.beginPath()\r\n    if (!mapIsAligned && !alignmentTimer && massStartControl > 0) {\r\n      // draw tails when using replay by control and all runners have reached the next control\r\n      const tailEnd = runner.splits[massStartControl]\r\n      let tailStart = Math.max(tailEnd - tailLength, runner.splits[massStartControl - 1])\r\n      ctx.moveTo(runner.x[tailStart], runner.y[tailStart])\r\n      for (let t = tailStart + 1; t <= tailEnd; t += 1) {\r\n        ctx.lineTo(runner.x[t], runner.y[t])\r\n      }\r\n    } else {\r\n      // draws tails in all other scenarios\r\n      // t runs as real time seconds or 0-based seconds depending on realTime\r\n      // runner.x[] is always indexed in 0-based time so needs to be adjusted for starttime offset\r\n      ctx.moveTo(runner.x[tailStartTimeSecs - timeOffset], runner.y[tailStartTimeSecs - timeOffset])\r\n      for (let t = tailStartTimeSecs; t < animationSecs; t += 1) {\r\n        if (t > timeOffset && t - timeOffset < runner.nextStopTime) {\r\n          ctx.lineTo(runner.x[t - timeOffset], runner.y[t - timeOffset])\r\n        }\r\n      }\r\n    }\r\n    ctx.stroke()\r\n    ctx.beginPath()\r\n    time = animationSecs\r\n    if (time - timeOffset < runner.nextStopTime) {\r\n      time = time - timeOffset\r\n    } else {\r\n      time = runner.nextStopTime\r\n    }\r\n    ctx.arc(\r\n      runner.x[time],\r\n      runner.y[time],\r\n      config.RUNNER_DOT_RADIUS / Math.pow(ctx.displayScale, 0.5),\r\n      0,\r\n      2 * Math.PI,\r\n      false\r\n    )\r\n    ctx.globalAlpha = config.FULL_INTENSITY\r\n    ctx.strokeStyle = config.BLACK\r\n    ctx.fillStyle = runner.trackColour\r\n    ctx.fill()\r\n    ctx.lineWidth = config.RUNNER_DOT_RADIUS / Math.pow(ctx.displayScale, 0.5) / 4\r\n    ctx.stroke()\r\n    drawName(runner, time)\r\n  }\r\n\r\n  showDistanceRun(time)\r\n  if (massStartByControl) {\r\n    checkForStopControl(animationSecs)\r\n  }\r\n}\r\n\r\nfunction drawName(runner, time) {\r\n  let text = \"\"\r\n  if (displayNames || displayInitials) {\r\n    // make sure we have a valid position to display\r\n    if (time < runner.x.length && time >= 0) {\r\n      ctx.fillStyle = runner.trackColour\r\n      ctx.strokeStyle = \"darkslategray\"\r\n      // empirically reasonable font scaling\r\n      ctx.font = options.replayFontSize / Math.pow(ctx.displayScale, 0.8) + \"pt Arial\"\r\n      ctx.globalAlpha = config.FULL_INTENSITY\r\n      ctx.textAlign = \"left\"\r\n      if (displayInitials) {\r\n        text = runner.initials\r\n      } else {\r\n        text = runner.name\r\n      }\r\n      ctx.save()\r\n      // centre map on runner location\r\n      ctx.translate(runner.x[time], runner.y[time])\r\n      // rotate map so that text stays horizontal\r\n      ctx.rotate(ctx.displayAngle)\r\n      // no real science: offsets just look OK\r\n      ctx.lineWidth = options.replayFontSize / Math.pow(ctx.displayScale, 0.8) / 8\r\n      const x = 2 + 8 / Math.pow(ctx.displayScale, 1)\r\n      const y = 2 + 4 / Math.pow(ctx.displayScale, 1)\r\n      ctx.strokeText(text, x, y)\r\n      ctx.fillText(text, x, y)\r\n      ctx.restore()\r\n    }\r\n  }\r\n}\r\n\r\nfunction getDistanceAtTime(idx, time) {\r\n  const cumDist = runners[idx].cumulativeDistance\r\n  let dist = time > cumDist.length - 1 ? cumDist[cumDist.length - 1] : cumDist[time]\r\n  if (dist === undefined) {\r\n    dist = 0\r\n  }\r\n  return dist\r\n}\r\n\r\nfunction getTrackNames(time) {\r\n  let tracks = []\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    let info = {}\r\n    info.trackColour = runners[i].trackColour\r\n    info.course = runners[i].coursename\r\n    info.name = runners[i].name\r\n    info.resultid = runners[i].resultid\r\n    info.rawid = runners[i].rawid\r\n    if (realTime) {\r\n      info.distance = getDistanceAtTime(i, animationSecs - runners[i].starttime)\r\n    } else {\r\n      info.distance = getDistanceAtTime(i, time)\r\n    }\r\n    info.distance += units\r\n    tracks.push(info)\r\n  }\r\n  // get all tracks displayed so we can add them if they are not animated as well\r\n  let extraTracks = getDisplayedTrackDetails()\r\n  for (let i = 0; i < extraTracks.length; i += 1) {\r\n    // add tracks not already in tracks list\r\n    if (\r\n      tracks.findIndex((track) => {\r\n        return track.resultid === extraTracks[i].resultid\r\n      }) === -1\r\n    ) {\r\n      let info = {}\r\n      info.trackColour = extraTracks[i].trackColour\r\n      info.course = extraTracks[i].course\r\n      info.name = extraTracks[i].name\r\n      info.resultid = extraTracks[i].resultid\r\n      info.rawid = extraTracks[i].rawid\r\n      info.distance = \"\"\r\n      tracks.push(info)\r\n    }\r\n  }\r\n  return tracks\r\n}\r\n\r\nfunction getTrackNamesHTML(tracks) {\r\n  if (tracks.length === 0) {\r\n    return \"\"\r\n  }\r\n  let html = \"\"\r\n  let oldCourse = \"\"\r\n  for (let i = 0; i < tracks.length; i += 1) {\r\n    if (oldCourse !== tracks[i].course) {\r\n      html += `<div></div><div><strong>${tracks[i].course}</strong></div><div></div>`\r\n      oldCourse = tracks[i].course\r\n    }\r\n    html += `<input type=\"color\" class=\"form-control form-control-color\" data-rawid=\"${tracks[i].rawid}\"`\r\n    html += ` value = \"${tracks[i].trackColour}\" ><div>${tracks[i].name}</div><div class=\"runner-distance text-end\"`\r\n    html += ` data-resultid=\"${tracks[i].resultid}\">${tracks[i].distance}</div>`\r\n  }\r\n  return html\r\n}\r\n\r\nfunction handleReplayStartDropdown(e) {\r\n  // only need to deal with close caused by a click on a new value\r\n  if (e.clickEvent) {\r\n    massStartControl = parseInt(e.clickEvent.target.dataset.control)\r\n    if (isNaN(massStartControl)) {\r\n      massStartControl = 0\r\n    }\r\n    mapIsAligned = false\r\n    setByControlLabel(massStartControl)\r\n    setNextControlDetails()\r\n    alignMapToAngle(massStartControl)\r\n    btnStartStop.innerHTML = waitIcon\r\n  }\r\n}\r\n\r\nfunction incrementAlignmentTime() {\r\n  if (alignments.length === 0) {\r\n    clearInterval(alignmentTimer)\r\n    alignmentTimer = null\r\n    mapIsAligned = true\r\n    btnStartStop.innerHTML = playIcon\r\n  } else {\r\n    const data = alignments.shift()\r\n    alignMap(data.angle, data.x, data.y, true, data.scale)\r\n  }\r\n  redraw()\r\n}\r\n\r\nexport function incrementAnimationTime() {\r\n  // only increment time if we haven't got to the end already\r\n  if (realTime) {\r\n    if (animationSecs < latestFinishSecs) {\r\n      milliSecs = Math.min(milliSecs + timeDelta, latestFinishSecs * 1000)\r\n    }\r\n  } else {\r\n    if (animationSecs < slowestTimeSecs) {\r\n      milliSecs = Math.min(milliSecs + timeDelta, slowestTimeSecs * 1000)\r\n    }\r\n  }\r\n  animationSecs = parseInt(milliSecs / 1000, 10)\r\n  // find earliest time we need to worry about when drawing screen\r\n  tailStartTimeSecs = Math.max(animationSecs - tailLength, startSecs + 1)\r\n  redraw()\r\n}\r\n\r\nexport function initialiseAnimationPanel() {\r\n  if (animationPanel) {\r\n    return\r\n  }\r\n  animationPanel = document.getElementById(\"rg2-animation-controls\")\r\n  const clock = document.getElementById(\"rg2-clock\")\r\n  clock.innerText = \"00:00:00\"\r\n\r\n  initialiseClockSlider(0, 0, 0)\r\n\r\n  createSpeedDropdown()\r\n  setReplaySpeed(timeDelta)\r\n\r\n  btnStartStop.addEventListener(\"click\", () => {\r\n    toggleAnimation()\r\n  })\r\n\r\n  const btnMassStart = document.getElementById(\"btn-mass-start\")\r\n  btnMassStart.addEventListener(\"click\", () => {\r\n    replayByControl.classList.add(\"d-none\")\r\n    setReplayMassStart()\r\n  })\r\n\r\n  const btnRealTime = document.getElementById(\"btn-real-time\")\r\n  btnRealTime.setAttribute(\"title\", t(\"Real time\", \"\"))\r\n  btnRealTime.addEventListener(\"click\", () => {\r\n    replayByControl.classList.add(\"d-none\")\r\n    setReplayRealTime()\r\n  })\r\n\r\n  const btnByControl = document.getElementById(\"btn-by-control\")\r\n  btnByControl.addEventListener(\"click\", () => {\r\n    setReplayByControl()\r\n    createByControlDropdown()\r\n    replayByControl.classList.remove(\"d-none\")\r\n  })\r\n\r\n  createTailsDropdown()\r\n\r\n  let options = document.querySelectorAll(\"[data-toggle-names]\")\r\n  for (let opt of options) {\r\n    opt.innerHTML = t(opt.dataset.toggleNames)\r\n    opt.addEventListener(\"click\", (e) => {\r\n      toggleNameDisplay(e.currentTarget.dataset.toggleNames)\r\n    })\r\n  }\r\n  document.getElementById(\"rg2-toggle-names-value\").setAttribute(\"title\", t(\"Show names\", \"\"))\r\n}\r\n\r\nfunction initialiseClockSlider(min, max, val) {\r\n  // avoid unnecessary reinitialisation\r\n  if (clockSlider && clockSlider.min === min && clockSlider.max === max && clockSlider.value === val) {\r\n    return\r\n  }\r\n  if (clockSlider) {\r\n    clockSlider.remove()\r\n  }\r\n  const clockSliderContainer = document.getElementById(\"rg2-clock-slider-container\")\r\n  const slider = document.createElement(\"tc-range-slider\")\r\n  slider.setAttribute(\"id\", \"rg2-clock-slider\")\r\n  slider.setAttribute(\"min\", min)\r\n  slider.setAttribute(\"max\", max)\r\n  slider.setAttribute(\"value\", val)\r\n  slider.setAttribute(\"step\", 1)\r\n  clockSliderContainer.append(slider)\r\n  clockSlider = document.getElementById(\"rg2-clock-slider\")\r\n  clockSlider.addEventListener(\"change\", (e) => {\r\n    clockSliderMoved(e.target.value)\r\n  })\r\n}\r\n\r\nexport function removeRunner(resultid) {\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    if (runners[i].resultid === resultid) {\r\n      // delete 1 runner at position i\r\n      runners.splice(i, 1)\r\n    }\r\n    // if this was the last runner then delete course details\r\n    if (runners.length === 0) {\r\n      course = {}\r\n    }\r\n  }\r\n  updateAnimationDetails()\r\n}\r\n\r\n// called before a new event is loaded\r\nexport function resetAnimation() {\r\n  runners.length = 0\r\n  course = {}\r\n  timeDelta = 3000\r\n  animationSecs = 0\r\n  milliSecs = 0\r\n  realTime = false\r\n  earliestStartSecs = 0\r\n  latestFinishSecs = 0\r\n  tailLength = 60\r\n  tailStartTimeSecs = 0\r\n  massStartControl = 0\r\n  massStartByControl = false\r\n  displayNames = false\r\n  displayInitials = true\r\n  startSecs = 0\r\n  slowestTimeSecs = 0\r\n  clearInterval(timer)\r\n  timer = null\r\n  updateAnimationDetails()\r\n  btnStartStop.innerHTML = playIcon\r\n  trackNames.classList.add(\"d-none\")\r\n}\r\n\r\n// needed if you run replay by control and then switch back to something else\r\nfunction resetNextStopTime() {\r\n  runners.forEach((r) => (r.nextStopTime = config.VERY_HIGH_TIME_IN_SECS))\r\n}\r\n\r\nexport function resultIsBeingAnimated(resultid) {\r\n  // is given result in the array of animated runners?\r\n  return runners.findIndex((runner) => runner.resultid === resultid) > -1\r\n}\r\n\r\nfunction setAnimationTime(time) {\r\n  units = getLengthUnits()\r\n  // if we got a non-0 time it was from the slider so use it\r\n  // otherwise reset to base time\r\n  let max = 0\r\n  if (realTime) {\r\n    if (time > 0) {\r\n      animationSecs = time\r\n    } else {\r\n      animationSecs = earliestStartSecs\r\n    }\r\n    max = latestFinishSecs\r\n    startSecs = earliestStartSecs\r\n  } else {\r\n    if (time > 0) {\r\n      animationSecs = time\r\n    } else {\r\n      animationSecs = 0\r\n    }\r\n    max = slowestTimeSecs\r\n    startSecs = 0\r\n  }\r\n  milliSecs = animationSecs * 1000\r\n  if (time === 0) {\r\n    initialiseClockSlider(startSecs, max, animationSecs)\r\n  }\r\n  redraw()\r\n}\r\n\r\nfunction setByControlLabel(control) {\r\n  document.getElementById(\"rg2-replay-start-control\").innerHTML = control === 0 ? startIcon : control\r\n}\r\n\r\nfunction setNextControlDetails() {\r\n  let minSplitsLength = 9999\r\n  // not all runners have the same number of controls\r\n  // since they may be on different courses or a score course\r\n  minSplitsLength = runners.reduce((minLength, r) => {\r\n    return Math.min(r.splits.length, minLength)\r\n  }, minSplitsLength)\r\n  // splits array contains entries for S, controls and F\r\n  // stop replaying once we have got to F\r\n  if (massStartControl > minSplitsLength) {\r\n    massStartControl = 0\r\n  }\r\n  // find time at next control\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    // splits includes a start time so index to control is + 1\r\n    // also need to allow for runners on different courses so not\r\n    // all runners have same number of controls\r\n    if (massStartControl + 1 < runners[i].splits.length) {\r\n      runners[i].nextStopTime = runners[i].splits[massStartControl + 1]\r\n    } else {\r\n      runners[i].nextStopTime = config.VERY_HIGH_TIME_IN_SECS\r\n    }\r\n  }\r\n  setAnimationTime(0)\r\n  // stop animation and wait for next leg\r\n  stopAnimation()\r\n  redraw()\r\n}\r\n\r\n// callback when user selects replay by control\r\nfunction setReplayByControl() {\r\n  // disable slider since moving it during replay by control is open to interpretation\r\n  document.getElementById(\"rg2-clock-slider\").setAttribute(\"disabled\", \"\")\r\n  realTime = false\r\n  // default to 0 (start) until user selects another control\r\n  massStartControl = 0\r\n  massStartByControl = true\r\n  mapIsAligned = false\r\n  setByControlLabel(massStartControl)\r\n  setNextControlDetails()\r\n}\r\n\r\nfunction setReplayMassStart() {\r\n  realTime = false\r\n  massStartByControl = false\r\n  massStartControl = 0\r\n  resetNextStopTime()\r\n  setAnimationTime(0)\r\n  clockSlider.removeAttribute(\"disabled\")\r\n}\r\n\r\nfunction setReplayRealTime() {\r\n  realTime = true\r\n  massStartByControl = false\r\n  massStartControl = 0\r\n  resetNextStopTime()\r\n  setAnimationTime(0)\r\n  clockSlider.removeAttribute(\"disabled\")\r\n}\r\n\r\nfunction setReplaySpeed(speed) {\r\n  if (isNaN(speed)) {\r\n    speed = 1000\r\n  }\r\n  timeDelta = speed\r\n  document.getElementById(\"rg2-replay-speed\").innerText = \"x\" + speed / 100\r\n}\r\n\r\nfunction setRunnerColor(rawid, trackColour) {\r\n  // set colour for runners already selected\r\n  for (let i = 0; i < runners.length; i += 1) {\r\n    if (runners[i].rawid === rawid) {\r\n      runners[i].userColour = trackColour\r\n      runners[i].trackColour = trackColour\r\n    }\r\n  }\r\n  // and save colour for next time runner is selected\r\n  setResultColour(rawid, trackColour)\r\n}\r\n\r\nfunction setTailsLength(value) {\r\n  if (value === \"Full\") {\r\n    tailLength = config.VERY_HIGH_TIME_IN_SECS\r\n  } else {\r\n    tailLength = parseInt(value, 10)\r\n  }\r\n  calculateAnimationRange()\r\n  redraw()\r\n}\r\n\r\nfunction showDistanceRun(time) {\r\n  const names = getTrackNames(time)\r\n  if (names.length === 0) {\r\n    return\r\n  }\r\n  const runners = document.querySelectorAll(\".track-names .runner-distance\")\r\n  if (runners) {\r\n    runners.forEach((runner) => {\r\n      const resultid = parseInt(runner.dataset.resultid)\r\n      const idx = names.findIndex((name) => {\r\n        return name.resultid === resultid\r\n      })\r\n      if (idx > -1) {\r\n        runner.innerText = names[idx].distance\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction startAnimation() {\r\n  if (timer === null) {\r\n    timer = setInterval(() => {\r\n      incrementAnimationTime()\r\n    }, timerInterval)\r\n  }\r\n  btnStartStop.innerHTML = pauseIcon\r\n}\r\n\r\nfunction stopAnimation() {\r\n  clearInterval(timer)\r\n  timer = null\r\n  btnStartStop.innerHTML = playIcon\r\n}\r\n\r\nfunction toggleAnimation() {\r\n  if (timer === null) {\r\n    // only align replay by control for now\r\n    // may also decide to make this user-configurable\r\n    if (massStartByControl) {\r\n      // if timer is running then we are doing alignment already\r\n      if (!mapIsAligned && alignmentTimer === null) {\r\n        alignMapToAngle(massStartControl)\r\n        btnStartStop.innerHTML = waitIcon\r\n      }\r\n    } else {\r\n      mapIsAligned = true\r\n    }\r\n\r\n    if (mapIsAligned) {\r\n      startAnimation()\r\n    }\r\n  } else {\r\n    stopAnimation()\r\n  }\r\n}\r\n\r\nfunction toggleNameDisplay(value) {\r\n  document.getElementById(\"rg2-toggle-names-value\").setAttribute(\"title\", t(value, \"\"))\r\n  switch (value) {\r\n    case \"Show names\":\r\n      displayNames = true\r\n      displayInitials = false\r\n      break\r\n    case \"Show initials\":\r\n      displayNames = false\r\n      displayInitials = true\r\n      break\r\n    default:\r\n      displayNames = false\r\n      displayInitials = false\r\n      break\r\n  }\r\n  redraw()\r\n}\r\n\r\nfunction updateAnimationDetails() {\r\n  initialiseAnimationPanel()\r\n  updateTrackNames()\r\n  if (runners.length > 0) {\r\n    animationPanel.classList.remove(\"d-none\")\r\n    btnRunners.classList.remove(\"d-none\")\r\n  } else {\r\n    animationPanel.classList.add(\"d-none\")\r\n    btnRunners.classList.add(\"d-none\")\r\n  }\r\n  resizePanels()\r\n  calculateAnimationRange()\r\n  setAnimationTime(0)\r\n}\r\n\r\nexport function updateTrackNames() {\r\n  const names = getTrackNames(animationSecs)\r\n  if (names.length > 0) {\r\n    trackNamesBody.innerHTML = getTrackNamesHTML(names)\r\n    const colorSelects = document.querySelectorAll(\".track-names input\")\r\n    colorSelects.forEach((color) => {\r\n      color.addEventListener(\"input\", (e) => {\r\n        setRunnerColor(parseInt(e.target.dataset.rawid, 10), e.target.value)\r\n        redraw()\r\n      })\r\n    })\r\n    trackNames.classList.remove(\"d-none\")\r\n  } else {\r\n    trackNamesBody.innerHTML = \"\"\r\n    trackNames.classList.add(\"d-none\")\r\n  }\r\n  return names.length\r\n}\r\n","import { getDistanceBetweenPoints } from \"./utils\"\r\nimport { redraw } from \"./canvas\"\r\nimport interact from \"interactjs\"\r\nimport { t } from \"./translate\"\r\nimport { getActiveEventID, getMetresPerPixel } from \"./events\"\r\n\r\nexport class Overlay {\r\n  constructor(ctx) {\r\n    this.ctx = ctx\r\n    this.measuring = false\r\n    this.dragging = false\r\n    this.colours = [\"#ff00ff\", \"#0000ff\", \"#00ff00\", \"#ff0000\", \"#00ffff\"]\r\n    this.colourIndex = 0\r\n    // array of completed overlays\r\n    this.overlays = []\r\n    // overlay being drawn or not yet started\r\n    this.currentOverlay = this.initialiseOverlay()\r\n    this.units = \"px\"\r\n    this.metresPerPixel = 1\r\n    // empirical settings\r\n    this.dotSize = 5\r\n    this.lineWidth = 3\r\n    this.measureDialog = document.getElementById(\"rg2-measure-dialog\")\r\n    document.getElementById(\"btn-measure\").addEventListener(\"click\", () => {\r\n      if (getActiveEventID() === null) {\r\n        return\r\n      }\r\n      document.getElementById(\"rg2-map-canvas\").style.cursor = \"crosshair\"\r\n      this.measureDialog.classList.remove(\"d-none\")\r\n      this.measuring = true\r\n      this.createMeasureDialog()\r\n      redraw()\r\n    })\r\n\r\n    document.getElementById(\"btn-close-measure-dialog\").addEventListener(\"click\", () => {\r\n      this.measuring = false\r\n      this.measureDialog.classList.add(\"d-none\")\r\n      document.getElementById(\"rg2-map-canvas\").style.cursor = \"auto\"\r\n      redraw()\r\n    })\r\n\r\n    document.getElementById(\"btn-measure\").addEventListener(\"click\", () => {\r\n      document.getElementById(\"rg2-map-canvas\").style.cursor = \"crosshair\"\r\n      this.measureDialog.classList.remove(\"d-none\")\r\n      this.measuring = true\r\n      this.createMeasureDialog()\r\n      redraw()\r\n    })\r\n\r\n    //  allow dialog to be moved\r\n    let position = { x: 0, y: 0 }\r\n    interact(this.measureDialog).draggable({\r\n      inertia: true,\r\n      listeners: {\r\n        move(e) {\r\n          position.x += e.dx\r\n          position.y += e.dy\r\n          e.target.style.transform = `translate(${position.x}px, ${position.y}px)`\r\n        }\r\n      },\r\n      modifiers: [\r\n        interact.modifiers.restrictRect({\r\n          restriction: \"#rg2-container\"\r\n        })\r\n      ]\r\n    })\r\n    this.createMeasureDialog()\r\n  }\r\n\r\n  calculateLength(x, y) {\r\n    if (x.length < 2) {\r\n      return 0\r\n    }\r\n    let length = 0\r\n    for (let i = 1; i < x.length; i += 1) {\r\n      length = length + getDistanceBetweenPoints(x[i - 1], y[i - 1], x[i], y[i])\r\n    }\r\n    return length\r\n  }\r\n\r\n  closeEnough(x1, y1, x2, y2) {\r\n    const range = 10\r\n    if (Math.abs(x1 - x2) < range) {\r\n      if (Math.abs(y1 - y2) < range) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  createMeasureDialog() {\r\n    this.metresPerPixel = getMetresPerPixel()\r\n    if (this.metresPerPixel === undefined) {\r\n      this.metresPerPixel = 1\r\n      this.units = \"px\"\r\n    } else {\r\n      this.units = \"m\"\r\n    }\r\n    let details = \"\"\r\n    for (let i = 0; i < this.overlays.length; i += 1) {\r\n      details = details + this.formatOverlay(this.overlays[i], true)\r\n    }\r\n    details = details + this.formatOverlay(this.currentOverlay, false)\r\n    // show \"delete all\" if at least two exist\r\n    if (this.overlays.length > 1) {\r\n      details += `<div>${t(\"All\")}</div><div></div><div></div>`\r\n      details += `<div><i class='delete-all-overlays bi-trash'></i></div>`\r\n    }\r\n    document.querySelector(\".rg2-overlay-table\").innerHTML = details\r\n    let deleteOverlay = document.getElementsByClassName(\"delete-overlay\")\r\n    for (let ol of deleteOverlay) {\r\n      ol.addEventListener(\"click\", (e) => {\r\n        this.deleteOverlay(parseInt(e.target.id, 10))\r\n      })\r\n    }\r\n    let deleteAllOverlays = document.getElementsByClassName(\"delete-all-overlays\")\r\n    for (let ol of deleteAllOverlays) {\r\n      ol.addEventListener(\"click\", (e) => {\r\n        this.deleteAllOverlays(parseInt(e.target.id, 10))\r\n      })\r\n    }\r\n    let endOverlay = document.getElementsByClassName(\"end-overlay\")\r\n    for (let ol of endOverlay) {\r\n      ol.addEventListener(\"click\", (e) => {\r\n        this.endOverlay(parseInt(e.target.id, 10))\r\n      })\r\n    }\r\n  }\r\n\r\n  deleteAllOverlays() {\r\n    this.overlays.length = 0\r\n    this.currentOverlay = this.initialiseOverlay()\r\n    this.updateOverlays()\r\n    this.createMeasureDialog()\r\n    redraw()\r\n  }\r\n\r\n  deleteOverlay(idx) {\r\n    this.overlays.splice(idx, 1)\r\n    this.updateOverlays()\r\n    this.createMeasureDialog()\r\n    redraw()\r\n  }\r\n\r\n  dragEnded() {\r\n    //console.log(\"Drag ended\")\r\n    this.dragging = false\r\n  }\r\n\r\n  drawSingleOverlay(ol, finished) {\r\n    this.ctx.strokeStyle = ol.colour\r\n    this.ctx.fillStyle = ol.colour\r\n    // draw lines\r\n    this.ctx.beginPath()\r\n    this.ctx.moveTo(ol.x[0], ol.y[0])\r\n    for (let i = 1; i < ol.x.length; i += 1) {\r\n      this.ctx.lineTo(ol.x[i], ol.y[i])\r\n    }\r\n    this.ctx.stroke()\r\n    // draw dots\r\n    for (let i = 0; i < ol.x.length; i += 1) {\r\n      this.ctx.beginPath()\r\n      this.ctx.arc(ol.x[i], ol.y[i], this.dotSize, 0, 2 * Math.PI, false)\r\n      if (finished) {\r\n        this.ctx.fill()\r\n      } else {\r\n        this.ctx.stroke()\r\n      }\r\n    }\r\n  }\r\n\r\n  drawOverlays() {\r\n    // only draw if measuring dialog is open\r\n    if (!this.measuring) {\r\n      return\r\n    }\r\n    this.ctx.lineWidth = this.lineWidth\r\n    this.ctx.globalAlpha = 0.6\r\n    // draw completed overlays\r\n    if (this.overlays.length > 0) {\r\n      for (let j = 0; j < this.overlays.length; j += 1) {\r\n        this.drawSingleOverlay(this.overlays[j], true)\r\n      }\r\n    }\r\n    // draw overlay in progress\r\n    if (this.currentOverlay.started) {\r\n      if (this.currentOverlay.x.length === 1) {\r\n        // only one point so draw ring to mark start\r\n        this.ctx.strokeStyle = this.currentOverlay.colour\r\n        this.ctx.fillStyle = this.currentOverlay.colour\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(this.currentOverlay.x[0], this.currentOverlay.y[0], this.dotSize, 0, 2 * Math.PI, false)\r\n        this.ctx.stroke()\r\n      } else {\r\n        this.drawSingleOverlay(this.currentOverlay, false)\r\n      }\r\n    }\r\n  }\r\n\r\n  endOverlay() {\r\n    this.currentOverlay.idx = this.overlays.length\r\n    this.overlays.push(this.currentOverlay)\r\n    this.currentOverlay = this.initialiseOverlay()\r\n    this.createMeasureDialog()\r\n  }\r\n\r\n  formatOverlay(ol, completed) {\r\n    let html = \"\"\r\n    let completedDiv = \"\"\r\n    let startedDiv = \"\"\r\n    if (ol.started) {\r\n      startedDiv = `<div>${parseInt(ol.length, 10)}${this.units}</div>`\r\n    } else {\r\n      startedDiv = `<div></div>`\r\n    }\r\n\r\n    if (completed) {\r\n      completedDiv = `<div><i class='delete-overlay bi-trash' id=\"${ol.idx}\"></i></div>`\r\n    } else {\r\n      if (ol.started) {\r\n        completedDiv = `<div><i class='end-overlay bi-save' id=\"${ol.idx}\"></i></div>`\r\n      } else {\r\n        completedDiv = `<div></div>`\r\n      }\r\n    }\r\n    html += `<div>${ol.id}</div><div class='overlay-bar' style='--overlay-colour:${ol.colour};'></div>`\r\n    html += `${startedDiv}${completedDiv}`\r\n    return html\r\n  }\r\n\r\n  getNextColour() {\r\n    this.colourIndex = (this.colourIndex + 1) % this.colours.length\r\n    return this.colours[this.colourIndex]\r\n  }\r\n\r\n  initialiseOverlay() {\r\n    const ol = {}\r\n    // ids start at A\r\n    ol.id = String.fromCharCode(this.overlays.length + 65)\r\n    ol.colour = this.getNextColour()\r\n    ol.x = []\r\n    ol.y = []\r\n    ol.length = 0\r\n    ol.started = false\r\n    ol.idx = undefined\r\n    return ol\r\n  }\r\n\r\n  mouseDrag(from, to) {\r\n    // return value indicates if we handled the move or not\r\n    if (!this.measuring) {\r\n      return false\r\n    }\r\n    if (!this.dragging) {\r\n      for (let i = 0; i < this.overlays.length; i += 1) {\r\n        for (let j = 0; j < this.overlays[i].x.length; j += 1) {\r\n          if (this.closeEnough(from.x, from.y, this.overlays[i].x[j], this.overlays[i].y[j])) {\r\n            this.dragging = true\r\n            this.dragOverlay = i\r\n            this.dragPoint = j\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.dragging) {\r\n      this.overlays[this.dragOverlay].x[this.dragPoint] = parseInt(to.x, 10)\r\n      this.overlays[this.dragOverlay].y[this.dragPoint] = parseInt(to.y, 10)\r\n      this.overlays[this.dragOverlay].length =\r\n        this.calculateLength(this.overlays[this.dragOverlay].x, this.overlays[this.dragOverlay].y) * this.metresPerPixel\r\n      this.createMeasureDialog()\r\n      //redraw()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  mouseUp(x, y) {\r\n    if (!this.measuring) {\r\n      return\r\n    }\r\n    this.dragging = false\r\n    if (!this.currentOverlay.started) {\r\n      this.startOverlay()\r\n    }\r\n    // double click so  treat as an end to drawing\r\n    if (\r\n      x === this.currentOverlay.x[this.currentOverlay.x.length - 1] &&\r\n      y === this.currentOverlay.y[this.currentOverlay.x.length - 1]\r\n    ) {\r\n      this.endOverlay()\r\n    } else {\r\n      this.currentOverlay.x.push(x)\r\n      this.currentOverlay.y.push(y)\r\n      this.currentOverlay.length =\r\n        this.calculateLength(this.currentOverlay.x, this.currentOverlay.y) * this.metresPerPixel\r\n      this.createMeasureDialog()\r\n      redraw()\r\n    }\r\n  }\r\n\r\n  startOverlay() {\r\n    this.currentOverlay.started = true\r\n    this.createMeasureDialog()\r\n  }\r\n\r\n  updateOverlays() {\r\n    this.colourIndex = 0\r\n    // recolour and reallocate labels starting from A after deletion\r\n    for (let i = 0; i < this.overlays.length; i += 1) {\r\n      this.overlays[i].id = String.fromCharCode(i + 65)\r\n      this.overlays[i].idx = i\r\n      this.overlays[i].colour = this.getNextColour()\r\n    }\r\n    this.currentOverlay.id = String.fromCharCode(this.overlays.length + 65)\r\n    this.currentOverlay.idx = this.overlays.length\r\n    this.currentOverlay.colour = this.getNextColour()\r\n  }\r\n}\r\n","import { drawAnimation } from \"./animation\"\r\nimport { config, options } from \"./config\"\r\nimport { controls, drawCourses } from \"./courses\"\r\nimport { adjustTrack, dragEnded, drawNewTrack, gpsFileLoaded, mouseUp } from \"./draw\"\r\nimport { getActiveEventID } from \"./events\"\r\nimport { Overlay } from \"./overlay\"\r\nimport { drawTracks } from \"./results\"\r\nimport { getActiveTab } from \"./rg2ui\"\r\nimport { t } from \"./translate\"\r\nimport { getDistanceBetweenPoints, showWarningDialog } from \"./utils\"\r\n\r\nlet canvas = document.getElementById(\"rg2-map-canvas\")\r\nexport let ctx = canvas.getContext(\"2d\")\r\nctx.displayAngle = 0\r\nctx.displayScale = 1\r\nlet map = new Image()\r\nlet overlay = new Overlay(ctx)\r\nlet input = {\r\n  dragStart: null,\r\n  // looks odd but this works for initialisation\r\n  dragged: true,\r\n  scaleFactor: 1.1,\r\n  pinched: false\r\n}\r\nlet savedRedraws = 0\r\nlet redrawTimerID = undefined\r\ndocument.getElementById(\"rg2-load-progress\").classList.add(\"d-none\")\r\ndocument.getElementById(\"rg2-map-load-progress\").classList.add(\"d-none\")\r\n\r\nfunction addListeners() {\r\n  canvas.addEventListener(\"touchstart\", handleTouchStart, false)\r\n  canvas.addEventListener(\"touchmove\", handleTouchMove, false)\r\n  canvas.addEventListener(\"touchend\", handleTouchEnd, false)\r\n  canvas.addEventListener(\"DOMMouseScroll\", handleScroll, false)\r\n  canvas.addEventListener(\"wheel\", handleScroll, false)\r\n  canvas.addEventListener(\"mousedown\", handleMouseDown, false)\r\n  canvas.addEventListener(\"mousemove\", handleMouseMove, false)\r\n  canvas.addEventListener(\"mouseup\", handleMouseUp, false)\r\n\r\n  map.addEventListener(\"load\", () => mapLoadedCallback())\r\n  let btn = document.getElementById(\"btn-zoom-in\")\r\n  btn.addEventListener(\"click\", () => zoom(1))\r\n\r\n  btn = document.getElementById(\"btn-zoom-out\")\r\n  btn.addEventListener(\"click\", () => zoom(-1))\r\n\r\n  btn = document.getElementById(\"btn-rotate-left\")\r\n  btn.addEventListener(\"click\", () => rotateMap(-1))\r\n\r\n  btn = document.getElementById(\"btn-rotate-right\")\r\n  btn.addEventListener(\"click\", () => rotateMap(1))\r\n\r\n  btn = document.getElementById(\"btn-reset\")\r\n  btn.addEventListener(\"click\", () => resetMapState())\r\n}\r\n\r\nexport function alignMap(angle, x, y, moveMap = true, scale = 1) {\r\n  // align to an absolute angle: 0 is up/north\r\n  // rotate around defined x, y\r\n  applyMapRotation((ctx.displayAngle - angle) % (Math.PI * 2), x, y, moveMap, scale)\r\n}\r\n\r\nfunction applyMapRotation(angle, x, y, moveMap, scale) {\r\n  // save new absolute angle\r\n  ctx.displayAngle = (ctx.displayAngle - angle) % (Math.PI * 2)\r\n  // rotate around given co-ordinates\r\n  ctx.translate(x, y)\r\n  ctx.rotate(angle)\r\n  if (scale !== 1) {\r\n    ctx.scale(scale, scale)\r\n    ctx.displayScale = ctx.displayScale * scale\r\n  }\r\n  if (moveMap) {\r\n    // move map so that given point is centre-bottom of screen\r\n    const pt = getCentreBottom()\r\n    ctx.translate(pt.x - x, pt.y - y)\r\n  } else {\r\n    // put map back where it started\r\n    ctx.translate(-1 * x, -1 * y)\r\n  }\r\n  redraw()\r\n}\r\n\r\nfunction drawDefaultText() {\r\n  if (!config.managing() && window.innerWidth >= config.BIG_SCREEN_BREAK_POINT) {\r\n    ctx.font = \"16pt Arial\"\r\n    ctx.textAlign = \"center\"\r\n    ctx.fillStyle = config.BLACK\r\n    const pt = ctx.transformedPoint(canvas.width / 2, canvas.height / 2)\r\n    ctx.fillText(\"Routegadget 2 Version \" + config.RG2VERSION, pt.x, pt.y)\r\n  }\r\n}\r\n\r\nexport function getCentreBottom() {\r\n  const controlsHeight = document.getElementById(\"rg2-animation-controls\").offsetHeight\r\n  return ctx.transformedPoint(canvas.width / 2, (canvas.height - controlsHeight) * 0.85)\r\n}\r\n\r\nexport function getCentreTop() {\r\n  const controlsHeight = document.getElementById(\"rg2-animation-controls\").offsetHeight\r\n  return ctx.transformedPoint(canvas.width / 2, (canvas.height - controlsHeight) * 0.15)\r\n}\r\n\r\nexport function getMapSize() {\r\n  return { height: map.height, width: map.width }\r\n}\r\n\r\nfunction handleInputDown(e) {\r\n  input.dragStart = ctx.transformedPoint(input.lastX, input.lastY)\r\n  input.dragged = false\r\n  // need to cache this here since IE and FF don't set it for mousemove events\r\n  input.whichButton = e.which\r\n}\r\n\r\nfunction handleInputMove() {\r\n  if (input.dragStart) {\r\n    const to = ctx.transformedPoint(input.lastX, input.lastY)\r\n    to.x = Math.round(to.x)\r\n    to.y = Math.round(to.y)\r\n    const from = { x: Math.round(input.dragStart.x), y: Math.round(input.dragStart.y) }\r\n    const button = input.whichButton\r\n    // simple debounce so that very small drags are treated as clicks instead\r\n    if (Math.abs(to.x - from.x) + Math.abs(to.y - from.y) > 5) {\r\n      if (gpsFileLoaded()) {\r\n        adjustTrack(from, to, button)\r\n      } else {\r\n        if (getActiveTab() === config.TAB_CREATE) {\r\n          rg2Config.manager.adjustManagerControls(from, to, button)\r\n        } else {\r\n          const overlayDragged = overlay.mouseDrag(from, to)\r\n          if (!overlayDragged) {\r\n            ctx.translate(to.x - input.dragStart.x, to.y - input.dragStart.y)\r\n          }\r\n        }\r\n      }\r\n      input.dragged = true\r\n      redraw()\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleInputUp(e) {\r\n  // console.log(\"Up\", e.pageX, e.pageY, e)\r\n  const activeTab = getActiveTab()\r\n  if (!input.dragged) {\r\n    if (activeTab === config.TAB_CREATE) {\r\n      const x = Math.round(input.dragStart.x)\r\n      const y = Math.round(input.dragStart.y)\r\n      rg2Config.manager.managerMouseUp(x, y)\r\n    } else {\r\n      // pass button that was clicked\r\n      if (activeTab === config.TAB_DRAW) {\r\n        mouseUp(Math.round(input.dragStart.x), Math.round(input.dragStart.y), e.which)\r\n      } else {\r\n        // on results or courses tab\r\n        overlay.mouseUp(Math.round(input.dragStart.x), Math.round(input.dragStart.y))\r\n      }\r\n    }\r\n  } else {\r\n    if (activeTab === config.TAB_CREATE) {\r\n      rg2Config.manager.managerDragEnded()\r\n    } else {\r\n      if (activeTab === config.TAB_DRAW) {\r\n        dragEnded()\r\n      } else {\r\n        // on results or courses tab\r\n        overlay.dragEnded()\r\n      }\r\n    }\r\n  }\r\n  input.dragStart = null\r\n  redraw()\r\n}\r\n\r\nfunction handleMouseDown(e) {\r\n  saveMouseEvent(e)\r\n  handleInputDown(e)\r\n  e.stopPropagation()\r\n  return e.preventDefault()\r\n}\r\n\r\nfunction handleMouseMove(e) {\r\n  saveMouseEvent(e)\r\n  handleInputMove(e)\r\n  e.stopPropagation()\r\n  return e.preventDefault()\r\n}\r\n\r\nfunction handleMouseUp(e) {\r\n  handleInputUp(e)\r\n  e.stopPropagation()\r\n  return e.preventDefault()\r\n}\r\n\r\nfunction handleScroll(e) {\r\n  // console.log(e)\r\n  const delta = e.wheelDelta ? e.wheelDelta / 40 : e.detail ? -e.detail : 0\r\n  if (delta) {\r\n    zoom(delta)\r\n  }\r\n  e.stopPropagation()\r\n  return e.preventDefault()\r\n}\r\n\r\nfunction handleTouchEnd(e) {\r\n  // console.log(\"Touch end \", e)\r\n  handleInputUp(e)\r\n  input.pinched = false\r\n}\r\n\r\nfunction handleTouchMove(e) {\r\n  // console.log(\"Touch move \", e)\r\n  if (e.touches.length > 1) {\r\n    if (!input.pinched) {\r\n      savePinchInfo(e)\r\n    }\r\n  } else {\r\n    input.pinched = false\r\n  }\r\n  if (input.pinched && e.touches.length > 1) {\r\n    input.pinchEnd0 = ctx.transformedPoint(e.touches[0].pageX, e.touches[0].pageY)\r\n    input.pinchEnd1 = ctx.transformedPoint(e.touches[1].pageX, e.touches[1].pageY)\r\n    const oldDistance = getDistanceBetweenPoints(\r\n      input.pinchStart0.x,\r\n      input.pinchStart0.y,\r\n      input.pinchStart1.x,\r\n      input.pinchStart1.y\r\n    )\r\n    const newDistance = getDistanceBetweenPoints(\r\n      input.pinchEnd0.x,\r\n      input.pinchEnd0.y,\r\n      input.pinchEnd1.x,\r\n      input.pinchEnd1.y\r\n    )\r\n    // console.log (\"Pinch distance\", oldDistance / newDistance)\r\n    if (oldDistance / newDistance > 1.1) {\r\n      zoom(-1)\r\n      input.pinchStart0 = input.pinchEnd0\r\n      input.pinchStart1 = input.pinchEnd1\r\n    } else if (oldDistance / newDistance < 0.9) {\r\n      zoom(1)\r\n      input.pinchStart0 = input.pinchEnd0\r\n      input.pinchStart1 = input.pinchEnd1\r\n    }\r\n  } else {\r\n    input.lastX = e.touches[0].pageX\r\n    input.lastY = e.touches[0].pageY\r\n    handleInputMove(e)\r\n  }\r\n}\r\n\r\n// homegrown touch handling: seems no worse than adding some other library in\r\n// pinch zoom is primitive but works\r\nfunction handleTouchStart(e) {\r\n  // console.log(\"Touch start\", e)\r\n  e.preventDefault()\r\n  if (e.touches.length > 1) {\r\n    savePinchInfo(e)\r\n  }\r\n  input.lastX = e.touches[0].pageX\r\n  input.lastY = e.touches[0].pageY\r\n  handleInputDown(e)\r\n}\r\n\r\nexport function initialiseCanvas() {\r\n  addListeners()\r\n  trackTransforms(ctx)\r\n  resizeCanvas()\r\n}\r\n\r\nexport function loadNewMap(mapFile, isBeingCreated = false) {\r\n  document.getElementById(\"rg2-map-load-progress-label\").textContent = t(\"Loading map\", \"\")\r\n  document.getElementById(\"rg2-map-load-progress\").classList.remove(\"d-none\")\r\n  map.onerror = () => {\r\n    // probably a 404: should only really happen in testing\r\n    // clear loading indicator\r\n    document.getElementById(\"rg2-map-load-progress\").classList.add(\"d-none\")\r\n    showWarningDialog(\"Map load error\", \"The map for this event could not be loaded.\")\r\n  }\r\n  // setting src on an Image automatically triggers a request to load the map\r\n  // if this is a new map being created by the manager then just use the name we got\r\n  // else we are loading an existing map from the server\r\n  // adding date forces reload from server and avoids all sorts of caching problems with images\r\n  map.src = isBeingCreated ? mapFile : mapFile + \"?\" + Date.now()\r\n}\r\n\r\nfunction mapLoadedCallback() {\r\n  document.getElementById(\"rg2-map-load-progress\").classList.add(\"d-none\")\r\n  resetMapState()\r\n  if (config.managing()) {\r\n    rg2Config.manager.managerMapLoadCallback()\r\n  }\r\n}\r\n\r\n// called whenever anything changes enough to need screen redraw\r\nexport function redraw() {\r\n  // timer used to debounce redraw for significant performance improvement\r\n  // if timer not running then schedule a redraw\r\n  if (redrawTimerID === undefined) {\r\n    // console.log(savedRedraws + \" saved redraws\")\r\n    savedRedraws = 0\r\n    redrawTimerID = setTimeout(() => {\r\n      redrawTimerID = undefined\r\n      doRedraw()\r\n    }, 50)\r\n  } else {\r\n    // timer is already running so redraw will happen when timer expires\r\n    savedRedraws = savedRedraws + 1\r\n  }\r\n}\r\n\r\nfunction doRedraw() {\r\n  // console.time(\"redraw\")\r\n  // Clear the entire canvas\r\n  // first save current transformed state\r\n  ctx.save()\r\n  // reset everything back to initial size/state/orientation\r\n  ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n  // fill canvas to erase things: clearRect doesn't work on Android (?) and leaves the old map as background when changing\r\n  ctx.globalAlpha = config.FULL_INTENSITY\r\n  ctx.fillStyle = config.GREY\r\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n  // go back to where we started\r\n  ctx.restore()\r\n  // using non-zero map height to show we have a map loaded\r\n  if (map.height > 0) {\r\n    // set map background white so that dimmed maps do not have grey showing through\r\n    ctx.fillStyle = config.WHITE\r\n    // this might have been reset by the ctx.restore()\r\n    ctx.globalAlpha = config.FULL_INTENSITY\r\n    ctx.fillRect(0, 0, map.width, map.height)\r\n    // set transparency of map\r\n    ctx.globalAlpha = options.perCentMapIntensity / 100\r\n    ctx.drawImage(map, 0, 0)\r\n    const tab = getActiveTab()\r\n    if (tab === config.TAB_DRAW) {\r\n      drawCourses(config.DIM)\r\n      controls.drawControls(false)\r\n      drawTracks()\r\n      drawNewTrack()\r\n    } else {\r\n      if (tab === config.TAB_CREATE) {\r\n        rg2Config.manager.drawManagerControls()\r\n      } else {\r\n        drawCourses(config.DIM)\r\n        drawTracks()\r\n        overlay.drawOverlays()\r\n        controls.drawControls(false)\r\n        drawAnimation()\r\n      }\r\n    }\r\n  } else {\r\n    drawDefaultText()\r\n  }\r\n  // console.timeEnd(\"redraw\")\r\n}\r\n\r\nexport function resetMapState() {\r\n  // place map in centre of canvas and scale it down to fit\r\n  let mapscale = 1\r\n  const heightscale = canvas.height / map.height\r\n  input.lastX = canvas.width / 2\r\n  input.lastY = canvas.height / 2\r\n  input.zoomSize = 1\r\n  input.dragStart = null\r\n  // looks odd but this works for initialisation\r\n  input.dragged = true\r\n  // don't stretch map: just shrink to fit\r\n  if (heightscale < 1) {\r\n    mapscale = heightscale\r\n  }\r\n  // move map into view on small screens\r\n  // avoid annoying jumps on larger screens\r\n  if (window.innerWidth >= config.BIG_SCREEN_BREAK_POINT) {\r\n    // TODO sort out offsets for control panel\r\n    ctx.setTransform(mapscale, 0, 0, mapscale, document.getElementById(\"rg2-left-info-panel\").offsetWidth + 80, 0)\r\n  } else {\r\n    ctx.setTransform(mapscale, 0, 0, mapscale, 0, 0)\r\n  }\r\n  // don't need to rotate here since the call to setTransform above does that for us\r\n  ctx.displayAngle = 0\r\n  ctx.displayScale = mapscale\r\n  redraw()\r\n}\r\n\r\nexport function resizeCanvas() {\r\n  input.scaleFactor = config.DEFAULT_SCALE_FACTOR\r\n  // allow for header\r\n  const headerHeight = document.getElementById(\"rg2-header-container\").offsetHeight\r\n  document.getElementById(\"rg2-container\").style.height = window.innerHeight - headerHeight + \"px\"\r\n  canvas.width = window.innerWidth\r\n  canvas.height = window.innerHeight - headerHeight\r\n  resetMapState()\r\n}\r\n\r\nfunction rotateMap(direction) {\r\n  // rotate a little bit from UI control input\r\n  // direction is -1 for left and 1 for right\r\n  const angle = direction * (Math.PI / 36)\r\n  // rotate around centre of map\r\n  ctx.translate(map.width / 2, map.height / 2)\r\n  applyMapRotation(angle, 0, 0, false, 1)\r\n  ctx.translate(-map.width / 2, -map.height / 2)\r\n}\r\n\r\nfunction saveMouseEvent(e) {\r\n  input.lastX = e.pageX - canvas.offsetParent.offsetLeft\r\n  input.lastY = e.pageY - canvas.offsetParent.offsetTop\r\n}\r\n\r\nfunction savePinchInfo(e) {\r\n  input.pinchStart0 = ctx.transformedPoint(e.touches[0].pageX, e.touches[0].pageY)\r\n  input.pinchStart1 = ctx.transformedPoint(e.touches[1].pageX, e.touches[1].pageY)\r\n  input.pinched = true\r\n}\r\n\r\nfunction trackTransforms(oldctx) {\r\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\")\r\n  let xform = svg.createSVGMatrix()\r\n  let savedTransforms = []\r\n  let save = oldctx.save\r\n  oldctx.save = function () {\r\n    savedTransforms.push(xform.translate(0, 0))\r\n    return save.call(oldctx)\r\n  }\r\n  let restore = oldctx.restore\r\n  oldctx.restore = function () {\r\n    xform = savedTransforms.pop()\r\n    return restore.call(oldctx)\r\n  }\r\n  let scale = oldctx.scale\r\n  oldctx.scale = function (sx, sy) {\r\n    xform = xform.scale(sx, sy)\r\n    return scale.call(oldctx, sx, sy)\r\n  }\r\n  let translate = oldctx.translate\r\n  oldctx.translate = function (dx, dy) {\r\n    xform = xform.translate(dx, dy)\r\n    return translate.call(oldctx, dx, dy)\r\n  }\r\n  let setTransform = oldctx.setTransform\r\n  oldctx.setTransform = function (a, b, c, d, e, f) {\r\n    xform.a = a\r\n    xform.b = b\r\n    xform.c = c\r\n    xform.d = d\r\n    xform.e = e\r\n    xform.f = f\r\n    return setTransform.call(oldctx, a, b, c, d, e, f)\r\n  }\r\n  let pt = svg.createSVGPoint()\r\n  oldctx.transformedPoint = function (x, y) {\r\n    // converts x, y screen co-ords to x, y in map image\r\n    pt.x = x\r\n    pt.y = y\r\n    return pt.matrixTransform(xform.inverse())\r\n  }\r\n  let rotate = oldctx.rotate\r\n  oldctx.rotate = function (radians) {\r\n    xform = xform.rotate((radians * 180) / Math.PI)\r\n    return rotate.call(oldctx, radians)\r\n  }\r\n}\r\n\r\nfunction zoom(zoomDirection) {\r\n  if (!config.managing() && getActiveEventID() === null) {\r\n    return\r\n  }\r\n  const factor = Math.pow(input.scaleFactor, zoomDirection)\r\n  const tempZoom = input.zoomSize * factor\r\n  // limit zoom to avoid things disappearing\r\n  // chosen values seem reasonable after some quick tests\r\n  if (tempZoom < config.MAX_ZOOM && tempZoom > config.MIN_ZOOM) {\r\n    input.zoomSize = tempZoom\r\n    const pt = ctx.transformedPoint(input.lastX, input.lastY)\r\n    ctx.translate(pt.x, pt.y)\r\n    ctx.scale(factor, factor)\r\n    ctx.displayScale = ctx.displayScale * factor\r\n    ctx.translate(-pt.x, -pt.y)\r\n    redraw()\r\n  }\r\n}\r\n","import \"../scss/rg2.scss\"\r\n// eslint-disable-next-line no-unused-vars\r\nimport * as bootstrap from \"bootstrap\"\r\nimport { initialiseCanvas } from \"./canvas\"\r\nimport { config, loadConfigOptions } from \"./config\"\r\nimport { initialiseCourses } from \"./courses\"\r\nimport { doGetEvents, getActiveKartatID, isValidKartatID, loadEventByKartatID } from \"./events\"\r\nimport { parseLocationHash } from \"./hash\"\r\nimport { configureUI } from \"./rg2ui\"\r\nimport { initLanguageOptions } from \"./translate\"\r\nimport { showWarningDialog } from \"./utils.js\"\r\n\r\nwindow.assetUrl = function (filename) {\r\n  return rg2Config.asset_url + filename\r\n}\r\n\r\nif (document.readyState !== \"loading\") {\r\n  rg2init()\r\n} else {\r\n  document.addEventListener(\"DOMContentLoaded\", rg2init)\r\n}\r\n\r\nfunction rg2init() {\r\n  const startup = document.querySelector(\".rg2-startup\")\r\n  startup.style.opacity = 0\r\n  startup.addEventListener(\"transitionend\", () => {\r\n    startup.remove()\r\n    // TODO: looks odd but needed to avoid problems with Controls class\r\n    initialiseCourses()\r\n    loadConfigOptions()\r\n    configureUI()\r\n    initLanguageOptions()\r\n    if (config.managing()) {\r\n      import(\"./manager.js\")\r\n        .then((module) => {\r\n          rg2Config.manager = module\r\n          rg2Config.manager.initialiseManager(rg2Config.keksi)\r\n          finishInit()\r\n        })\r\n        .catch(() => {\r\n          console.log(\"Error loading manager\")\r\n          showWarningDialog(\"Error loading manager\", \"Manager functionality failed to  load.\")\r\n        })\r\n    } else {\r\n      finishInit()\r\n    }\r\n  })\r\n}\r\n\r\nfunction finishInit() {\r\n  initialiseCanvas()\r\n  window.onpopstate = handleNavigation\r\n  // check if a specific event has been requested\r\n  if (window.location.hash && !config.managing()) {\r\n    parseLocationHash(window.location.hash)\r\n  }\r\n  document.getElementById(\"rg2-event-title\").innerHTML = \"Routegadget 2\"\r\n  doGetEvents()\r\n}\r\n\r\nfunction handleNavigation() {\r\n  // console.log(\"Pop \" + window.location.hash)\r\n  // strange null popstates get generated when you toggle the left info panel via the rg2 logo\r\n  // so just protect against it for now\r\n  if (window.location.hash === \"\") {\r\n    return\r\n  }\r\n  // don't try to do anything clever in manager\r\n  if (!config.managing()) {\r\n    // find out where we are trying to go\r\n    const requestedKartatID = parseLocationHash(window.location.hash)\r\n    if (isValidKartatID(requestedKartatID)) {\r\n      // prevent double loading of events for cases where we get popstate for a change\r\n      // triggered via RG2 interaction rather than browser navigation\r\n      // ... or something like that: at least this seems to work in FF, Chrome and Edge\r\n      // which is a start\r\n      if (getActiveKartatID() !== requestedKartatID) {\r\n        loadEventByKartatID(requestedKartatID)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { generateSelectOption } from \"./utils\"\r\n\r\nexport class Georefs {\r\n  constructor() {\r\n    this.georefsystems = []\r\n    this.georefsystems.push({ name: \"Not georeferenced\", description: \"none\", params: \"\", value: 0 })\r\n    this.georefsystems.push({\r\n      name: \"GB National Grid\",\r\n      description: \"EPSG:27700\",\r\n      params:\r\n        \"+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs\",\r\n      value: 1\r\n    })\r\n    this.georefsystems.push({\r\n      name: \"Google EPSG:900913\",\r\n      description: \"EPSG:900913\",\r\n      params:\r\n        \"+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\",\r\n      value: 2\r\n    })\r\n    if (rg2Config.epsg_code !== undefined) {\r\n      // if more than one user-defined then they come in as |-separated strings\r\n      const codes = rg2Config.epsg_code.split(\"|\")\r\n      const params = rg2Config.epsg_params.split(\"|\")\r\n      for (let i = 0; i < codes.length; i = i + 1) {\r\n        this.georefsystems.push({\r\n          name: codes[i].replace(\" \", \"\"),\r\n          description: codes[i].replace(\" \", \"\"),\r\n          params: params[i],\r\n          value: i + 3\r\n        })\r\n      }\r\n      // default value for select option is first of the newly added items, afetr None, GBNG and Google\r\n      this.defaultGeorefVal = 3\r\n    } else {\r\n      // default to GB National Grid\r\n      this.defaultGeorefVal = 1\r\n    }\r\n  }\r\n\r\n  getDefaultValue() {\r\n    return this.georefsystems[this.defaultGeorefVal].value\r\n  }\r\n\r\n  getGeorefDropdown() {\r\n    let html = \"\"\r\n    for (let i = 0; i < this.georefsystems.length; i += 1) {\r\n      html += generateSelectOption(i, this.georefsystems[i].name, i === 0)\r\n    }\r\n    return html\r\n  }\r\n\r\n  getGeorefSystem(index) {\r\n    return this.georefsystems[index]\r\n  }\r\n}\r\n","import { Worldfile } from \"./worldfile\"\r\n\r\n// can't call this Map since that is a built-in class\r\nexport class MapData {\r\n  constructor(data) {\r\n    if (data !== undefined) {\r\n      // existing map from database\r\n      this.mapid = data.mapid\r\n      this.name = data.name\r\n      // worldfile for GPS to map image conversion (for GPS files)\r\n      this.worldfile = new Worldfile(data)\r\n      // worldfile for local co-ords to map image conversion (for georeferenced courses)\r\n      this.localworldfile = new Worldfile({\r\n        A: data.localA,\r\n        B: data.localB,\r\n        C: data.localC,\r\n        D: data.localD,\r\n        E: data.localE,\r\n        F: data.localF\r\n      })\r\n      if (data.mapfilename === undefined) {\r\n        this.mapfilename = this.mapid + \".\" + \"jpg\"\r\n      } else {\r\n        this.mapfilename = data.mapfilename\r\n      }\r\n    } else {\r\n      // new map to be added\r\n      this.mapid = 0\r\n      this.name = \"\"\r\n      this.worldfile = new Worldfile(0)\r\n      this.localworldfile = new Worldfile(0)\r\n    }\r\n    this.xpx = []\r\n    this.ypx = []\r\n    this.lat = []\r\n    this.lon = []\r\n  }\r\n}\r\n","export class User {\r\n  constructor(keksi) {\r\n    this.x = \"\"\r\n    this.y = keksi\r\n    this.name = null\r\n    this.password = null\r\n  }\r\n\r\n  setDetails(nameSelector, passwordSelector) {\r\n    // mickey mouse 5 character requirement\r\n    const regex = /...../\r\n    this.name = document.getElementById(nameSelector).value\r\n    const nameValid = regex.test(this.name)\r\n    this.password = document.getElementById(passwordSelector).value\r\n    const passwordValid = regex.test(this.password)\r\n    return nameValid && passwordValid\r\n  }\r\n\r\n  alterString(input, pattern) {\r\n    let str = \"\"\r\n    for (let i = 0; i < input.length; i += 1) {\r\n      str += input.charAt(i) + pattern.charAt(i)\r\n    }\r\n    return str\r\n  }\r\n\r\n  encodeUser() {\r\n    return { x: this.alterString(this.name + this.password, this.y), y: this.y }\r\n  }\r\n}\r\n"],"file":"assets/main-D9_pgpFN.js"}